{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12","program":"C:\\Users\\Schwartza\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","ring","--edition=2018","C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"dev_urandom_fallback\"","--cfg","feature=\"lazy_static\"","-C","metadata=d24b46bdb6ec3fa5","-C","extra-filename=-d24b46bdb6ec3fa5","--out-dir","c:\\Users\\Schwartza\\Desktop\\prog2020\\rustServer\\nyan-server\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Schwartza\\Desktop\\prog2020\\rustServer\\nyan-server\\target\\rls\\debug\\deps","--extern","spin=c:\\Users\\Schwartza\\Desktop\\prog2020\\rustServer\\nyan-server\\target\\rls\\debug\\deps\\libspin-9ebe7b3dabdf3c16.rmeta","--extern","untrusted=c:\\Users\\Schwartza\\Desktop\\prog2020\\rustServer\\nyan-server\\target\\rls\\debug\\deps\\libuntrusted-21dd6c34f330be7a.rmeta","--extern","winapi=c:\\Users\\Schwartza\\Desktop\\prog2020\\rustServer\\nyan-server\\target\\rls\\debug\\deps\\libwinapi-3f23e79af2f36c0f.rmeta","--cap-lints","allow","-L","native=c:\\Users\\Schwartza\\Desktop\\prog2020\\rustServer\\nyan-server\\target\\rls\\debug\\build\\ring-4acf1cd22144f21a\\out","-l","static=ring-core","-l","static=ring-test","--error-format=json","--sysroot","C:\\Users\\Schwartza\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Schwartza\\Desktop\\prog2020\\rustServer\\nyan-server\\target\\rls\\debug\\deps\\libring-d24b46bdb6ec3fa5.rmeta"},"prelude":{"crate_id":{"name":"ring","disambiguator":[2122934680493614406,1836002372680174457]},"crate_root":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src","external_crates":[{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[4886921161452974022,9452701908620647308]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3203561457090851205,4632072058037203867]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3169376498131592849,9803978538207206865]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[9199649512872691809,295485750221223515]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","num":5,"id":{"name":"untrusted","disambiguator":[9929843944993076698,13670261585173995080]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":6,"id":{"name":"winapi","disambiguator":[5406763165699698506,16331373344765795188]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":7,"id":{"name":"std","disambiguator":[2953284957370121905,516218847044108999]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":8,"id":{"name":"libc","disambiguator":[8443236399884245798,5222098755004489868]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":9,"id":{"name":"unwind","disambiguator":[6875631416372754603,10839808870381595949]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":10,"id":{"name":"cfg_if","disambiguator":[1502820548942319655,12324332090615114041]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":11,"id":{"name":"backtrace","disambiguator":[430706850608609257,9838809896428719127]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[14503357713055743246,17731918345561731946]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":13,"id":{"name":"hashbrown","disambiguator":[5693586899772496405,17220236988479499600]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1060170945230123807,4750192540160149325]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[5837979218880944404,14867613958503134191]}},{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\cpu.rs","num":16,"id":{"name":"spin","disambiguator":[5416878693564747782,14062722044955156970]}}],"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":770,"byte_end":3296,"line_start":15,"line_end":127,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85729,"byte_end":85740,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"alias_span":null,"name":"AES_128_GCM","value":"","parent":{"krate":0,"index":363}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85742,"byte_end":85753,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"alias_span":null,"name":"AES_256_GCM","value":"","parent":{"krate":0,"index":363}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85779,"byte_end":85796,"line_start":30,"line_end":30,"column_start":24,"column_end":41},"alias_span":null,"name":"CHACHA20_POLY1305","value":"","parent":{"krate":0,"index":363}},{"kind":"Use","ref_id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85810,"byte_end":85815,"line_start":31,"line_end":31,"column_start":13,"column_end":18},"alias_span":null,"name":"Nonce","value":"","parent":{"krate":0,"index":363}},{"kind":"Use","ref_id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85817,"byte_end":85826,"line_start":31,"line_end":31,"column_start":20,"column_end":29},"alias_span":null,"name":"NONCE_LEN","value":"","parent":{"krate":0,"index":363}},{"kind":"Use","ref_id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178262,"byte_end":178268,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"alias_span":null,"name":"X25519","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178290,"byte_end":178299,"line_start":70,"line_end":70,"column_start":21,"column_end":30},"alias_span":null,"name":"ECDH_P256","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178301,"byte_end":178310,"line_start":70,"line_end":70,"column_start":32,"column_end":41},"alias_span":null,"name":"ECDH_P384","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io.rs","byte_start":192434,"byte_end":192442,"line_start":28,"line_end":28,"column_start":25,"column_end":33},"alias_span":null,"name":"Positive","value":"","parent":{"krate":0,"index":1098}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574953,"byte_end":574967,"line_start":264,"line_end":264,"column_start":18,"column_end":32},"alias_span":null,"name":"Ed25519KeyPair","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574992,"byte_end":575007,"line_start":265,"line_end":265,"column_start":24,"column_end":39},"alias_span":null,"name":"EdDSAParameters","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575009,"byte_end":575016,"line_start":265,"line_end":265,"column_start":41,"column_end":48},"alias_span":null,"name":"ED25519","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575027,"byte_end":575049,"line_start":266,"line_end":266,"column_start":9,"column_end":31},"alias_span":null,"name":"ED25519_PUBLIC_KEY_LEN","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575111,"byte_end":575123,"line_start":270,"line_end":270,"column_start":13,"column_end":25},"alias_span":null,"name":"EcdsaKeyPair","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575125,"byte_end":575146,"line_start":270,"line_end":270,"column_start":27,"column_end":48},"alias_span":null,"name":"EcdsaSigningAlgorithm","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575148,"byte_end":575178,"line_start":270,"line_end":270,"column_start":50,"column_end":80},"alias_span":null,"name":"ECDSA_P256_SHA256_ASN1_SIGNING","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575192,"byte_end":575223,"line_start":271,"line_end":271,"column_start":13,"column_end":44},"alias_span":null,"name":"ECDSA_P256_SHA256_FIXED_SIGNING","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575225,"byte_end":575255,"line_start":271,"line_end":271,"column_start":46,"column_end":76},"alias_span":null,"name":"ECDSA_P384_SHA384_ASN1_SIGNING","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575269,"byte_end":575300,"line_start":272,"line_end":272,"column_start":13,"column_end":44},"alias_span":null,"name":"ECDSA_P384_SHA384_FIXED_SIGNING","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575349,"byte_end":575375,"line_start":275,"line_end":275,"column_start":13,"column_end":39},"alias_span":null,"name":"EcdsaVerificationAlgorithm","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575377,"byte_end":575399,"line_start":275,"line_end":275,"column_start":41,"column_end":63},"alias_span":null,"name":"ECDSA_P256_SHA256_ASN1","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575401,"byte_end":575424,"line_start":275,"line_end":275,"column_start":65,"column_end":88},"alias_span":null,"name":"ECDSA_P256_SHA256_FIXED","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575438,"byte_end":575460,"line_start":276,"line_end":276,"column_start":13,"column_end":35},"alias_span":null,"name":"ECDSA_P256_SHA384_ASN1","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575462,"byte_end":575484,"line_start":276,"line_end":276,"column_start":37,"column_end":59},"alias_span":null,"name":"ECDSA_P384_SHA256_ASN1","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575486,"byte_end":575508,"line_start":276,"line_end":276,"column_start":61,"column_end":83},"alias_span":null,"name":"ECDSA_P384_SHA384_ASN1","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575522,"byte_end":575545,"line_start":277,"line_end":277,"column_start":13,"column_end":36},"alias_span":null,"name":"ECDSA_P384_SHA384_FIXED","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":2455},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575630,"byte_end":575640,"line_start":284,"line_end":284,"column_start":14,"column_end":24},"alias_span":null,"name":"RsaKeyPair","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575655,"byte_end":575674,"line_start":285,"line_end":285,"column_start":14,"column_end":33},"alias_span":null,"name":"RsaSubjectPublicKey","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575705,"byte_end":575727,"line_start":288,"line_end":288,"column_start":9,"column_end":31},"alias_span":null,"name":"RsaPublicKeyComponents","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3262},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575729,"byte_end":575773,"line_start":288,"line_end":288,"column_start":33,"column_end":77},"alias_span":null,"name":"RSA_PKCS1_1024_8192_SHA1_FOR_LEGACY_USE_ONLY","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3264},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575783,"byte_end":575829,"line_start":289,"line_end":289,"column_start":9,"column_end":55},"alias_span":null,"name":"RSA_PKCS1_1024_8192_SHA256_FOR_LEGACY_USE_ONLY","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575839,"byte_end":575883,"line_start":290,"line_end":290,"column_start":9,"column_end":53},"alias_span":null,"name":"RSA_PKCS1_2048_8192_SHA1_FOR_LEGACY_USE_ONLY","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575885,"byte_end":575911,"line_start":290,"line_end":290,"column_start":55,"column_end":81},"alias_span":null,"name":"RSA_PKCS1_2048_8192_SHA256","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3266},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575921,"byte_end":575947,"line_start":291,"line_end":291,"column_start":9,"column_end":35},"alias_span":null,"name":"RSA_PKCS1_2048_8192_SHA384","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575949,"byte_end":575975,"line_start":291,"line_end":291,"column_start":37,"column_end":63},"alias_span":null,"name":"RSA_PKCS1_2048_8192_SHA512","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":575977,"byte_end":576003,"line_start":291,"line_end":291,"column_start":65,"column_end":91},"alias_span":null,"name":"RSA_PKCS1_3072_8192_SHA384","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3269},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576013,"byte_end":576037,"line_start":292,"line_end":292,"column_start":9,"column_end":33},"alias_span":null,"name":"RSA_PSS_2048_8192_SHA256","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576039,"byte_end":576063,"line_start":292,"line_end":292,"column_start":35,"column_end":59},"alias_span":null,"name":"RSA_PSS_2048_8192_SHA384","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576065,"byte_end":576089,"line_start":292,"line_end":292,"column_start":61,"column_end":85},"alias_span":null,"name":"RSA_PSS_2048_8192_SHA512","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576103,"byte_end":576114,"line_start":295,"line_end":295,"column_start":5,"column_end":16},"alias_span":null,"name":"RsaEncoding","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3247},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576120,"byte_end":576133,"line_start":296,"line_end":296,"column_start":5,"column_end":18},"alias_span":null,"name":"RsaParameters","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576397,"byte_end":576413,"line_start":302,"line_end":302,"column_start":5,"column_end":21},"alias_span":null,"name":"RSA_PKCS1_SHA256","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3230},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576419,"byte_end":576435,"line_start":303,"line_end":303,"column_start":5,"column_end":21},"alias_span":null,"name":"RSA_PKCS1_SHA384","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3231},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576441,"byte_end":576457,"line_start":304,"line_end":304,"column_start":5,"column_end":21},"alias_span":null,"name":"RSA_PKCS1_SHA512","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3244},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576464,"byte_end":576478,"line_start":306,"line_end":306,"column_start":5,"column_end":19},"alias_span":null,"name":"RSA_PSS_SHA256","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3245},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576484,"byte_end":576498,"line_start":307,"line_end":307,"column_start":5,"column_end":19},"alias_span":null,"name":"RSA_PSS_SHA384","value":"","parent":{"krate":0,"index":2518}},{"kind":"Use","ref_id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576504,"byte_end":576518,"line_start":308,"line_end":308,"column_start":5,"column_end":19},"alias_span":null,"name":"RSA_PSS_SHA512","value":"","parent":{"krate":0,"index":2518}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":770,"byte_end":3296,"line_start":15,"line_end":127,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":17},{"krate":0,"index":67},{"krate":0,"index":341},{"krate":0,"index":347},{"krate":0,"index":363},{"krate":0,"index":1017},{"krate":0,"index":1078},{"krate":0,"index":1087},{"krate":0,"index":1091},{"krate":0,"index":1098},{"krate":0,"index":1180},{"krate":0,"index":1209},{"krate":0,"index":1360},{"krate":0,"index":2053},{"krate":0,"index":2065},{"krate":0,"index":2091},{"krate":0,"index":2123},{"krate":0,"index":2169},{"krate":0,"index":2213},{"krate":0,"index":2229},{"krate":0,"index":2273},{"krate":0,"index":2316},{"krate":0,"index":2518},{"krate":0,"index":2597}],"decl_id":null,"docs":" Safe, fast, small crypto using Rust with BoringSSL's cryptography\n primitives.","sig":null,"attributes":[{"value":"! Safe, fast, small crypto using Rust with BoringSSL's cryptography","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":770,"byte_end":839,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"! primitives.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":840,"byte_end":855,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":856,"byte_end":859,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! <code>git clone https://github.com/briansmith/ring</code>","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":860,"byte_end":921,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":922,"byte_end":925,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # Feature Flags","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":926,"byte_end":945,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":946,"byte_end":949,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! <table>","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":950,"byte_end":961,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"! <tr><th>Feature","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":962,"byte_end":981,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"!     <th>Description","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":982,"byte_end":1005,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"! <tr><td><code>alloc (default)</code>","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1006,"byte_end":1046,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"!     <td>Enable features that require use of the heap, RSA in particular.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1047,"byte_end":1123,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"! <tr><td><code>dev_urandom_fallback (default)</code>","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1124,"byte_end":1179,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"!     <td>This is only applicable to Linux. On Linux, by default,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1180,"byte_end":1247,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"!         <code>ring::rand::SystemRandom</code> will fall back to reading","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1248,"byte_end":1323,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"!         from <code>/dev/urandom</code> if the <code>getrandom()</code>","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1324,"byte_end":1398,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"!         syscall isn't supported at runtime. When the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1399,"byte_end":1455,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"!         <code>dev_urandom_fallback</code> feature is disabled, such","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1456,"byte_end":1527,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"!         fallbacks will not occur. See the documentation for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1528,"byte_end":1591,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"!         <code>rand::SystemRandom</code> for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1592,"byte_end":1653,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"! <tr><td><code>std</code>","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1654,"byte_end":1682,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"!     <td>Enable features that use libstd, in particular `std::error::Error`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1683,"byte_end":1761,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"!         integration.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1762,"byte_end":1786,"line_start":37,"line_end":37,"column_start":1,"column_end":25}},{"value":"! </table>","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1787,"byte_end":1799,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"allow(missing_copy_implementations, missing_debug_implementations,\n        non_camel_case_types, non_snake_case, unsafe_code)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":1860,"byte_end":2003,"line_start":41,"line_end":47,"column_start":1,"column_end":3}},{"value":"deny(missing_docs, unstable_features, unused_qualifications,\n       variant_size_differences,)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2096,"byte_end":2235,"line_start":50,"line_end":55,"column_start":1,"column_end":3}},{"value":"forbid(anonymous_parameters, trivial_casts, trivial_numeric_casts,\n         unused_extern_crates, unused_import_braces, unused_results,\n         warnings)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2236,"byte_end":2406,"line_start":56,"line_end":64,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2407,"byte_end":2417,"line_start":65,"line_end":65,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"test","qualname":"::test","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":2599},{"krate":0,"index":2601},{"krate":0,"index":34},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"decl_id":null,"docs":" Testing framework.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2575,"byte_end":2587,"line_start":74,"line_end":74,"column_start":1,"column_end":13}},{"value":"! Testing framework.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":6958,"byte_end":6980,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":6981,"byte_end":6984,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! Unlike the rest of *ring*, this testing framework uses panics pretty","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":6985,"byte_end":7057,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"! liberally. It was originally designed for internal use--it drives most of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7058,"byte_end":7135,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"! *ring*'s internal tests, and so it is optimized for getting *ring*'s tests","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7136,"byte_end":7214,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"! written quickly at the expense of some usability. The documentation is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7215,"byte_end":7289,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"! lacking. The best way to learn it is to look at some examples. The digest","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7290,"byte_end":7367,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"! tests are the most complicated because they use named sections. Other tests","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7368,"byte_end":7447,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"! avoid named sections and so are easier to understand.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7448,"byte_end":7505,"line_start":23,"line_end":23,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7506,"byte_end":7509,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7510,"byte_end":7524,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7525,"byte_end":7528,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ## Writing Tests","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7529,"byte_end":7549,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7550,"byte_end":7553,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! Input files look like this:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7554,"byte_end":7585,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7586,"byte_end":7589,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7590,"byte_end":7601,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"! # This is a comment.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7602,"byte_end":7626,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7627,"byte_end":7630,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! HMAC = SHA1","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7631,"byte_end":7646,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"! Input = \"My test data\"","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7647,"byte_end":7673,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"! Key = \"\"","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7674,"byte_end":7686,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"! Output = 61afdecb95429ef494d61fdee15990cabf0826fc","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7687,"byte_end":7740,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7741,"byte_end":7744,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! HMAC = SHA256","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7745,"byte_end":7762,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"! Input = \"Sample message for keylen<blocklen\"","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7763,"byte_end":7811,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"! Key = 000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7812,"byte_end":7886,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"! Output = A28CF43130EE696A98F14A37678B56BCFCBDD9E5CF69717FECF5480F0EBDF790","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7887,"byte_end":7964,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7965,"byte_end":7972,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7973,"byte_end":7976,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! Test cases are separated with blank lines. Note how the bytes of the `Key`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":7977,"byte_end":8055,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"! attribute are specified as a quoted string in the first test case and as","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8056,"byte_end":8132,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"! hex in the second test case; you can use whichever form is more convenient","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8133,"byte_end":8211,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"! and you can mix and match within the same file. The empty sequence of bytes","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8212,"byte_end":8291,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"! can only be represented with the quoted string form (`\"\"`).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8292,"byte_end":8355,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8356,"byte_end":8359,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Here's how you would consume the test data:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8360,"byte_end":8407,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8408,"byte_end":8411,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8412,"byte_end":8425,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"! use ring::test;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8426,"byte_end":8445,"line_start":54,"line_end":54,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8446,"byte_end":8449,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! test::run(test::test_file!(\"hmac_tests.txt\"), |section, test_case| {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8450,"byte_end":8522,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"!     assert_eq!(section, \"\"); // This test doesn't use named sections.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8523,"byte_end":8596,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8597,"byte_end":8600,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"!     let digest_alg = test_case.consume_digest_alg(\"HMAC\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8601,"byte_end":8663,"line_start":59,"line_end":59,"column_start":1,"column_end":63}},{"value":"!     let input = test_case.consume_bytes(\"Input\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8664,"byte_end":8717,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"!     let key = test_case.consume_bytes(\"Key\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8718,"byte_end":8767,"line_start":61,"line_end":61,"column_start":1,"column_end":50}},{"value":"!     let output = test_case.consume_bytes(\"Output\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8768,"byte_end":8823,"line_start":62,"line_end":62,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8824,"byte_end":8827,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"!     // Do the actual testing here","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8828,"byte_end":8865,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"! });","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8866,"byte_end":8873,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8874,"byte_end":8881,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8882,"byte_end":8885,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! Note that `consume_digest_alg` automatically maps the string \"SHA1\" to a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8886,"byte_end":8962,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"! reference to `digest::SHA1_FOR_LEGACY_USE_ONLY`, \"SHA256\" to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":8963,"byte_end":9027,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"! `digest::SHA256`, etc.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9028,"byte_end":9054,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9055,"byte_end":9058,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! ## Output When a Test Fails","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9059,"byte_end":9090,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9091,"byte_end":9094,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! When a test case fails, the framework automatically prints out the test","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9095,"byte_end":9170,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! case. If the test case failed with a panic, then the backtrace of the panic","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9171,"byte_end":9250,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"! will be printed too. For example, let's say the failing test case looks","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9251,"byte_end":9326,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"! like this:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9327,"byte_end":9341,"line_start":77,"line_end":77,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9342,"byte_end":9345,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9346,"byte_end":9357,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"! Curve = P-256","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9358,"byte_end":9375,"line_start":80,"line_end":80,"column_start":1,"column_end":18}},{"value":"! a = 2b11cb945c8cf152ffa4c9c2b1c965b019b35d0b7626919ef0ae6cb9d232f8af","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9376,"byte_end":9448,"line_start":81,"line_end":81,"column_start":1,"column_end":73}},{"value":"! b = 18905f76a53755c679fb732b7762251075ba95fc5fedb60179e730d418a9143c","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9449,"byte_end":9521,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"! r = 18905f76a53755c679fb732b7762251075ba95fc5fedb60179e730d418a9143c","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9522,"byte_end":9594,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9595,"byte_end":9602,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"! If the test fails, this will be printed (if `$RUST_BACKTRACE` is `1`):","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9603,"byte_end":9677,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9678,"byte_end":9681,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9682,"byte_end":9693,"line_start":87,"line_end":87,"column_start":1,"column_end":12}},{"value":"! src/example_tests.txt: Test panicked.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9694,"byte_end":9735,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"! Curve = P-256","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9736,"byte_end":9753,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"! a = 2b11cb945c8cf152ffa4c9c2b1c965b019b35d0b7626919ef0ae6cb9d232f8af","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9754,"byte_end":9826,"line_start":90,"line_end":90,"column_start":1,"column_end":73}},{"value":"! b = 18905f76a53755c679fb732b7762251075ba95fc5fedb60179e730d418a9143c","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9827,"byte_end":9899,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"! r = 18905f76a53755c679fb732b7762251075ba95fc5fedb60179e730d418a9143c","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9900,"byte_end":9972,"line_start":92,"line_end":92,"column_start":1,"column_end":73}},{"value":"! thread 'example_test' panicked at 'Test failed.', src\\test.rs:206","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":9973,"byte_end":10042,"line_start":93,"line_end":93,"column_start":1,"column_end":70}},{"value":"! stack backtrace:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10043,"byte_end":10063,"line_start":94,"line_end":94,"column_start":1,"column_end":21}},{"value":"!    0:     0x7ff654a05c7c - std::rt::lang_start::h61f4934e780b4dfc","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10064,"byte_end":10133,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"!    1:     0x7ff654a04f32 - std::rt::lang_start::h61f4934e780b4dfc","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10134,"byte_end":10203,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"!    2:     0x7ff6549f505d - std::panicking::rust_panic_with_hook::hfe203e3083c2b544","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10204,"byte_end":10290,"line_start":97,"line_end":97,"column_start":1,"column_end":87}},{"value":"!    3:     0x7ff654a0825b - rust_begin_unwind","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10291,"byte_end":10339,"line_start":98,"line_end":98,"column_start":1,"column_end":49}},{"value":"!    4:     0x7ff6549f63af - std::panicking::begin_panic_fmt::h484cd47786497f03","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10340,"byte_end":10421,"line_start":99,"line_end":99,"column_start":1,"column_end":82}},{"value":"!    5:     0x7ff654a07e9b - rust_begin_unwind","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10422,"byte_end":10470,"line_start":100,"line_end":100,"column_start":1,"column_end":49}},{"value":"!    6:     0x7ff654a0ae95 - core::panicking::panic_fmt::h257ceb0aa351d801","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10471,"byte_end":10547,"line_start":101,"line_end":101,"column_start":1,"column_end":77}},{"value":"!    7:     0x7ff654a0b190 - core::panicking::panic::h4bb1497076d04ab9","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10548,"byte_end":10620,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"!    8:     0x7ff65496dc41 - from_file<closure>","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10621,"byte_end":10670,"line_start":103,"line_end":103,"column_start":1,"column_end":50}},{"value":"!                         at C:\\Users\\Example\\example\\<core macros>:4","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10671,"byte_end":10742,"line_start":104,"line_end":104,"column_start":1,"column_end":72}},{"value":"!    9:     0x7ff65496d49c - example_test","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10743,"byte_end":10786,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"!                         at C:\\Users\\Example\\example\\src\\example.rs:652","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10787,"byte_end":10861,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"!   10:     0x7ff6549d192a - test::stats::Summary::new::ha139494ed2e4e01f","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10862,"byte_end":10937,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"!   11:     0x7ff6549d51a2 - test::stats::Summary::new::ha139494ed2e4e01f","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":10938,"byte_end":11013,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"!   12:     0x7ff654a0a911 - _rust_maybe_catch_panic","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11014,"byte_end":11068,"line_start":109,"line_end":109,"column_start":1,"column_end":55}},{"value":"!   13:     0x7ff6549d56dd - test::stats::Summary::new::ha139494ed2e4e01f","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11069,"byte_end":11144,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"!   14:     0x7ff654a03783 - std::sys::thread::Thread::new::h2b08da6cd2517f79","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11145,"byte_end":11224,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"!   15:     0x7ff968518101 - BaseThreadInitThunk","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11225,"byte_end":11275,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11276,"byte_end":11283,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11284,"byte_end":11287,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! Notice that the output shows the name of the data file","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11288,"byte_end":11346,"line_start":115,"line_end":115,"column_start":1,"column_end":59}},{"value":"! (`src/example_tests.txt`), the test inputs that led to the failure, and the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11347,"byte_end":11426,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"! stack trace to the line in the test code that panicked: entry 9 in the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11427,"byte_end":11501,"line_start":117,"line_end":117,"column_start":1,"column_end":75}},{"value":"! stack trace pointing to line 652 of the file `example.rs`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11502,"byte_end":11564,"line_start":118,"line_end":118,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11877,"byte_end":11902,"line_start":131,"line_end":131,"column_start":8,"column_end":33},"name":"compile_time_assert_clone","qualname":"::test::compile_time_assert_clone","value":"fn <T> () -> ()","parent":null,"children":[],"decl_id":null,"docs":" `compile_time_assert_clone::<T>();` fails to compile if `T` doesn't\n implement `Clone`.\n","sig":null,"attributes":[{"value":"/ `compile_time_assert_clone::<T>();` fails to compile if `T` doesn't","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11775,"byte_end":11846,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/ implement `Clone`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11847,"byte_end":11869,"line_start":130,"line_end":130,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12019,"byte_end":12043,"line_start":135,"line_end":135,"column_start":8,"column_end":32},"name":"compile_time_assert_copy","qualname":"::test::compile_time_assert_copy","value":"fn <T> () -> ()","parent":null,"children":[],"decl_id":null,"docs":" `compile_time_assert_copy::<T>();` fails to compile if `T` doesn't\n implement `Copy`.\n","sig":null,"attributes":[{"value":"/ `compile_time_assert_copy::<T>();` fails to compile if `T` doesn't","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11919,"byte_end":11989,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ implement `Copy`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":11990,"byte_end":12011,"line_start":134,"line_end":134,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12159,"byte_end":12183,"line_start":139,"line_end":139,"column_start":8,"column_end":32},"name":"compile_time_assert_send","qualname":"::test::compile_time_assert_send","value":"fn <T> () -> ()","parent":null,"children":[],"decl_id":null,"docs":" `compile_time_assert_send::<T>();` fails to compile if `T` doesn't\n implement `Send`.\n","sig":null,"attributes":[{"value":"/ `compile_time_assert_send::<T>();` fails to compile if `T` doesn't","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12059,"byte_end":12129,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/ implement `Send`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12130,"byte_end":12151,"line_start":138,"line_end":138,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12299,"byte_end":12323,"line_start":143,"line_end":143,"column_start":8,"column_end":32},"name":"compile_time_assert_sync","qualname":"::test::compile_time_assert_sync","value":"fn <T> () -> ()","parent":null,"children":[],"decl_id":null,"docs":" `compile_time_assert_sync::<T>();` fails to compile if `T` doesn't\n implement `Sync`.\n","sig":null,"attributes":[{"value":"/ `compile_time_assert_sync::<T>();` fails to compile if `T` doesn't","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12199,"byte_end":12269,"line_start":141,"line_end":141,"column_start":1,"column_end":71}},{"value":"/ implement `Sync`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12270,"byte_end":12291,"line_start":142,"line_end":142,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12843,"byte_end":12851,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"TestCase","qualname":"::test::TestCase","value":"TestCase {  }","parent":null,"children":[{"krate":0,"index":2600}],"decl_id":null,"docs":" A test case. A test case consists of a set of named attributes. Every\n attribute in the test case must be consumed exactly once; this helps catch\n typos and omissions.","sig":null,"attributes":[{"value":"/ A test case. A test case consists of a set of named attributes. Every","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12551,"byte_end":12624,"line_start":150,"line_end":150,"column_start":1,"column_end":74}},{"value":"/ attribute in the test case must be consumed exactly once; this helps catch","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12625,"byte_end":12703,"line_start":151,"line_end":151,"column_start":1,"column_end":79}},{"value":"/ typos and omissions.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12704,"byte_end":12728,"line_start":152,"line_end":152,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12729,"byte_end":12732,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Requires the `alloc` default feature to be enabled.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12733,"byte_end":12788,"line_start":154,"line_end":154,"column_start":1,"column_end":56}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12789,"byte_end":12814,"line_start":155,"line_end":155,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":13027,"byte_end":13039,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"consume_bool","qualname":"<TestCase>::consume_bool","value":"fn (&mut self, key: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Maps the string \"true\" to true and the string \"false\" to false.\n","sig":null,"attributes":[{"value":"/ Maps the string \"true\" to true and the string \"false\" to false.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12948,"byte_end":13015,"line_start":163,"line_end":163,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":13608,"byte_end":13626,"line_start":177,"line_end":177,"column_start":12,"column_end":30},"name":"consume_digest_alg","qualname":"<TestCase>::consume_digest_alg","value":"fn (&mut self, key: &str) -> Option<&'static digest::Algorithm>","parent":null,"children":[],"decl_id":null,"docs":" Maps the strings \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\" to digest\n algorithms, maps \"SHA224\" to `None`, and panics on other (erroneous)\n inputs. \"SHA224\" is mapped to None because *ring* intentionally does\n not support SHA224, but we need to consume test vectors from NIST that\n have SHA224 vectors in them.\n","sig":null,"attributes":[{"value":"/ Maps the strings \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\" to digest","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":13255,"byte_end":13326,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/ algorithms, maps \"SHA224\" to `None`, and panics on other (erroneous)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":13331,"byte_end":13403,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ inputs. \"SHA224\" is mapped to None because *ring* intentionally does","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":13408,"byte_end":13480,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"/ not support SHA224, but we need to consume test vectors from NIST that","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":13485,"byte_end":13559,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ have SHA224 vectors in them.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":13564,"byte_end":13596,"line_start":176,"line_end":176,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":14394,"byte_end":14407,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"consume_bytes","qualname":"<TestCase>::consume_bytes","value":"fn (&mut self, key: &str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of an attribute that is encoded as a sequence of an\n even number of hex digits, or as a double-quoted UTF-8 string. The\n empty (zero-length) value is represented as \"\".\n","sig":null,"attributes":[{"value":"/ Returns the value of an attribute that is encoded as a sequence of an","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":14178,"byte_end":14251,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ even number of hex digits, or as a double-quoted UTF-8 string. The","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":14256,"byte_end":14326,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ empty (zero-length) value is represented as \"\".","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":14331,"byte_end":14382,"line_start":192,"line_end":192,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":16739,"byte_end":16752,"line_start":249,"line_end":249,"column_start":12,"column_end":25},"name":"consume_usize","qualname":"<TestCase>::consume_usize","value":"fn (&mut self, key: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of an attribute that is an integer, in decimal\n notation.\n","sig":null,"attributes":[{"value":"/ Returns the value of an attribute that is an integer, in decimal","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":16641,"byte_end":16709,"line_start":247,"line_end":247,"column_start":5,"column_end":73}},{"value":"/ notation.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":16714,"byte_end":16727,"line_start":248,"line_end":248,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":17020,"byte_end":17038,"line_start":257,"line_end":257,"column_start":12,"column_end":30},"name":"consume_usize_bits","qualname":"<TestCase>::consume_usize_bits","value":"fn (&mut self, key: &str) -> bits::BitLength","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of an attribute that is an integer, in decimal\n notation, as a bit length.\n","sig":null,"attributes":[{"value":"/ Returns the value of an attribute that is an integer, in decimal","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":16875,"byte_end":16943,"line_start":254,"line_end":254,"column_start":5,"column_end":73}},{"value":"/ notation, as a bit length.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":16948,"byte_end":16978,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":16983,"byte_end":17008,"line_start":256,"line_end":256,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":17339,"byte_end":17353,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"consume_string","qualname":"<TestCase>::consume_string","value":"fn (&mut self, key: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw value of an attribute, without any unquoting or\n other interpretation.\n","sig":null,"attributes":[{"value":"/ Returns the raw value of an attribute, without any unquoting or","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":17230,"byte_end":17297,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ other interpretation.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":17302,"byte_end":17327,"line_start":264,"line_end":264,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":17631,"byte_end":17654,"line_start":272,"line_end":272,"column_start":12,"column_end":35},"name":"consume_optional_string","qualname":"<TestCase>::consume_optional_string","value":"fn (&mut self, key: &str) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Like `consume_string()` except it returns `None` if the test case\n doesn't have the attribute.\n","sig":null,"attributes":[{"value":"/ Like `consume_string()` except it returns `None` if the test case","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":17514,"byte_end":17583,"line_start":270,"line_end":270,"column_start":5,"column_end":74}},{"value":"/ doesn't have the attribute.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":17588,"byte_end":17619,"line_start":271,"line_end":271,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18350,"byte_end":18354,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"name":"File","qualname":"::test::File","value":"File { file_name, contents }","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" A test input file.\n","sig":null,"attributes":[{"value":"/ A test input file.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18290,"byte_end":18312,"line_start":298,"line_end":298,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18313,"byte_end":18338,"line_start":299,"line_end":299,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18406,"byte_end":18415,"line_start":302,"line_end":302,"column_start":9,"column_end":18},"name":"file_name","qualname":"::test::File::file_name","value":"&'a str","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The name (path) of the file.\n","sig":null,"attributes":[{"value":"/ The name (path) of the file.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18365,"byte_end":18397,"line_start":301,"line_end":301,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18469,"byte_end":18477,"line_start":305,"line_end":305,"column_start":9,"column_end":17},"name":"contents","qualname":"::test::File::contents","value":"&'a str","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The contents of the file.\n","sig":null,"attributes":[{"value":"/ The contents of the file.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18431,"byte_end":18460,"line_start":304,"line_end":304,"column_start":5,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18795,"byte_end":18798,"line_start":314,"line_end":314,"column_start":8,"column_end":11},"name":"run","qualname":"::test::run","value":"fn <F> (test_file: File, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Parses test cases out of the given file, calling `f` on each vector until\n `f` fails or until all the test vectors have been read. `f` can indicate\n failure either by returning `Err()` or by panicking.","sig":null,"attributes":[{"value":"/ Parses test cases out of the given file, calling `f` on each vector until","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18491,"byte_end":18568,"line_start":308,"line_end":308,"column_start":1,"column_end":78}},{"value":"/ `f` fails or until all the test vectors have been read. `f` can indicate","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18569,"byte_end":18645,"line_start":309,"line_end":309,"column_start":1,"column_end":77}},{"value":"/ failure either by returning `Err()` or by panicking.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18646,"byte_end":18702,"line_start":310,"line_end":310,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18703,"byte_end":18706,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ Requires the `alloc` default feature to be enabled","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18707,"byte_end":18761,"line_start":312,"line_end":312,"column_start":1,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":18762,"byte_end":18787,"line_start":313,"line_end":313,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":20353,"byte_end":20361,"line_start":365,"line_end":365,"column_start":8,"column_end":16},"name":"from_hex","qualname":"::test::from_hex","value":"fn (hex_str: &str) -> Result<Vec<u8>, String>","parent":null,"children":[],"decl_id":null,"docs":" Decode an string of hex digits into a sequence of bytes. The input must\n have an even number of digits.\n","sig":null,"attributes":[{"value":"/ Decode an string of hex digits into a sequence of bytes. The input must","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":20209,"byte_end":20284,"line_start":362,"line_end":362,"column_start":1,"column_end":76}},{"value":"/ have an even number of digits.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":20285,"byte_end":20319,"line_start":363,"line_end":363,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":20320,"byte_end":20345,"line_start":364,"line_end":364,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":23822,"byte_end":23826,"line_start":473,"line_end":473,"column_start":9,"column_end":13},"name":"rand","qualname":"::test::rand","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":2603},{"krate":0,"index":2605},{"krate":0,"index":59},{"krate":0,"index":2607},{"krate":0,"index":2610},{"krate":0,"index":61},{"krate":0,"index":2613},{"krate":0,"index":2617},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Deterministic implementations of `ring::rand::SecureRandom`.","sig":null,"attributes":[{"value":"/ Deterministic implementations of `ring::rand::SecureRandom`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":23464,"byte_end":23528,"line_start":466,"line_end":466,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":23529,"byte_end":23532,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ These implementations are particularly useful for testing implementations","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":23533,"byte_end":23610,"line_start":468,"line_end":468,"column_start":1,"column_end":78}},{"value":"/ of randomized algorithms & protocols using known-answer-tests where the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":23611,"byte_end":23686,"line_start":469,"line_end":469,"column_start":1,"column_end":76}},{"value":"/ test vectors contain the random seed to use. They are also especially","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":23687,"byte_end":23760,"line_start":470,"line_end":470,"column_start":1,"column_end":74}},{"value":"/ useful for some types of fuzzing.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":23761,"byte_end":23798,"line_start":471,"line_end":471,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24014,"byte_end":24029,"line_start":479,"line_end":479,"column_start":16,"column_end":31},"name":"FixedByteRandom","qualname":"::test::rand::FixedByteRandom","value":"FixedByteRandom { byte }","parent":null,"children":[{"krate":0,"index":2604}],"decl_id":null,"docs":" An implementation of `SecureRandom` that always fills the output slice\n with the given byte.\n","sig":null,"attributes":[{"value":"/ An implementation of `SecureRandom` that always fills the output slice","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":23874,"byte_end":23948,"line_start":476,"line_end":476,"column_start":5,"column_end":79}},{"value":"/ with the given byte.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":23953,"byte_end":23977,"line_start":477,"line_end":477,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24044,"byte_end":24048,"line_start":480,"line_end":480,"column_start":13,"column_end":17},"name":"byte","qualname":"::test::rand::FixedByteRandom::byte","value":"u8","parent":{"krate":0,"index":2603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24507,"byte_end":24523,"line_start":494,"line_end":494,"column_start":16,"column_end":32},"name":"FixedSliceRandom","qualname":"::test::rand::FixedSliceRandom","value":"FixedSliceRandom { bytes }","parent":null,"children":[{"krate":0,"index":2609}],"decl_id":null,"docs":" An implementation of `SecureRandom` that always fills the output slice\n with the slice in `bytes`. The length of the slice given to `slice`\n must match exactly.\n","sig":null,"attributes":[{"value":"/ An implementation of `SecureRandom` that always fills the output slice","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24292,"byte_end":24366,"line_start":490,"line_end":490,"column_start":5,"column_end":79}},{"value":"/ with the slice in `bytes`. The length of the slice given to `slice`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24371,"byte_end":24442,"line_start":491,"line_end":491,"column_start":5,"column_end":76}},{"value":"/ must match exactly.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24447,"byte_end":24470,"line_start":492,"line_end":492,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24542,"byte_end":24547,"line_start":495,"line_end":495,"column_start":13,"column_end":18},"name":"bytes","qualname":"::test::rand::FixedSliceRandom::bytes","value":"&'a [u8]","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2613},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25375,"byte_end":25399,"line_start":515,"line_end":515,"column_start":16,"column_end":40},"name":"FixedSliceSequenceRandom","qualname":"::test::rand::FixedSliceSequenceRandom","value":"FixedSliceSequenceRandom { bytes, current }","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":2616}],"decl_id":null,"docs":" An implementation of `SecureRandom` where each slice in `bytes` is a\n test vector for one call to `fill()`. *Not thread-safe.*","sig":null,"attributes":[{"value":"/ An implementation of `SecureRandom` where each slice in `bytes` is a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24796,"byte_end":24868,"line_start":505,"line_end":505,"column_start":5,"column_end":77}},{"value":"/ test vector for one call to `fill()`. *Not thread-safe.*","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24873,"byte_end":24933,"line_start":506,"line_end":506,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24938,"byte_end":24941,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ The first slice in `bytes` is the output for the first call to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24946,"byte_end":25012,"line_start":508,"line_end":508,"column_start":5,"column_end":71}},{"value":"/ `fill()`, the second slice is the output for the second call to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25017,"byte_end":25084,"line_start":509,"line_end":509,"column_start":5,"column_end":72}},{"value":"/ `fill()`, etc. The output slice passed to `fill()` must have exactly","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25089,"byte_end":25161,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ the length of the corresponding entry in `bytes`. `current` must be","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25166,"byte_end":25237,"line_start":511,"line_end":511,"column_start":5,"column_end":76}},{"value":"/ initialized to zero. `fill()` must be called exactly once for each","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25242,"byte_end":25312,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ entry in `bytes`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25317,"byte_end":25338,"line_start":513,"line_end":513,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25441,"byte_end":25446,"line_start":517,"line_end":517,"column_start":13,"column_end":18},"name":"bytes","qualname":"::test::rand::FixedSliceSequenceRandom::bytes","value":"&'a [&'a [u8]]","parent":{"krate":0,"index":2613},"children":[],"decl_id":null,"docs":" The value.\n","sig":null,"attributes":[{"value":"/ The value.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25414,"byte_end":25428,"line_start":516,"line_end":516,"column_start":9,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25476,"byte_end":25483,"line_start":518,"line_end":518,"column_start":13,"column_end":20},"name":"current","qualname":"::test::rand::FixedSliceSequenceRandom::current","value":"core::cell::UnsafeCell<usize>","parent":{"krate":0,"index":2613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78768,"byte_end":78774,"line_start":44,"line_end":44,"column_start":10,"column_end":16},"name":"Output","qualname":"::arithmetic::montgomery::ReductionEncoding::Output","value":"type Output: Encoding;","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":79065,"byte_end":79071,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"name":"Output","qualname":"::arithmetic::montgomery::ProductEncoding::Output","value":"type Output: Encoding;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2650},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bssl.rs","byte_start":80926,"byte_end":80932,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"name":"Result","qualname":"::bssl::Result","value":"","parent":null,"children":[],"decl_id":null,"docs":" An `int` returned from a foreign function containing **1** if the function\n was successful or **0** if an error occurred. This is the convention used by\n C code in `ring`.\n","sig":null,"attributes":[{"value":"/ An `int` returned from a foreign function containing **1** if the function","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bssl.rs","byte_start":80670,"byte_end":80748,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ was successful or **0** if an error occurred. This is the convention used by","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bssl.rs","byte_start":80749,"byte_end":80829,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ C code in `ring`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bssl.rs","byte_start":80830,"byte_end":80851,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"must_use","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bssl.rs","byte_start":80882,"byte_end":80893,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bssl.rs","byte_start":80894,"byte_end":80914,"line_start":22,"line_end":22,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aead","qualname":"::aead","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":392},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":407},{"krate":0,"index":412},{"krate":0,"index":416},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2673},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":2675},{"krate":0,"index":2681},{"krate":0,"index":2680},{"krate":0,"index":519},{"krate":0,"index":582},{"krate":0,"index":623},{"krate":0,"index":660},{"krate":0,"index":700},{"krate":0,"index":733},{"krate":0,"index":777},{"krate":0,"index":832},{"krate":0,"index":887},{"krate":0,"index":948},{"krate":0,"index":1005}],"decl_id":null,"docs":" Authenticated Encryption with Associated Data (AEAD).","sig":null,"attributes":[{"value":"! Authenticated Encryption with Associated Data (AEAD).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85214,"byte_end":85271,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85272,"byte_end":85275,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! See [Authenticated encryption: relations among notions and analysis of the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85276,"byte_end":85354,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! generic composition paradigm][AEAD] for an introduction to the concept of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85355,"byte_end":85432,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"! AEADs.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85433,"byte_end":85443,"line_start":19,"line_end":19,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85444,"byte_end":85447,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! [AEAD]: http://www-cse.ucsd.edu/~mihir/papers/oem.html","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85448,"byte_end":85506,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"! [`crypto.cipher.AEAD`]: https://golang.org/pkg/crypto/cipher/#AEAD","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85507,"byte_end":85577,"line_start":22,"line_end":22,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86158,"byte_end":86171,"line_start":43,"line_end":43,"column_start":11,"column_end":24},"name":"NonceSequence","qualname":"::aead::NonceSequence","value":"NonceSequence","parent":null,"children":[{"krate":0,"index":383}],"decl_id":null,"docs":" A sequences of unique nonces.","sig":null,"attributes":[{"value":"/ A sequences of unique nonces.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85833,"byte_end":85866,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85867,"byte_end":85870,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ A given `NonceSequence` must never return the same `Nonce` twice from","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85871,"byte_end":85944,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ `advance()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85945,"byte_end":85961,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85962,"byte_end":85965,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ A simple counter is a reasonable (but probably not ideal) `NonceSequence`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":85966,"byte_end":86044,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86045,"byte_end":86048,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Intentionally not `Clone` or `Copy` since cloning would allow duplication","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86049,"byte_end":86126,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ of the sequence.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86127,"byte_end":86147,"line_start":42,"line_end":42,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86574,"byte_end":86581,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"advance","qualname":"::aead::NonceSequence::advance","value":"fn (&mut self) -> Result<Nonce, error::Unspecified>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Returns the next nonce in the sequence.","sig":null,"attributes":[{"value":"/ Returns the next nonce in the sequence.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86178,"byte_end":86221,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86226,"byte_end":86229,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This may fail if \"too many\" nonces have been requested, where how many","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86234,"byte_end":86308,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ is too many is up to the implementation of `NonceSequence`. An","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86313,"byte_end":86379,"line_start":47,"line_end":47,"column_start":5,"column_end":71}},{"value":"/ implementation may that enforce a maximum number of records are","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86384,"byte_end":86451,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ sent/received under a key this way. Once `advance()` fails, it must","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86456,"byte_end":86527,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ fail for all subsequent calls.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86532,"byte_end":86566,"line_start":50,"line_end":50,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86687,"byte_end":86695,"line_start":55,"line_end":55,"column_start":11,"column_end":19},"name":"BoundKey","qualname":"::aead::BoundKey","value":"BoundKey<N: NonceSequence>: core::fmt::Debug","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":" An AEAD key bound to a nonce sequence.\n","sig":null,"attributes":[{"value":"/ An AEAD key bound to a nonce sequence.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86634,"byte_end":86676,"line_start":54,"line_end":54,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86819,"byte_end":86822,"line_start":57,"line_end":57,"column_start":8,"column_end":11},"name":"new","qualname":"::aead::BoundKey::new","value":"fn (key: UnboundKey, nonce_sequence: N) -> Self","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Constructs a new key from the given `UnboundKey` and `NonceSequence`.\n","sig":null,"attributes":[{"value":"/ Constructs a new key from the given `UnboundKey` and `NonceSequence`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86738,"byte_end":86811,"line_start":56,"line_end":56,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86910,"byte_end":86919,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"algorithm","qualname":"::aead::BoundKey::algorithm","value":"fn (&self) -> &'static Algorithm","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" The key's AEAD algorithm.\n","sig":null,"attributes":[{"value":"/ The key's AEAD algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86873,"byte_end":86902,"line_start":59,"line_end":59,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87167,"byte_end":87177,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"OpeningKey","qualname":"::aead::OpeningKey","value":"OpeningKey {  }","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"decl_id":null,"docs":" An AEAD key for authenticating and decrypting (\"opening\"), bound to a nonce\n sequence.","sig":null,"attributes":[{"value":"/ An AEAD key for authenticating and decrypting (\"opening\"), bound to a nonce","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86953,"byte_end":87032,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ sequence.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87033,"byte_end":87046,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87047,"byte_end":87050,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Intentionally not `Clone` or `Copy` since cloning would allow duplication","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87051,"byte_end":87128,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ of the nonce sequence.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87129,"byte_end":87155,"line_start":67,"line_end":67,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88387,"byte_end":88400,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"open_in_place","qualname":"<OpeningKey<N>>::open_in_place","value":"fn <'in_out, A> (&mut self, aad: Aad<A>, in_out: &'in_out mut [u8]) -> Result<&'in_out mut [u8], error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Authenticates and decrypts (“opens”) data in place.","sig":null,"attributes":[{"value":"/ Authenticates and decrypts (“opens”) data in place.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87836,"byte_end":87895,"line_start":96,"line_end":96,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87900,"byte_end":87903,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ `aad` is the additional authenticated data (AAD), if any.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87908,"byte_end":87969,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87974,"byte_end":87977,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ On input, `in_out` must be the ciphertext followed by the tag. When","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87982,"byte_end":88053,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ `open_in_place()` returns `Ok(plaintext)`, the input ciphertext","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88058,"byte_end":88125,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ has been overwritten by the plaintext; `plaintext` will refer to the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88130,"byte_end":88202,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ plaintext without the tag.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88207,"byte_end":88237,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88242,"byte_end":88245,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ When `open_in_place()` returns `Err(..)`, `in_out` may have been","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88250,"byte_end":88318,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ overwritten in an unspecified way.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88323,"byte_end":88361,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88366,"byte_end":88375,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90695,"byte_end":90706,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"open_within","qualname":"<OpeningKey<N>>::open_within","value":"fn <'in_out, A> (&mut self, aad: Aad<A>, in_out: &'in_out mut [u8], ciphertext_and_tag: RangeFrom<usize>) -> Result<&'in_out mut [u8], error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Authenticates and decrypts (“opens”) data in place, with a shift.","sig":null,"attributes":[{"value":"/ Authenticates and decrypts (“opens”) data in place, with a shift.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88638,"byte_end":88711,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88716,"byte_end":88719,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ `aad` is the additional authenticated data (AAD), if any.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88724,"byte_end":88785,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88790,"byte_end":88793,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ On input, `in_out[ciphertext_and_tag]` must be the ciphertext followed","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88798,"byte_end":88872,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ by the tag. When `open_within()` returns `Ok(plaintext)`, the plaintext","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88877,"byte_end":88952,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ will be at `in_out[0..plaintext.len()]`. In other words, the following","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":88957,"byte_end":89031,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ two code fragments are equivalent for valid values of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89036,"byte_end":89093,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ `ciphertext_and_tag`, except `open_within` will often be more efficient:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89098,"byte_end":89174,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89179,"byte_end":89182,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89187,"byte_end":89190,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```skip","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89195,"byte_end":89206,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ let plaintext = key.open_within(aad, in_out, cipertext_and_tag)?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89211,"byte_end":89280,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89285,"byte_end":89292,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89297,"byte_end":89300,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```skip","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89305,"byte_end":89316,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/ let ciphertext_and_tag_len = in_out[ciphertext_and_tag].len();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89321,"byte_end":89387,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/ in_out.copy_within(ciphertext_and_tag, 0);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89392,"byte_end":89438,"line_start":136,"line_end":136,"column_start":5,"column_end":51}},{"value":"/ let plaintext = key.open_in_place(aad, &mut in_out[..ciphertext_and_tag_len])?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89443,"byte_end":89526,"line_start":137,"line_end":137,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89531,"byte_end":89538,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89543,"byte_end":89546,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Similarly, `key.open_within(aad, in_out, 0..)` is equivalent to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89551,"byte_end":89618,"line_start":140,"line_end":140,"column_start":5,"column_end":72}},{"value":"/ `key.open_in_place(aad, in_out)`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89623,"byte_end":89660,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89665,"byte_end":89668,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/  When `open_in_place()` returns `Err(..)`, `in_out` may have been","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89673,"byte_end":89742,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/ overwritten in an unspecified way.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89747,"byte_end":89785,"line_start":144,"line_end":144,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89790,"byte_end":89793,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The shifting feature is useful in the case where multiple packets are","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89798,"byte_end":89871,"line_start":146,"line_end":146,"column_start":5,"column_end":78}},{"value":"/ being reassembled in place. Consider this example where the peer has","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89876,"byte_end":89948,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ sent the message “Split stream reassembled in place” split into","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":89953,"byte_end":90024,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/ three sealed packets:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90029,"byte_end":90054,"line_start":149,"line_end":149,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90059,"byte_end":90062,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```ascii-art","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90067,"byte_end":90083,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/                 Packet 1                  Packet 2                 Packet 3","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90088,"byte_end":90167,"line_start":152,"line_end":152,"column_start":5,"column_end":84}},{"value":"/ Input:  [Header][Ciphertext][Tag][Header][Ciphertext][Tag][Header][Ciphertext][Tag]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90172,"byte_end":90259,"line_start":153,"line_end":153,"column_start":5,"column_end":92}},{"value":"/                      |         +--------------+                        |","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90264,"byte_end":90340,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/               +------+   +-----+    +----------------------------------+","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90345,"byte_end":90421,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/               v          v          v","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90426,"byte_end":90467,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/ Output: [Plaintext][Plaintext][Plaintext]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90472,"byte_end":90517,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/        “Split stream reassembled in place”","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90522,"byte_end":90572,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90577,"byte_end":90584,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90589,"byte_end":90592,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This reassembly be accomplished with three calls to `open_within()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90597,"byte_end":90669,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":90674,"byte_end":90683,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93278,"byte_end":93288,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"SealingKey","qualname":"::aead::SealingKey","value":"SealingKey {  }","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"decl_id":null,"docs":" An AEAD key for encrypting and signing (\"sealing\"), bound to a nonce\n sequence.","sig":null,"attributes":[{"value":"/ An AEAD key for encrypting and signing (\"sealing\"), bound to a nonce","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93071,"byte_end":93143,"line_start":238,"line_end":238,"column_start":1,"column_end":73}},{"value":"/ sequence.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93144,"byte_end":93157,"line_start":239,"line_end":239,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93158,"byte_end":93161,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ Intentionally not `Clone` or `Copy` since cloning would allow duplication","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93162,"byte_end":93239,"line_start":241,"line_end":241,"column_start":1,"column_end":78}},{"value":"/ of the nonce sequence.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93240,"byte_end":93266,"line_start":242,"line_end":242,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94096,"byte_end":94109,"line_start":274,"line_end":274,"column_start":12,"column_end":25},"name":"seal_in_place","qualname":"<SealingKey<N>>::seal_in_place","value":"fn <A, InOut> (&mut self, aad: Aad<A>, in_out: &mut InOut) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. Renamed to `seal_in_place_append_tag()`.\n","sig":null,"attributes":[{"value":"/ Deprecated. Renamed to `seal_in_place_append_tag()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93947,"byte_end":94003,"line_start":271,"line_end":271,"column_start":5,"column_end":61}},{"value":"deprecated(note = \"Renamed to `seal_in_place_append_tag`.\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94008,"byte_end":94070,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94075,"byte_end":94084,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94753,"byte_end":94777,"line_start":296,"line_end":296,"column_start":12,"column_end":36},"name":"seal_in_place_append_tag","qualname":"<SealingKey<N>>::seal_in_place_append_tag","value":"fn <A, InOut> (&mut self, aad: Aad<A>, in_out: &mut InOut) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Encrypts and signs (“seals”) data in place, appending the tag to the\n resulting ciphertext.","sig":null,"attributes":[{"value":"/ Encrypts and signs (“seals”) data in place, appending the tag to the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94394,"byte_end":94470,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/ resulting ciphertext.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94475,"byte_end":94500,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94505,"byte_end":94508,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ `key.seal_in_place_append_tag(aad, in_out)` is equivalent to:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94513,"byte_end":94578,"line_start":289,"line_end":289,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94583,"byte_end":94586,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```skip","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94591,"byte_end":94602,"line_start":291,"line_end":291,"column_start":5,"column_end":16}},{"value":"/ key.seal_in_place_separate_tag(aad, in_out.as_mut())","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94607,"byte_end":94663,"line_start":292,"line_end":292,"column_start":5,"column_end":61}},{"value":"/     .map(|tag| in_out.extend(tag.as_ref()))","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94668,"byte_end":94715,"line_start":293,"line_end":293,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94720,"byte_end":94727,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":94732,"byte_end":94741,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95798,"byte_end":95824,"line_start":321,"line_end":321,"column_start":12,"column_end":38},"name":"seal_in_place_separate_tag","qualname":"<SealingKey<N>>::seal_in_place_separate_tag","value":"fn <A> (&mut self, aad: Aad<A>, in_out: &mut [u8]) -> Result<Tag, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Encrypts and signs (“seals”) data in place.","sig":null,"attributes":[{"value":"/ Encrypts and signs (“seals”) data in place.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95125,"byte_end":95176,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95181,"byte_end":95184,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ `aad` is the additional authenticated data (AAD), if any. This is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95189,"byte_end":95258,"line_start":311,"line_end":311,"column_start":5,"column_end":74}},{"value":"/ authenticated but not encrypted. The type `A` could be a byte slice","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95263,"byte_end":95334,"line_start":312,"line_end":312,"column_start":5,"column_end":76}},{"value":"/ `&[u8]`, a byte array `[u8; N]` for some constant `N`, `Vec<u8>`, etc.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95339,"byte_end":95413,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ If there is no AAD then use `Aad::empty()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95418,"byte_end":95465,"line_start":314,"line_end":314,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95470,"byte_end":95473,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The plaintext is given as the input value of `in_out`. `seal_in_place()`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95478,"byte_end":95554,"line_start":316,"line_end":316,"column_start":5,"column_end":81}},{"value":"/ will overwrite the plaintext with the ciphertext and return the tag.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95559,"byte_end":95631,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/ For most protocols, the caller must append the tag to the ciphertext.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95636,"byte_end":95709,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ The tag will be `self.algorithm.tag_len()` bytes long.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95714,"byte_end":95772,"line_start":319,"line_end":319,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":95777,"byte_end":95786,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96781,"byte_end":96784,"line_start":360,"line_end":360,"column_start":12,"column_end":15},"name":"Aad","qualname":"::aead::Aad","value":"","parent":null,"children":[],"decl_id":null,"docs":" The additionally authenticated data (AAD) for an opening or sealing\n operation. This data is authenticated but is **not** encrypted.","sig":null,"attributes":[{"value":"/ The additionally authenticated data (AAD) for an opening or sealing","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96512,"byte_end":96583,"line_start":355,"line_end":355,"column_start":1,"column_end":72}},{"value":"/ operation. This data is authenticated but is **not** encrypted.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96584,"byte_end":96651,"line_start":356,"line_end":356,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96652,"byte_end":96655,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ The type `A` could be a byte slice `&[u8]`, a byte array `[u8; N]`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96656,"byte_end":96726,"line_start":358,"line_end":358,"column_start":1,"column_end":71}},{"value":"/ for some constant `N`, `Vec<u8>`, etc.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96727,"byte_end":96769,"line_start":359,"line_end":359,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96911,"byte_end":96915,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"from","qualname":"<Aad<A>>::from","value":"fn (aad: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the `Aad` from the given bytes.\n","sig":null,"attributes":[{"value":"/ Construct the `Aad` from the given bytes.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96840,"byte_end":96885,"line_start":363,"line_end":363,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96890,"byte_end":96899,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97149,"byte_end":97154,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"empty","qualname":"<Aad<[u8; 0]>>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty `Aad`.\n","sig":null,"attributes":[{"value":"/ Construct an empty `Aad`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97108,"byte_end":97137,"line_start":380,"line_end":380,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97271,"byte_end":97281,"line_start":387,"line_end":387,"column_start":12,"column_end":22},"name":"UnboundKey","qualname":"::aead::UnboundKey","value":"UnboundKey {  }","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" An AEAD key without a designated role or nonce sequence.\n","sig":null,"attributes":[{"value":"/ An AEAD key without a designated role or nonce sequence.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97199,"byte_end":97259,"line_start":386,"line_end":386,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97874,"byte_end":97877,"line_start":411,"line_end":411,"column_start":12,"column_end":15},"name":"new","qualname":"<UnboundKey>::new","value":"fn (algorithm: &'static Algorithm, key_bytes: &[u8]) -> Result<Self, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `UnboundKey`.","sig":null,"attributes":[{"value":"/ Constructs an `UnboundKey`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97762,"byte_end":97793,"line_start":408,"line_end":408,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97798,"byte_end":97801,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Fails if `key_bytes.len() != ` algorithm.key_len()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97806,"byte_end":97862,"line_start":410,"line_end":410,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":98239,"byte_end":98248,"line_start":425,"line_end":425,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<UnboundKey>::algorithm","value":"fn (&self) -> &'static Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The key's AEAD algorithm.\n","sig":null,"attributes":[{"value":"/ The key's AEAD algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":98184,"byte_end":98213,"line_start":423,"line_end":423,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":98218,"byte_end":98227,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99009,"byte_end":99020,"line_start":451,"line_end":451,"column_start":12,"column_end":23},"name":"LessSafeKey","qualname":"::aead::LessSafeKey","value":"LessSafeKey {  }","parent":null,"children":[{"krate":0,"index":472}],"decl_id":null,"docs":" Immutable keys for use in situations where `OpeningKey`/`SealingKey` and\n `NonceSequence` cannot reasonably be used.","sig":null,"attributes":[{"value":"/ Immutable keys for use in situations where `OpeningKey`/`SealingKey` and","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":98790,"byte_end":98866,"line_start":447,"line_end":447,"column_start":1,"column_end":77}},{"value":"/ `NonceSequence` cannot reasonably be used.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":98867,"byte_end":98913,"line_start":448,"line_end":448,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":98914,"byte_end":98917,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ Prefer to use `OpeningKey`/`SealingKey` and `NonceSequence` when practical.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":98918,"byte_end":98997,"line_start":450,"line_end":450,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99134,"byte_end":99137,"line_start":457,"line_end":457,"column_start":12,"column_end":15},"name":"new","qualname":"<LessSafeKey>::new","value":"fn (key: UnboundKey) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `LessSafeKey` from an `UnboundKey`.\n","sig":null,"attributes":[{"value":"/ Constructs a `LessSafeKey` from an `UnboundKey`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99070,"byte_end":99122,"line_start":456,"line_end":456,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99380,"byte_end":99393,"line_start":465,"line_end":465,"column_start":12,"column_end":25},"name":"open_in_place","qualname":"<LessSafeKey>::open_in_place","value":"fn <'in_out, A> (&self, nonce: Nonce, aad: Aad<A>, in_out: &'in_out mut [u8]) -> Result<&'in_out mut [u8], error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Like [`OpeningKey::open_in_place()`], except it accepts an arbitrary nonce.","sig":null,"attributes":[{"value":"/ Like [`OpeningKey::open_in_place()`], except it accepts an arbitrary nonce.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99197,"byte_end":99276,"line_start":461,"line_end":461,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99281,"byte_end":99284,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ `nonce` must be unique for every use of the key to open data.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99289,"byte_end":99354,"line_start":463,"line_end":463,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99359,"byte_end":99368,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99837,"byte_end":99848,"line_start":481,"line_end":481,"column_start":12,"column_end":23},"name":"open_within","qualname":"<LessSafeKey>::open_within","value":"fn <'in_out, A> (&self, nonce: Nonce, aad: Aad<A>, in_out: &'in_out mut [u8], ciphertext_and_tag: RangeFrom<usize>) -> Result<&'in_out mut [u8], error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Like [`OpeningKey::open_within()`], except it accepts an arbitrary nonce.","sig":null,"attributes":[{"value":"/ Like [`OpeningKey::open_within()`], except it accepts an arbitrary nonce.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99656,"byte_end":99733,"line_start":477,"line_end":477,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99738,"byte_end":99741,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ `nonce` must be unique for every use of the key to open data.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99746,"byte_end":99811,"line_start":479,"line_end":479,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99816,"byte_end":99825,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100328,"byte_end":100341,"line_start":497,"line_end":497,"column_start":12,"column_end":25},"name":"seal_in_place","qualname":"<LessSafeKey>::seal_in_place","value":"fn <A, InOut> (&self, nonce: Nonce, aad: Aad<A>, in_out: &mut InOut) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. Renamed to `seal_in_place_append_tag()`.\n","sig":null,"attributes":[{"value":"/ Deprecated. Renamed to `seal_in_place_append_tag()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100179,"byte_end":100235,"line_start":494,"line_end":494,"column_start":5,"column_end":61}},{"value":"deprecated(note = \"Renamed to `seal_in_place_append_tag`.\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100240,"byte_end":100302,"line_start":495,"line_end":495,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100307,"byte_end":100316,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100853,"byte_end":100877,"line_start":515,"line_end":515,"column_start":12,"column_end":36},"name":"seal_in_place_append_tag","qualname":"<LessSafeKey>::seal_in_place_append_tag","value":"fn <A, InOut> (&self, nonce: Nonce, aad: Aad<A>, in_out: &mut InOut) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Like [`SealingKey::seal_in_place_append_tag()`], except it accepts an\n arbitrary nonce.","sig":null,"attributes":[{"value":"/ Like [`SealingKey::seal_in_place_append_tag()`], except it accepts an","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100651,"byte_end":100724,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/ arbitrary nonce.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100729,"byte_end":100749,"line_start":511,"line_end":511,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100754,"byte_end":100757,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ `nonce` must be unique for every use of the key to seal data.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100762,"byte_end":100827,"line_start":513,"line_end":513,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":100832,"byte_end":100841,"line_start":514,"line_end":514,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101452,"byte_end":101478,"line_start":534,"line_end":534,"column_start":12,"column_end":38},"name":"seal_in_place_separate_tag","qualname":"<LessSafeKey>::seal_in_place_separate_tag","value":"fn <A> (&self, nonce: Nonce, aad: Aad<A>, in_out: &mut [u8]) -> Result<Tag, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Like `SealingKey::seal_in_place_separate_tag()`, except it accepts an\n arbitrary nonce.","sig":null,"attributes":[{"value":"/ Like `SealingKey::seal_in_place_separate_tag()`, except it accepts an","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101250,"byte_end":101323,"line_start":529,"line_end":529,"column_start":5,"column_end":78}},{"value":"/ arbitrary nonce.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101328,"byte_end":101348,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101353,"byte_end":101356,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ `nonce` must be unique for every use of the key to seal data.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101361,"byte_end":101426,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101431,"byte_end":101440,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101802,"byte_end":101811,"line_start":548,"line_end":548,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<LessSafeKey>::algorithm","value":"fn (&self) -> &'static Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The key's AEAD algorithm.\n","sig":null,"attributes":[{"value":"/ The key's AEAD algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101747,"byte_end":101776,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101781,"byte_end":101790,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":102155,"byte_end":102164,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"Algorithm","qualname":"::aead::Algorithm","value":"Algorithm {  }","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"decl_id":null,"docs":" An AEAD Algorithm.\n","sig":null,"attributes":[{"value":"/ An AEAD Algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":102121,"byte_end":102143,"line_start":561,"line_end":561,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103190,"byte_end":103197,"line_start":599,"line_end":599,"column_start":12,"column_end":19},"name":"key_len","qualname":"<Algorithm>::key_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the key.\n","sig":null,"attributes":[{"value":"/ The length of the key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103130,"byte_end":103156,"line_start":597,"line_end":597,"column_start":5,"column_end":31}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103161,"byte_end":103178,"line_start":598,"line_end":598,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103346,"byte_end":103353,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"tag_len","qualname":"<Algorithm>::tag_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of a tag.","sig":null,"attributes":[{"value":"/ The length of a tag.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103248,"byte_end":103272,"line_start":603,"line_end":603,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103277,"byte_end":103280,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ See also `MAX_TAG_LEN`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103285,"byte_end":103312,"line_start":605,"line_end":605,"column_start":5,"column_end":32}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103317,"byte_end":103334,"line_start":606,"line_end":606,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103462,"byte_end":103471,"line_start":613,"line_end":613,"column_start":12,"column_end":21},"name":"nonce_len","qualname":"<Algorithm>::nonce_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the nonces.\n","sig":null,"attributes":[{"value":"/ The length of the nonces.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103399,"byte_end":103428,"line_start":611,"line_end":611,"column_start":5,"column_end":34}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103433,"byte_end":103450,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103858,"byte_end":103861,"line_start":638,"line_end":638,"column_start":12,"column_end":15},"name":"Tag","qualname":"::aead::Tag","value":"","parent":null,"children":[],"decl_id":null,"docs":" An authentication tag.\n","sig":null,"attributes":[{"value":"/ An authentication tag.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103797,"byte_end":103823,"line_start":635,"line_end":635,"column_start":1,"column_end":27}},{"value":"must_use","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103824,"byte_end":103835,"line_start":636,"line_end":636,"column_start":1,"column_end":12}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103836,"byte_end":103846,"line_start":637,"line_end":637,"column_start":1,"column_end":11}}]},{"kind":"Const","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":104153,"byte_end":104164,"line_start":652,"line_end":652,"column_start":11,"column_end":22},"name":"MAX_TAG_LEN","qualname":"::aead::MAX_TAG_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum length of a tag for the algorithms in this module.\n","sig":null,"attributes":[{"value":"/ The maximum length of a tag for the algorithms in this module.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":104076,"byte_end":104142,"line_start":651,"line_end":651,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes.rs","byte_start":114724,"byte_end":114740,"line_start":327,"line_end":327,"column_start":12,"column_end":28},"name":"ZeroMeansSuccess","qualname":"::aead::aes::ZeroMeansSuccess","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes.rs","byte_start":114680,"byte_end":114691,"line_start":325,"line_end":325,"column_start":1,"column_end":12}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes.rs","byte_start":114692,"byte_end":114712,"line_start":326,"line_end":326,"column_start":1,"column_end":21}}]},{"kind":"Static","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes_gcm.rs","byte_start":117052,"byte_end":117063,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"AES_128_GCM","qualname":"::aead::aes_gcm::AES_128_GCM","value":"aead::Algorithm","parent":null,"children":[],"decl_id":null,"docs":" AES-128 in GCM mode with 128-bit tags and 96 bit nonces.\n","sig":null,"attributes":[{"value":"/ AES-128 in GCM mode with 128-bit tags and 96 bit nonces.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes_gcm.rs","byte_start":116980,"byte_end":117040,"line_start":21,"line_end":21,"column_start":1,"column_end":61}}]},{"kind":"Static","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes_gcm.rs","byte_start":117344,"byte_end":117355,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"AES_256_GCM","qualname":"::aead::aes_gcm::AES_256_GCM","value":"aead::Algorithm","parent":null,"children":[],"decl_id":null,"docs":" AES-256 in GCM mode with 128-bit tags and 96 bit nonces.\n","sig":null,"attributes":[{"value":"/ AES-256 in GCM mode with 128-bit tags and 96 bit nonces.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes_gcm.rs","byte_start":117272,"byte_end":117332,"line_start":31,"line_end":31,"column_start":1,"column_end":61}}]},{"kind":"Static","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305.rs","byte_start":138537,"byte_end":138554,"line_start":33,"line_end":33,"column_start":12,"column_end":29},"name":"CHACHA20_POLY1305","qualname":"::aead::chacha20_poly1305::CHACHA20_POLY1305","value":"aead::Algorithm","parent":null,"children":[],"decl_id":null,"docs":" ChaCha20-Poly1305 as described in [RFC 7539].","sig":null,"attributes":[{"value":"/ ChaCha20-Poly1305 as described in [RFC 7539].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305.rs","byte_start":138352,"byte_end":138401,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305.rs","byte_start":138402,"byte_end":138405,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The keys are 256 bits long and the nonces are 96 bits long.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305.rs","byte_start":138406,"byte_end":138469,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305.rs","byte_start":138470,"byte_end":138473,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [RFC 7539]: https://tools.ietf.org/html/rfc7539","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305.rs","byte_start":138474,"byte_end":138525,"line_start":32,"line_end":32,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chacha20_poly1305_openssh","qualname":"::aead::chacha20_poly1305_openssh","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":742},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775}],"decl_id":null,"docs":" The [chacha20-poly1305@openssh.com] AEAD-ish construct.","sig":null,"attributes":[{"value":"! The [chacha20-poly1305@openssh.com] AEAD-ish construct.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":142825,"byte_end":142884,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":142885,"byte_end":142888,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! This should only be used by SSH implementations. It has a similar, but","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":142889,"byte_end":142963,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"! different API from `ring::aead` because the construct cannot use the same","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":142964,"byte_end":143041,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"! API as `ring::aead` due to the way the construct handles the encrypted","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143042,"byte_end":143116,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"! packet length.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143117,"byte_end":143135,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143136,"byte_end":143139,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! The concatenation of a and b is denoted `a||b`. `K_1` and `K_2` are defined","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143140,"byte_end":143219,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"! in the [chacha20-poly1305@openssh.com] specification. `packet_length`,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143220,"byte_end":143294,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"! `padding_length`, `payload`, and `random padding` are defined in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143295,"byte_end":143363,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"! [RFC 4253]. The term `plaintext` is used as a shorthand for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143364,"byte_end":143427,"line_start":25,"line_end":25,"column_start":1,"column_end":64}},{"value":"! `padding_length||payload||random padding`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143428,"byte_end":143474,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143475,"byte_end":143478,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! [chacha20-poly1305@openssh.com]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143479,"byte_end":143515,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"!    http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/PROTOCOL.chacha20poly1305?annotate=HEAD","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143516,"byte_end":143619,"line_start":29,"line_end":29,"column_start":1,"column_end":104}},{"value":"! [RFC 4253]: https://tools.ietf.org/html/rfc4253","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143620,"byte_end":143671,"line_start":30,"line_end":30,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143899,"byte_end":143909,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"SealingKey","qualname":"::aead::chacha20_poly1305_openssh::SealingKey","value":"SealingKey {  }","parent":null,"children":[{"krate":0,"index":748}],"decl_id":null,"docs":" A key for sealing packets.\n","sig":null,"attributes":[{"value":"/ A key for sealing packets.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143857,"byte_end":143887,"line_start":40,"line_end":40,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143997,"byte_end":144000,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SealingKey>::new","value":"fn (key_material: &[u8; KEY_LEN]) -> SealingKey","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SealingKey`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `SealingKey`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143951,"byte_end":143985,"line_start":46,"line_end":46,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":144555,"byte_end":144568,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"seal_in_place","qualname":"<SealingKey>::seal_in_place","value":"fn (&self, sequence_number: u32, plaintext_in_ciphertext_out: &mut [u8], tag_out: &mut [u8; TAG_LEN]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Seals (encrypts and signs) a packet.","sig":null,"attributes":[{"value":"/ Seals (encrypts and signs) a packet.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":144130,"byte_end":144170,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":144175,"byte_end":144178,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ On input, `plaintext_in_ciphertext_out` must contain the unencrypted","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":144183,"byte_end":144255,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `packet_length||plaintext` where `plaintext` is the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":144260,"byte_end":144315,"line_start":56,"line_end":56,"column_start":5,"column_end":60}},{"value":"/ `padding_length||payload||random padding`. It will be overwritten by","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":144320,"byte_end":144392,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `encrypted_packet_length||ciphertext`, where `encrypted_packet_length`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":144397,"byte_end":144471,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ is encrypted with `K_1` and `ciphertext` is encrypted by `K_2`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":144476,"byte_end":144543,"line_start":59,"line_end":59,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145408,"byte_end":145418,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"OpeningKey","qualname":"::aead::chacha20_poly1305_openssh::OpeningKey","value":"OpeningKey {  }","parent":null,"children":[{"krate":0,"index":755}],"decl_id":null,"docs":" A key for opening packets.\n","sig":null,"attributes":[{"value":"/ A key for opening packets.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145366,"byte_end":145396,"line_start":86,"line_end":86,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145506,"byte_end":145509,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<OpeningKey>::new","value":"fn (key_material: &[u8; KEY_LEN]) -> OpeningKey","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `OpeningKey`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `OpeningKey`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145460,"byte_end":145494,"line_start":92,"line_end":92,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145817,"byte_end":145838,"line_start":103,"line_end":103,"column_start":12,"column_end":33},"name":"decrypt_packet_length","qualname":"<OpeningKey>::decrypt_packet_length","value":"fn (&self, sequence_number: u32, encrypted_packet_length: [u8; PACKET_LENGTH_LEN]) -> [u8; PACKET_LENGTH_LEN]","parent":null,"children":[],"decl_id":null,"docs":" Returns the decrypted, but unauthenticated, packet length.","sig":null,"attributes":[{"value":"/ Returns the decrypted, but unauthenticated, packet length.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145639,"byte_end":145701,"line_start":99,"line_end":99,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145706,"byte_end":145709,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Importantly, the result won't be authenticated until `open_in_place` is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145714,"byte_end":145789,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ called.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145794,"byte_end":145805,"line_start":102,"line_end":102,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146724,"byte_end":146737,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"open_in_place","qualname":"<OpeningKey>::open_in_place","value":"fn <'a> (&self, sequence_number: u32, ciphertext_in_plaintext_out: &'a mut [u8], tag: &[u8; TAG_LEN]) -> Result<&'a [u8], error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Opens (authenticates and decrypts) a packet.","sig":null,"attributes":[{"value":"/ Opens (authenticates and decrypts) a packet.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146189,"byte_end":146237,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146242,"byte_end":146245,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ `ciphertext_in_plaintext_out` must be of the form","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146250,"byte_end":146303,"line_start":116,"line_end":116,"column_start":5,"column_end":58}},{"value":"/ `encrypted_packet_length||ciphertext` where `ciphertext` is the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146308,"byte_end":146375,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/ encrypted `plaintext`. When the function succeeds the ciphertext is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146380,"byte_end":146451,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ replaced by the plaintext and the result is `Ok(plaintext)`, where","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146456,"byte_end":146526,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/ `plaintext` is `&ciphertext_in_plaintext_out[PACKET_LENGTH_LEN..]`;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146531,"byte_end":146602,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ otherwise the contents of `ciphertext_in_plaintext_out` are unspecified","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146607,"byte_end":146682,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ and must not be used.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":146687,"byte_end":146712,"line_start":122,"line_end":122,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":148248,"byte_end":148255,"line_start":172,"line_end":172,"column_start":11,"column_end":18},"name":"KEY_LEN","qualname":"::aead::chacha20_poly1305_openssh::KEY_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of key.\n","sig":null,"attributes":[{"value":"/ The length of key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":148215,"byte_end":148237,"line_start":171,"line_end":171,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":148367,"byte_end":148384,"line_start":175,"line_end":175,"column_start":11,"column_end":28},"name":"PACKET_LENGTH_LEN","qualname":"::aead::chacha20_poly1305_openssh::PACKET_LENGTH_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length in bytes of the `packet_length` field in a SSH packet.\n","sig":null,"attributes":[{"value":"/ The length in bytes of the `packet_length` field in a SSH packet.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":148287,"byte_end":148356,"line_start":174,"line_end":174,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":148469,"byte_end":148476,"line_start":178,"line_end":178,"column_start":11,"column_end":18},"name":"TAG_LEN","qualname":"::aead::chacha20_poly1305_openssh::TAG_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length in bytes of an authentication tag.\n","sig":null,"attributes":[{"value":"/ The length in bytes of an authentication tag.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":148409,"byte_end":148458,"line_start":177,"line_end":177,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158793,"byte_end":158798,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"Nonce","qualname":"::aead::nonce::Nonce","value":"","parent":null,"children":[],"decl_id":null,"docs":" A nonce for a single AEAD opening or sealing operation.","sig":null,"attributes":[{"value":"/ A nonce for a single AEAD opening or sealing operation.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158533,"byte_end":158592,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158593,"byte_end":158596,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The user must ensure, for a particular key, that each nonce is unique.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158597,"byte_end":158671,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158672,"byte_end":158675,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ `Nonce` intentionally doesn't implement `Clone` to ensure that each one is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158676,"byte_end":158754,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ consumed at most once.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158755,"byte_end":158781,"line_start":36,"line_end":36,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159063,"byte_end":159088,"line_start":45,"line_end":45,"column_start":12,"column_end":37},"name":"try_assume_unique_for_key","qualname":"<Nonce>::try_assume_unique_for_key","value":"fn (value: &[u8]) -> Result<Self, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Nonce` with the given value, assuming that the value is\n unique for the lifetime of the key it is being used with.","sig":null,"attributes":[{"value":"/ Constructs a `Nonce` with the given value, assuming that the value is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158835,"byte_end":158908,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ unique for the lifetime of the key it is being used with.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158913,"byte_end":158974,"line_start":41,"line_end":41,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158979,"byte_end":158982,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Fails if `value` isn't `NONCE_LEN` bytes long.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158987,"byte_end":159037,"line_start":43,"line_end":43,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159042,"byte_end":159051,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159422,"byte_end":159443,"line_start":53,"line_end":53,"column_start":12,"column_end":33},"name":"assume_unique_for_key","qualname":"<Nonce>::assume_unique_for_key","value":"fn (value: [u8; NONCE_LEN]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Nonce` with the given value, assuming that the value is\n unique for the lifetime of the key it is being used with.\n","sig":null,"attributes":[{"value":"/ Constructs a `Nonce` with the given value, assuming that the value is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159257,"byte_end":159330,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ unique for the lifetime of the key it is being used with.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159335,"byte_end":159396,"line_start":51,"line_end":51,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159401,"byte_end":159410,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159673,"byte_end":159682,"line_start":65,"line_end":65,"column_start":11,"column_end":20},"name":"NONCE_LEN","qualname":"::aead::nonce::NONCE_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" All the AEADs we support use 96-bit nonces.\n","sig":null,"attributes":[{"value":"/ All the AEADs we support use 96-bit nonces.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159615,"byte_end":159662,"line_start":64,"line_end":64,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"quic","qualname":"::aead::quic","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2729},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1003}],"decl_id":null,"docs":" QUIC Header Protection.","sig":null,"attributes":[{"value":"! QUIC Header Protection.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":169511,"byte_end":169538,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":169539,"byte_end":169542,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! See draft-ietf-quic-tls.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":169543,"byte_end":169571,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":169756,"byte_end":169775,"line_start":26,"line_end":26,"column_start":12,"column_end":31},"name":"HeaderProtectionKey","qualname":"::aead::quic::HeaderProtectionKey","value":"HeaderProtectionKey {  }","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962}],"decl_id":null,"docs":" A key for generating QUIC Header Protection masks.\n","sig":null,"attributes":[{"value":"/ A key for generating QUIC Header Protection masks.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":169690,"byte_end":169744,"line_start":25,"line_end":25,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170472,"byte_end":170475,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<HeaderProtectionKey>::new","value":"fn (algorithm: &'static Algorithm, key_bytes: &[u8]) -> Result<Self, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Create a new header protection key.","sig":null,"attributes":[{"value":"/ Create a new header protection key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170345,"byte_end":170384,"line_start":48,"line_end":48,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170389,"byte_end":170392,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ `key_bytes` must be exactly `algorithm.key_len` bytes long.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170397,"byte_end":170460,"line_start":50,"line_end":50,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170859,"byte_end":170867,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"new_mask","qualname":"<HeaderProtectionKey>::new_mask","value":"fn (&self, sample: &[u8]) -> Result<[u8; 5], error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Generate a new QUIC Header Protection mask.","sig":null,"attributes":[{"value":"/ Generate a new QUIC Header Protection mask.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170715,"byte_end":170762,"line_start":61,"line_end":61,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170767,"byte_end":170770,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ `sample` must be exactly `self.algorithm().sample_len()` bytes long.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170775,"byte_end":170847,"line_start":63,"line_end":63,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171186,"byte_end":171195,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<HeaderProtectionKey>::algorithm","value":"fn (&self) -> &'static Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The key's algorithm.\n","sig":null,"attributes":[{"value":"/ The key's algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171128,"byte_end":171152,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171157,"byte_end":171174,"line_start":73,"line_end":73,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171353,"byte_end":171362,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"Algorithm","qualname":"::aead::quic::Algorithm","value":"Algorithm {  }","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":985}],"decl_id":null,"docs":" A QUIC Header Protection Algorithm.\n","sig":null,"attributes":[{"value":"/ A QUIC Header Protection Algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171302,"byte_end":171341,"line_start":81,"line_end":81,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171766,"byte_end":171773,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"key_len","qualname":"<Algorithm>::key_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the key.\n","sig":null,"attributes":[{"value":"/ The length of the key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171706,"byte_end":171732,"line_start":99,"line_end":99,"column_start":5,"column_end":31}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171737,"byte_end":171754,"line_start":100,"line_end":100,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171889,"byte_end":171899,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"sample_len","qualname":"<Algorithm>::sample_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The required sample length.\n","sig":null,"attributes":[{"value":"/ The required sample length.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171824,"byte_end":171855,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171860,"byte_end":171877,"line_start":106,"line_end":106,"column_start":5,"column_end":22}}]},{"kind":"Static","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":172233,"byte_end":172240,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"AES_128","qualname":"::aead::quic::AES_128","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" AES-128.\n","sig":null,"attributes":[{"value":"/ AES-128.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":172209,"byte_end":172221,"line_start":129,"line_end":129,"column_start":1,"column_end":13}}]},{"kind":"Static","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":172393,"byte_end":172400,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"AES_256","qualname":"::aead::quic::AES_256","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" AES-256.\n","sig":null,"attributes":[{"value":"/ AES-256.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":172369,"byte_end":172381,"line_start":137,"line_end":137,"column_start":1,"column_end":13}}]},{"kind":"Static","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":173166,"byte_end":173174,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"CHACHA20","qualname":"::aead::quic::CHACHA20","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" ChaCha20.\n","sig":null,"attributes":[{"value":"/ ChaCha20.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":173141,"byte_end":173154,"line_start":164,"line_end":164,"column_start":1,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"agreement","qualname":"::agreement","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1030},{"krate":0,"index":2731},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":2733},{"krate":0,"index":1039},{"krate":0,"index":2735},{"krate":0,"index":2738},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1067},{"krate":0,"index":1072}],"decl_id":null,"docs":" Key Agreement: ECDH, including X25519.","sig":null,"attributes":[{"value":"! Key Agreement: ECDH, including X25519.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176450,"byte_end":176492,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176493,"byte_end":176496,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176497,"byte_end":176510,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176511,"byte_end":176514,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! Note that this example uses X25519, but ECDH using NIST P-256/P-384 is done","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176515,"byte_end":176594,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"! exactly the same way, just substituting","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176595,"byte_end":176638,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"! `agreement::ECDH_P256`/`agreement::ECDH_P384` for `agreement::X25519`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176639,"byte_end":176713,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176714,"byte_end":176717,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176718,"byte_end":176725,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"! use ring::{agreement, rand};","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176726,"byte_end":176758,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176759,"byte_end":176762,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! let rng = rand::SystemRandom::new();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176763,"byte_end":176803,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176804,"byte_end":176807,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! let my_private_key = agreement::EphemeralPrivateKey::generate(&agreement::X25519, &rng)?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176808,"byte_end":176901,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176902,"byte_end":176905,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! // Make `my_public_key` a byte slice containing my public key. In a real","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176906,"byte_end":176982,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"! // application, this would be sent to the peer in an encoded protocol","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":176983,"byte_end":177056,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"! // message.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177057,"byte_end":177072,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"! let my_public_key = my_private_key.compute_public_key()?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177073,"byte_end":177134,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177135,"byte_end":177138,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! let peer_public_key = {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177139,"byte_end":177166,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"!     // In a real application, the peer public key would be parsed out of a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177167,"byte_end":177245,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"!     // protocol message. Here we just generate one.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177246,"byte_end":177301,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"!     let peer_public_key = {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177302,"byte_end":177333,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"!         let peer_private_key =","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177334,"byte_end":177368,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"!             agreement::EphemeralPrivateKey::generate(&agreement::X25519, &rng)?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177369,"byte_end":177453,"line_start":40,"line_end":40,"column_start":1,"column_end":85}},{"value":"!         peer_private_key.compute_public_key()?","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177454,"byte_end":177504,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"!     };","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177505,"byte_end":177515,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177516,"byte_end":177519,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"!     agreement::UnparsedPublicKey::new(&agreement::X25519, peer_public_key)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177520,"byte_end":177598,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"! };","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177599,"byte_end":177605,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177606,"byte_end":177609,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! agreement::agree_ephemeral(","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177610,"byte_end":177641,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"!     my_private_key,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177642,"byte_end":177665,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"!     &peer_public_key,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177666,"byte_end":177691,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"!     ring::error::Unspecified,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177692,"byte_end":177725,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"!     |_key_material| {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177726,"byte_end":177751,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"!         // In a real application, we'd apply a KDF to the key material and the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177752,"byte_end":177834,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"!         // public keys (as recommended in RFC 7748) and then derive session","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177835,"byte_end":177914,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"!         // keys from the result. We omit all that here.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177915,"byte_end":177974,"line_start":54,"line_end":54,"column_start":1,"column_end":60}},{"value":"!         Ok(())","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177975,"byte_end":177993,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"!     },","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":177994,"byte_end":178004,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"! )?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178005,"byte_end":178012,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178013,"byte_end":178016,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # Ok::<(), ring::error::Unspecified>(())","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178017,"byte_end":178061,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178062,"byte_end":178069,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178359,"byte_end":178368,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"Algorithm","qualname":"::agreement::Algorithm","value":"Algorithm {  }","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032}],"decl_id":null,"docs":" A key agreement algorithm.\n","sig":null,"attributes":[{"value":"/ A key agreement algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178317,"byte_end":178347,"line_start":73,"line_end":73,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178979,"byte_end":178998,"line_start":95,"line_end":95,"column_start":12,"column_end":31},"name":"EphemeralPrivateKey","qualname":"::agreement::EphemeralPrivateKey","value":"EphemeralPrivateKey {  }","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038}],"decl_id":null,"docs":" An ephemeral private key for use (only) with `agree_ephemeral`. The\n signature of `agree_ephemeral` ensures that an `EphemeralPrivateKey` can be\n used for at most one key agreement.\n","sig":null,"attributes":[{"value":"/ An ephemeral private key for use (only) with `agree_ephemeral`. The","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178776,"byte_end":178847,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ signature of `agree_ephemeral` ensures that an `EphemeralPrivateKey` can be","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178848,"byte_end":178927,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ used for at most one key agreement.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178928,"byte_end":178967,"line_start":94,"line_end":94,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":179279,"byte_end":179287,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"generate","qualname":"<EphemeralPrivateKey>::generate","value":"fn (alg: &'static Algorithm, rng: &dyn rand::SecureRandom) -> Result<Self, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Generate a new ephemeral private key for the given algorithm.\n","sig":null,"attributes":[{"value":"/ Generate a new ephemeral private key for the given algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":179202,"byte_end":179267,"line_start":107,"line_end":107,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":179874,"byte_end":179892,"line_start":127,"line_end":127,"column_start":12,"column_end":30},"name":"compute_public_key","qualname":"<EphemeralPrivateKey>::compute_public_key","value":"fn (&self) -> Result<PublicKey, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Computes the public key from the private key.\n","sig":null,"attributes":[{"value":"/ Computes the public key from the private key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":179791,"byte_end":179840,"line_start":125,"line_end":125,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":179845,"byte_end":179862,"line_start":126,"line_end":126,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":180457,"byte_end":180466,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<EphemeralPrivateKey>::algorithm","value":"fn (&self) -> &'static Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The algorithm for the private key.\n","sig":null,"attributes":[{"value":"/ The algorithm for the private key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":180393,"byte_end":180431,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":180436,"byte_end":180445,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":180696,"byte_end":180705,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::agreement::PublicKey","value":"PublicKey {  }","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737}],"decl_id":null,"docs":" A public key for key agreement.\n","sig":null,"attributes":[{"value":"/ A public key for key agreement.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":180632,"byte_end":180667,"line_start":153,"line_end":153,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181253,"byte_end":181262,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<PublicKey>::algorithm","value":"fn (&self) -> &'static Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The algorithm for the public key.\n","sig":null,"attributes":[{"value":"/ The algorithm for the public key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181190,"byte_end":181227,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181232,"byte_end":181241,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181404,"byte_end":181421,"line_start":184,"line_end":184,"column_start":12,"column_end":29},"name":"UnparsedPublicKey","qualname":"::agreement::UnparsedPublicKey","value":"UnparsedPublicKey {  }","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053}],"decl_id":null,"docs":" An unparsed, possibly malformed, public key for key agreement.\n","sig":null,"attributes":[{"value":"/ An unparsed, possibly malformed, public key for key agreement.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181326,"byte_end":181392,"line_start":183,"line_end":183,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182245,"byte_end":182248,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<UnparsedPublicKey<B>>::new","value":"fn (algorithm: &'static Algorithm, bytes: B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `UnparsedPublicKey`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `UnparsedPublicKey`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182192,"byte_end":182233,"line_start":216,"line_end":216,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182384,"byte_end":182393,"line_start":223,"line_end":223,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<UnparsedPublicKey<B>>::algorithm","value":"fn (&self) -> &'static Algorithm","parent":null,"children":[],"decl_id":null,"docs":" TODO: doc\n","sig":null,"attributes":[{"value":"/ TODO: doc","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182345,"byte_end":182358,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182363,"byte_end":182372,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182498,"byte_end":182503,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"bytes","qualname":"<UnparsedPublicKey<B>>::bytes","value":"fn (&self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" TODO: doc\n","sig":null,"attributes":[{"value":"/ TODO: doc","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182459,"byte_end":182472,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182477,"byte_end":182486,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183652,"byte_end":183667,"line_start":256,"line_end":256,"column_start":8,"column_end":23},"name":"agree_ephemeral","qualname":"::agreement::agree_ephemeral","value":"fn <B, F, R, E> (my_private_key: EphemeralPrivateKey, peer_public_key: &UnparsedPublicKey<B>, error_value: E, kdf: F) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Performs a key agreement with an ephemeral private key and the given public\n key.","sig":null,"attributes":[{"value":"/ Performs a key agreement with an ephemeral private key and the given public","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182548,"byte_end":182627,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/ key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182628,"byte_end":182636,"line_start":235,"line_end":235,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182637,"byte_end":182640,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ `my_private_key` is the ephemeral private key to use. Since it is moved, it","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182641,"byte_end":182720,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ will not be usable after calling `agree_ephemeral`, thus guaranteeing that","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182721,"byte_end":182799,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/ the key is used for only one key agreement.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182800,"byte_end":182847,"line_start":239,"line_end":239,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182848,"byte_end":182851,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ `peer_public_key` is the peer's public key. `agree_ephemeral` will return","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182852,"byte_end":182929,"line_start":241,"line_end":241,"column_start":1,"column_end":78}},{"value":"/ `Err(error_value)` if it does not match `my_private_key's` algorithm/curve.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182930,"byte_end":183009,"line_start":242,"line_end":242,"column_start":1,"column_end":80}},{"value":"/ `agree_ephemeral` verifies that it is encoded in the standard form for the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183010,"byte_end":183088,"line_start":243,"line_end":243,"column_start":1,"column_end":79}},{"value":"/ algorithm and that the key is *valid*; see the algorithm's documentation for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183089,"byte_end":183169,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ details on how keys are to be encoded and what constitutes a valid key for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183170,"byte_end":183248,"line_start":245,"line_end":245,"column_start":1,"column_end":79}},{"value":"/ that algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183249,"byte_end":183268,"line_start":246,"line_end":246,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183269,"byte_end":183272,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ `error_value` is the value to return if an error occurs before `kdf` is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183273,"byte_end":183348,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"/ called, e.g. when decoding of the peer's public key fails or when the public","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183349,"byte_end":183429,"line_start":249,"line_end":249,"column_start":1,"column_end":81}},{"value":"/ key is otherwise invalid.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183430,"byte_end":183459,"line_start":250,"line_end":250,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183460,"byte_end":183463,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ After the key agreement is done, `agree_ephemeral` calls `kdf` with the raw","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183464,"byte_end":183543,"line_start":252,"line_end":252,"column_start":1,"column_end":80}},{"value":"/ key material from the key agreement operation and then returns what `kdf`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183544,"byte_end":183621,"line_start":253,"line_end":253,"column_start":1,"column_end":78}},{"value":"/ returns.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183622,"byte_end":183634,"line_start":254,"line_end":254,"column_start":1,"column_end":13}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":183635,"byte_end":183644,"line_start":255,"line_end":255,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":186660,"byte_end":186669,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"BitLength","qualname":"::bits::BitLength","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":186811,"byte_end":186826,"line_start":24,"line_end":24,"column_start":18,"column_end":33},"name":"from_usize_bits","qualname":"<BitLength>::from_usize_bits","value":"fn (bits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":186784,"byte_end":186793,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":186901,"byte_end":186917,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"name":"from_usize_bytes","qualname":"<BitLength>::from_usize_bytes","value":"fn (bytes: usize) -> Result<Self, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":186880,"byte_end":186889,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187140,"byte_end":187155,"line_start":36,"line_end":36,"column_start":12,"column_end":27},"name":"half_rounded_up","qualname":"<BitLength>::half_rounded_up","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187089,"byte_end":187114,"line_start":34,"line_end":34,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187119,"byte_end":187128,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187278,"byte_end":187291,"line_start":42,"line_end":42,"column_start":12,"column_end":25},"name":"as_usize_bits","qualname":"<BitLength>::as_usize_bits","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187257,"byte_end":187266,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187387,"byte_end":187412,"line_start":48,"line_end":48,"column_start":12,"column_end":37},"name":"as_usize_bytes_rounded_up","qualname":"<BitLength>::as_usize_bytes_rounded_up","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187336,"byte_end":187361,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187366,"byte_end":187375,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187784,"byte_end":187793,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"try_sub_1","qualname":"<BitLength>::try_sub_1","value":"fn (self) -> Result<BitLength, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187733,"byte_end":187758,"line_start":58,"line_end":58,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":187763,"byte_end":187772,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\constant_time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constant_time","qualname":"::constant_time","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\constant_time.rs","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1096}],"decl_id":null,"docs":" Constant-time operations.\n","sig":null,"attributes":[{"value":"! Constant-time operations.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\constant_time.rs","byte_start":190445,"byte_end":190474,"line_start":15,"line_end":15,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\constant_time.rs","byte_start":190755,"byte_end":190778,"line_start":23,"line_end":23,"column_start":8,"column_end":31},"name":"verify_slices_are_equal","qualname":"::constant_time::verify_slices_are_equal","value":"fn (a: &[u8], b: &[u8]) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ok(())` if `a == b` and `Err(error::Unspecified)` otherwise.\n The comparison of `a` and `b` is done in constant time with respect to the\n contents of each, but NOT in constant time with respect to the lengths of\n `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns `Ok(())` if `a == b` and `Err(error::Unspecified)` otherwise.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\constant_time.rs","byte_start":190500,"byte_end":190573,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ The comparison of `a` and `b` is done in constant time with respect to the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\constant_time.rs","byte_start":190574,"byte_end":190652,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ contents of each, but NOT in constant time with respect to the lengths of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\constant_time.rs","byte_start":190653,"byte_end":190730,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ `a` and `b`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\constant_time.rs","byte_start":190731,"byte_end":190747,"line_start":22,"line_end":22,"column_start":1,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io.rs","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1133},{"krate":0,"index":1160},{"krate":0,"index":1171},{"krate":0,"index":1179}],"decl_id":null,"docs":" Serialization and deserialization.\n","sig":null,"attributes":[{"value":"! Serialization and deserialization.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io.rs","byte_start":192222,"byte_end":192260,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"der","qualname":"::io::der","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":2761},{"krate":0,"index":2802},{"krate":0,"index":2801},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1117},{"krate":0,"index":1123},{"krate":0,"index":1129},{"krate":0,"index":1131}],"decl_id":null,"docs":" Building blocks for parsing DER-encoded ASN.1 structures.","sig":null,"attributes":[{"value":"! Building blocks for parsing DER-encoded ASN.1 structures.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193210,"byte_end":193271,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193272,"byte_end":193275,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! This module contains the foundational parts of an ASN.1 DER parser.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193276,"byte_end":193347,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193414,"byte_end":193425,"line_start":23,"line_end":23,"column_start":11,"column_end":22},"name":"CONSTRUCTED","qualname":"::io::der::CONSTRUCTED","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193450,"byte_end":193466,"line_start":24,"line_end":24,"column_start":11,"column_end":27},"name":"CONTEXT_SPECIFIC","qualname":"::io::der::CONTEXT_SPECIFIC","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193547,"byte_end":193554,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::io::der::Tag::Boolean","value":"Tag::Boolean","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193567,"byte_end":193574,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Integer","qualname":"::io::der::Tag::Integer","value":"Tag::Integer","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2768},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193587,"byte_end":193596,"line_start":31,"line_end":31,"column_start":5,"column_end":14},"name":"BitString","qualname":"::io::der::Tag::BitString","value":"Tag::BitString","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193609,"byte_end":193620,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"OctetString","qualname":"::io::der::Tag::OctetString","value":"Tag::OctetString","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193633,"byte_end":193637,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Null","qualname":"::io::der::Tag::Null","value":"Tag::Null","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193650,"byte_end":193653,"line_start":34,"line_end":34,"column_start":5,"column_end":8},"name":"OID","qualname":"::io::der::Tag::OID","value":"Tag::OID","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193666,"byte_end":193674,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"Sequence","qualname":"::io::der::Tag::Sequence","value":"Tag::Sequence","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193709,"byte_end":193716,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"UTCTime","qualname":"::io::der::Tag::UTCTime","value":"Tag::UTCTime","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193729,"byte_end":193744,"line_start":37,"line_end":37,"column_start":5,"column_end":20},"name":"GeneralizedTime","qualname":"::io::der::Tag::GeneralizedTime","value":"Tag::GeneralizedTime","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193758,"byte_end":193785,"line_start":39,"line_end":39,"column_start":5,"column_end":32},"name":"ContextSpecificConstructed0","qualname":"::io::der::Tag::ContextSpecificConstructed0","value":"Tag::ContextSpecificConstructed0","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193828,"byte_end":193855,"line_start":40,"line_end":40,"column_start":5,"column_end":32},"name":"ContextSpecificConstructed1","qualname":"::io::der::Tag::ContextSpecificConstructed1","value":"Tag::ContextSpecificConstructed1","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2795},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193898,"byte_end":193925,"line_start":41,"line_end":41,"column_start":5,"column_end":32},"name":"ContextSpecificConstructed3","qualname":"::io::der::Tag::ContextSpecificConstructed3","value":"Tag::ContextSpecificConstructed3","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193537,"byte_end":193540,"line_start":28,"line_end":28,"column_start":10,"column_end":13},"name":"Tag","qualname":"::io::der::Tag","value":"Tag::{Boolean, Integer, BitString, OctetString, Null, OID, Sequence, UTCTime, GeneralizedTime, ContextSpecificConstructed0, ContextSpecificConstructed1, ContextSpecificConstructed3}","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2765},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2795}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":193516,"byte_end":193527,"line_start":27,"line_end":27,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":194177,"byte_end":194201,"line_start":56,"line_end":56,"column_start":8,"column_end":32},"name":"expect_tag_and_get_value","qualname":"::io::der::expect_tag_and_get_value","value":"fn <'a> (input: &mut untrusted::Reader<'a>, tag: Tag) -> Result<untrusted::Input<'a>, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":194501,"byte_end":194523,"line_start":67,"line_end":67,"column_start":8,"column_end":30},"name":"read_tag_and_get_value","qualname":"::io::der::read_tag_and_get_value","value":"fn <'a> (input: &mut untrusted::Reader<'a>) -> Result<(u8, untrusted::Input<'a>), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":195892,"byte_end":195922,"line_start":105,"line_end":105,"column_start":8,"column_end":38},"name":"bit_string_with_no_unused_bits","qualname":"::io::der::bit_string_with_no_unused_bits","value":"fn <'a> (input: &mut untrusted::Reader<'a>) -> Result<untrusted::Input<'a>, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":196403,"byte_end":196409,"line_start":119,"line_end":119,"column_start":8,"column_end":14},"name":"nested","qualname":"::io::der::nested","value":"fn <'a, F, R, E> (input: &mut untrusted::Reader<'a>, tag: Tag, error: E, decoder: F) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":198832,"byte_end":198857,"line_start":193,"line_end":193,"column_start":8,"column_end":33},"name":"small_nonnegative_integer","qualname":"::io::der::small_nonnegative_integer","value":"fn (input: &mut untrusted::Reader) -> Result<u8, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Parse as integer with a value in the in the range [0, 255], returning its\n numeric value. This is typically used for parsing version numbers.\n","sig":null,"attributes":[{"value":"/ Parse as integer with a value in the in the range [0, 255], returning its","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":198666,"byte_end":198743,"line_start":190,"line_end":190,"column_start":1,"column_end":78}},{"value":"/ numeric value. This is typically used for parsing version numbers.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":198744,"byte_end":198814,"line_start":191,"line_end":191,"column_start":1,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":198815,"byte_end":198824,"line_start":192,"line_end":192,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":199196,"byte_end":199212,"line_start":203,"line_end":203,"column_start":8,"column_end":24},"name":"positive_integer","qualname":"::io::der::positive_integer","value":"fn <'a> (input: &mut untrusted::Reader<'a>) -> Result<Positive<'a>, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Parses a positive DER integer, returning the big-endian-encoded value,\n sans any leading zero byte.\n","sig":null,"attributes":[{"value":"/ Parses a positive DER integer, returning the big-endian-encoded value,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":199082,"byte_end":199156,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"/ sans any leading zero byte.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\der.rs","byte_start":199157,"byte_end":199188,"line_start":202,"line_end":202,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208021,"byte_end":208029,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Positive","qualname":"::io::positive::Positive","value":"","parent":null,"children":[],"decl_id":null,"docs":" A serialized positive integer.\n","sig":null,"attributes":[{"value":"/ A serialized positive integer.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":207952,"byte_end":207986,"line_start":17,"line_end":17,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208531,"byte_end":208562,"line_start":33,"line_end":33,"column_start":12,"column_end":43},"name":"big_endian_without_leading_zero","qualname":"<Positive>::big_endian_without_leading_zero","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the value, ordered from significant byte to least significant\n byte, without any leading zeros. The result is guaranteed to be\n non-empty.\n","sig":null,"attributes":[{"value":"/ Returns the value, ordered from significant byte to least significant","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208341,"byte_end":208414,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ byte, without any leading zeros. The result is guaranteed to be","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208419,"byte_end":208486,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ non-empty.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208491,"byte_end":208505,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208510,"byte_end":208519,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208972,"byte_end":208982,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"first_byte","qualname":"<Positive>::first_byte","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the first byte.","sig":null,"attributes":[{"value":"/ Returns the first byte.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208835,"byte_end":208862,"line_start":45,"line_end":45,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208867,"byte_end":208870,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Will not panic because the value is guaranteed to have at least one","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208875,"byte_end":208946,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ byte.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208951,"byte_end":208960,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"digest","qualname":"::digest","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1241},{"krate":0,"index":2823},{"krate":0,"index":2828},{"krate":0,"index":1312},{"krate":0,"index":2830},{"krate":0,"index":2835},{"krate":0,"index":1316},{"krate":0,"index":1324},{"krate":0,"index":2837},{"krate":0,"index":2841},{"krate":0,"index":2840},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":2843},{"krate":0,"index":2860},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":2862},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":2864},{"krate":0,"index":2870},{"krate":0,"index":2869},{"krate":0,"index":2872},{"krate":0,"index":2878},{"krate":0,"index":2877},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359}],"decl_id":null,"docs":" SHA-2 and the legacy SHA-1 digest algorithm.","sig":null,"attributes":[{"value":"! SHA-2 and the legacy SHA-1 digest algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":218977,"byte_end":219025,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":219026,"byte_end":219029,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! If all the data is available in a single contiguous slice then the `digest`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":219030,"byte_end":219109,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! function should be used. Otherwise, the digest can be calculated in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":219110,"byte_end":219181,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"! multiple steps using `Context`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":219182,"byte_end":219217,"line_start":19,"line_end":19,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245471,"byte_end":245481,"line_start":160,"line_end":160,"column_start":10,"column_end":20},"name":"InputBytes","qualname":"::digest::sha2::Word::InputBytes","value":"type InputBytes: Copy;","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222926,"byte_end":222933,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"Context","qualname":"::digest::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2834}],"decl_id":null,"docs":" A context for multi-step (Init-Update-Finish) digest calculations.","sig":null,"attributes":[{"value":"/ A context for multi-step (Init-Update-Finish) digest calculations.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222460,"byte_end":222530,"line_start":116,"line_end":116,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222531,"byte_end":222534,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222535,"byte_end":222549,"line_start":118,"line_end":118,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222550,"byte_end":222553,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222554,"byte_end":222561,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use ring::digest;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222562,"byte_end":222583,"line_start":121,"line_end":121,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222584,"byte_end":222587,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ let one_shot = digest::digest(&digest::SHA384, b\"hello, world\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222588,"byte_end":222656,"line_start":123,"line_end":123,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222657,"byte_end":222660,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let mut ctx = digest::Context::new(&digest::SHA384);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222661,"byte_end":222717,"line_start":125,"line_end":125,"column_start":1,"column_end":57}},{"value":"/ ctx.update(b\"hello\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222718,"byte_end":222743,"line_start":126,"line_end":126,"column_start":1,"column_end":26}},{"value":"/ ctx.update(b\", \");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222744,"byte_end":222766,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/ ctx.update(b\"world\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222767,"byte_end":222792,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/ let multi_part = ctx.finish();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222793,"byte_end":222827,"line_start":129,"line_end":129,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222828,"byte_end":222831,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&one_shot.as_ref(), &multi_part.as_ref());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222832,"byte_end":222889,"line_start":131,"line_end":131,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":222890,"byte_end":222897,"line_start":132,"line_end":132,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":223149,"byte_end":223152,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<Context>::new","value":"fn (algorithm: &'static Algorithm) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new context.\n","sig":null,"attributes":[{"value":"/ Constructs a new context.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":223108,"byte_end":223137,"line_start":142,"line_end":142,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":223749,"byte_end":223755,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"update","qualname":"<Context>::update","value":"fn (&mut self, data: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the digest with all the data in `data`. `update` may be called\n zero or more times until `finish` is called. It must not be called\n after `finish` has been called.\n","sig":null,"attributes":[{"value":"/ Updates the digest with all the data in `data`. `update` may be called","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":223548,"byte_end":223622,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ zero or more times until `finish` is called. It must not be called","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":223627,"byte_end":223697,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ after `finish` has been called.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":223702,"byte_end":223737,"line_start":161,"line_end":161,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225055,"byte_end":225061,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"finish","qualname":"<Context>::finish","value":"fn (mut self) -> Digest","parent":null,"children":[],"decl_id":null,"docs":" Finalizes the digest calculation and returns the digest value. `finish`\n consumes the context so it cannot be (mis-)used after `finish` has been\n called.\n","sig":null,"attributes":[{"value":"/ Finalizes the digest calculation and returns the digest value. `finish`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":224872,"byte_end":224947,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/ consumes the context so it cannot be (mis-)used after `finish` has been","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":224952,"byte_end":225027,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ called.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225032,"byte_end":225043,"line_start":191,"line_end":191,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225319,"byte_end":225328,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Context>::algorithm","value":"fn (&self) -> &'static Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The algorithm that this context is using.\n","sig":null,"attributes":[{"value":"/ The algorithm that this context is using.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225240,"byte_end":225285,"line_start":198,"line_end":198,"column_start":5,"column_end":50}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225290,"byte_end":225307,"line_start":199,"line_end":199,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225864,"byte_end":225870,"line_start":220,"line_end":220,"column_start":8,"column_end":14},"name":"digest","qualname":"::digest::digest","value":"fn (algorithm: &'static Algorithm, data: &[u8]) -> Digest","parent":null,"children":[],"decl_id":null,"docs":" Returns the digest of `data` using the given digest algorithm.","sig":null,"attributes":[{"value":"/ Returns the digest of `data` using the given digest algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225398,"byte_end":225464,"line_start":205,"line_end":205,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225465,"byte_end":225468,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225469,"byte_end":225484,"line_start":207,"line_end":207,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225485,"byte_end":225488,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225489,"byte_end":225496,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"alloc\")]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225497,"byte_end":225528,"line_start":210,"line_end":210,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225529,"byte_end":225536,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use ring::{digest, test};","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225537,"byte_end":225566,"line_start":212,"line_end":212,"column_start":1,"column_end":30}},{"value":"/ let expected_hex = \"09ca7e4eaa6e8ae9c7d261167129184883644d07dfba7cbfbc4c8a2e08360d5b\";","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225567,"byte_end":225657,"line_start":213,"line_end":213,"column_start":1,"column_end":91}},{"value":"/ let expected: Vec<u8> = test::from_hex(expected_hex).unwrap();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225658,"byte_end":225724,"line_start":214,"line_end":214,"column_start":1,"column_end":67}},{"value":"/ let actual = digest::digest(&digest::SHA256, b\"hello, world\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225725,"byte_end":225791,"line_start":215,"line_end":215,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225792,"byte_end":225795,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&expected, &actual.as_ref());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225796,"byte_end":225840,"line_start":217,"line_end":217,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225841,"byte_end":225848,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":225849,"byte_end":225856,"line_start":219,"line_end":219,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226129,"byte_end":226135,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"Digest","qualname":"::digest::Digest","value":"Digest {  }","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2839}],"decl_id":null,"docs":" A calculated digest value.","sig":null,"attributes":[{"value":"/ A calculated digest value.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226012,"byte_end":226042,"line_start":226,"line_end":226,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226043,"byte_end":226046,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Use `as_ref` to get the value as a `&[u8]`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226047,"byte_end":226094,"line_start":228,"line_end":228,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226309,"byte_end":226318,"line_start":238,"line_end":238,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Digest>::algorithm","value":"fn (&self) -> &'static Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The algorithm that was used to calculate the digest value.\n","sig":null,"attributes":[{"value":"/ The algorithm that was used to calculate the digest value.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226213,"byte_end":226275,"line_start":236,"line_end":236,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226280,"byte_end":226297,"line_start":237,"line_end":237,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226801,"byte_end":226810,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"Algorithm","qualname":"::digest::Algorithm","value":"Algorithm { output_len, chaining_len, block_len }","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339}],"decl_id":null,"docs":" A digest algorithm.\n","sig":null,"attributes":[{"value":"/ A digest algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226766,"byte_end":226789,"line_start":257,"line_end":257,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226863,"byte_end":226873,"line_start":260,"line_end":260,"column_start":9,"column_end":19},"name":"output_len","qualname":"::digest::Algorithm::output_len","value":"usize","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" The length of a finalized digest.\n","sig":null,"attributes":[{"value":"/ The length of a finalized digest.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226817,"byte_end":226854,"line_start":259,"line_end":259,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227301,"byte_end":227313,"line_start":268,"line_end":268,"column_start":9,"column_end":21},"name":"chaining_len","qualname":"::digest::Algorithm::chaining_len","value":"usize","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" The size of the chaining value of the digest function, in bytes. For\n non-truncated algorithms (SHA-1, SHA-256, SHA-512), this is equal to\n `output_len`. For truncated algorithms (e.g. SHA-384, SHA-512/256),\n this is equal to the length before truncation. This is mostly helpful\n for determining the size of an HMAC key that is appropriate for the\n digest algorithm.\n","sig":null,"attributes":[{"value":"/ The size of the chaining value of the digest function, in bytes. For","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226887,"byte_end":226959,"line_start":262,"line_end":262,"column_start":5,"column_end":77}},{"value":"/ non-truncated algorithms (SHA-1, SHA-256, SHA-512), this is equal to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226964,"byte_end":227036,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ `output_len`. For truncated algorithms (e.g. SHA-384, SHA-512/256),","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227041,"byte_end":227112,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/ this is equal to the length before truncation. This is mostly helpful","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227117,"byte_end":227190,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ for determining the size of an HMAC key that is appropriate for the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227195,"byte_end":227266,"line_start":266,"line_end":266,"column_start":5,"column_end":76}},{"value":"/ digest algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227271,"byte_end":227292,"line_start":267,"line_end":267,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227366,"byte_end":227375,"line_start":271,"line_end":271,"column_start":9,"column_end":18},"name":"block_len","qualname":"::digest::Algorithm::block_len","value":"usize","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" The internal block length.\n","sig":null,"attributes":[{"value":"/ The internal block length.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227327,"byte_end":227357,"line_start":270,"line_end":270,"column_start":5,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":228078,"byte_end":228102,"line_start":306,"line_end":306,"column_start":12,"column_end":36},"name":"SHA1_FOR_LEGACY_USE_ONLY","qualname":"::digest::SHA1_FOR_LEGACY_USE_ONLY","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" SHA-1 as specified in [FIPS 180-4]. Deprecated.","sig":null,"attributes":[{"value":"/ SHA-1 as specified in [FIPS 180-4]. Deprecated.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227935,"byte_end":227986,"line_start":303,"line_end":303,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227987,"byte_end":227990,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ [FIPS 180-4]: http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227991,"byte_end":228066,"line_start":305,"line_end":305,"column_start":1,"column_end":76}}]},{"kind":"Static","id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":228825,"byte_end":228831,"line_start":331,"line_end":331,"column_start":12,"column_end":18},"name":"SHA256","qualname":"::digest::SHA256","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" SHA-256 as specified in [FIPS 180-4].","sig":null,"attributes":[{"value":"/ SHA-256 as specified in [FIPS 180-4].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":228692,"byte_end":228733,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":228734,"byte_end":228737,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ [FIPS 180-4]: http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":228738,"byte_end":228813,"line_start":330,"line_end":330,"column_start":1,"column_end":76}}]},{"kind":"Static","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":229595,"byte_end":229601,"line_start":356,"line_end":356,"column_start":12,"column_end":18},"name":"SHA384","qualname":"::digest::SHA384","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" SHA-384 as specified in [FIPS 180-4].","sig":null,"attributes":[{"value":"/ SHA-384 as specified in [FIPS 180-4].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":229462,"byte_end":229503,"line_start":353,"line_end":353,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":229504,"byte_end":229507,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ [FIPS 180-4]: http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":229508,"byte_end":229583,"line_start":355,"line_end":355,"column_start":1,"column_end":76}}]},{"kind":"Static","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":230422,"byte_end":230428,"line_start":381,"line_end":381,"column_start":12,"column_end":18},"name":"SHA512","qualname":"::digest::SHA512","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" SHA-512 as specified in [FIPS 180-4].","sig":null,"attributes":[{"value":"/ SHA-512 as specified in [FIPS 180-4].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":230289,"byte_end":230330,"line_start":378,"line_end":378,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":230331,"byte_end":230334,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ [FIPS 180-4]: http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":230335,"byte_end":230410,"line_start":380,"line_end":380,"column_start":1,"column_end":76}}]},{"kind":"Static","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":231414,"byte_end":231424,"line_start":410,"line_end":410,"column_start":12,"column_end":22},"name":"SHA512_256","qualname":"::digest::SHA512_256","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" SHA-512/256 as specified in [FIPS 180-4].","sig":null,"attributes":[{"value":"/ SHA-512/256 as specified in [FIPS 180-4].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":231116,"byte_end":231161,"line_start":403,"line_end":403,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":231162,"byte_end":231165,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ This is *not* the same as just truncating the output of SHA-512, as","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":231166,"byte_end":231237,"line_start":405,"line_end":405,"column_start":1,"column_end":72}},{"value":"/ SHA-512/256 has its own initial state distinct from SHA-512's initial","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":231238,"byte_end":231311,"line_start":406,"line_end":406,"column_start":1,"column_end":74}},{"value":"/ state.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":231312,"byte_end":231322,"line_start":407,"line_end":407,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":231323,"byte_end":231326,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ [FIPS 180-4]: http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":231327,"byte_end":231402,"line_start":409,"line_end":409,"column_start":1,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":1348},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":232620,"byte_end":232633,"line_start":448,"line_end":448,"column_start":11,"column_end":24},"name":"MAX_BLOCK_LEN","qualname":"::digest::MAX_BLOCK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum block length (`Algorithm::block_len`) of all the algorithms in\n this module.\n","sig":null,"attributes":[{"value":"/ The maximum block length (`Algorithm::block_len`) of all the algorithms in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":232514,"byte_end":232592,"line_start":446,"line_end":446,"column_start":1,"column_end":79}},{"value":"/ this module.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":232593,"byte_end":232609,"line_start":447,"line_end":447,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":232762,"byte_end":232776,"line_start":452,"line_end":452,"column_start":11,"column_end":25},"name":"MAX_OUTPUT_LEN","qualname":"::digest::MAX_OUTPUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum output length (`Algorithm::output_len`) of all the algorithms\n in this module.\n","sig":null,"attributes":[{"value":"/ The maximum output length (`Algorithm::output_len`) of all the algorithms","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":232654,"byte_end":232731,"line_start":450,"line_end":450,"column_start":1,"column_end":78}},{"value":"/ in this module.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":232732,"byte_end":232751,"line_start":451,"line_end":451,"column_start":1,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":232908,"byte_end":232924,"line_start":456,"line_end":456,"column_start":11,"column_end":27},"name":"MAX_CHAINING_LEN","qualname":"::digest::MAX_CHAINING_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum chaining length (`Algorithm::chaining_len`) of all the\n algorithms in this module.\n","sig":null,"attributes":[{"value":"/ The maximum chaining length (`Algorithm::chaining_len`) of all the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":232796,"byte_end":232866,"line_start":454,"line_end":454,"column_start":1,"column_end":71}},{"value":"/ algorithms in this module.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":232867,"byte_end":232897,"line_start":455,"line_end":455,"column_start":1,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":233912,"byte_end":233927,"line_start":491,"line_end":491,"column_start":11,"column_end":26},"name":"SHA1_OUTPUT_LEN","qualname":"::digest::SHA1_OUTPUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the output of SHA-1, in bytes.\n","sig":null,"attributes":[{"value":"/ The length of the output of SHA-1, in bytes.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":233853,"byte_end":233901,"line_start":490,"line_end":490,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":234017,"byte_end":234034,"line_start":494,"line_end":494,"column_start":11,"column_end":28},"name":"SHA256_OUTPUT_LEN","qualname":"::digest::SHA256_OUTPUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the output of SHA-256, in bytes.\n","sig":null,"attributes":[{"value":"/ The length of the output of SHA-256, in bytes.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":233956,"byte_end":234006,"line_start":493,"line_end":493,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":234115,"byte_end":234132,"line_start":497,"line_end":497,"column_start":11,"column_end":28},"name":"SHA384_OUTPUT_LEN","qualname":"::digest::SHA384_OUTPUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the output of SHA-384, in bytes.\n","sig":null,"attributes":[{"value":"/ The length of the output of SHA-384, in bytes.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":234054,"byte_end":234104,"line_start":496,"line_end":496,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":234213,"byte_end":234230,"line_start":500,"line_end":500,"column_start":11,"column_end":28},"name":"SHA512_OUTPUT_LEN","qualname":"::digest::SHA512_OUTPUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the output of SHA-512, in bytes.\n","sig":null,"attributes":[{"value":"/ The length of the output of SHA-512, in bytes.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":234152,"byte_end":234202,"line_start":499,"line_end":499,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":234315,"byte_end":234336,"line_start":503,"line_end":503,"column_start":11,"column_end":32},"name":"SHA512_256_OUTPUT_LEN","qualname":"::digest::SHA512_256_OUTPUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the output of SHA-512/256, in bytes.\n","sig":null,"attributes":[{"value":"/ The length of the output of SHA-512/256, in bytes.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":234250,"byte_end":234304,"line_start":502,"line_end":502,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":257443,"byte_end":257457,"line_start":28,"line_end":28,"column_start":12,"column_end":26},"name":"Ed25519KeyPair","qualname":"::ec::curve25519::ed25519::signing::Ed25519KeyPair","value":"Ed25519KeyPair {  }","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403}],"decl_id":null,"docs":" An Ed25519 key pair, for signing.\n","sig":null,"attributes":[{"value":"/ An Ed25519 key pair, for signing.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":257394,"byte_end":257431,"line_start":27,"line_end":27,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258196,"byte_end":258210,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"generate_pkcs8","qualname":"<Ed25519KeyPair>::generate_pkcs8","value":"fn (rng: &dyn rand::SecureRandom) -> Result<pkcs8::Document, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Generates a new key pair and returns the key pair serialized as a\n PKCS#8 document.","sig":null,"attributes":[{"value":"/ Generates a new key pair and returns the key pair serialized as a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":257799,"byte_end":257868,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ PKCS#8 document.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":257873,"byte_end":257893,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":257898,"byte_end":257901,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The PKCS#8 document will be a v2 `OneAsymmetricKey` with the public key,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":257906,"byte_end":257982,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ as described in [RFC 5958 Section 2]. See also","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":257987,"byte_end":258037,"line_start":46,"line_end":46,"column_start":5,"column_end":55}},{"value":"/ https://tools.ietf.org/html/draft-ietf-curdle-pkix-04.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258042,"byte_end":258100,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258105,"byte_end":258108,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ [RFC 5958 Section 2]: https://tools.ietf.org/html/rfc5958#section-2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258113,"byte_end":258184,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259295,"byte_end":259305,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"from_pkcs8","qualname":"<Ed25519KeyPair>::from_pkcs8","value":"fn (pkcs8: &[u8]) -> Result<Self, error::KeyRejected>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an Ed25519 key pair by parsing an unencrypted PKCS#8 v2\n Ed25519 private key.","sig":null,"attributes":[{"value":"/ Constructs an Ed25519 key pair by parsing an unencrypted PKCS#8 v2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258565,"byte_end":258635,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ Ed25519 private key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258640,"byte_end":258664,"line_start":63,"line_end":63,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258669,"byte_end":258672,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ `openssl genpkey -algorithm ED25519` generates PKCS# v1 keys, which","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258677,"byte_end":258748,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ require the use of `Ed25519KeyPair::from_pkcs8_maybe_unchecked()`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258753,"byte_end":258822,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ instead of `Ed25519KeyPair::from_pkcs8()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258827,"byte_end":258873,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258878,"byte_end":258881,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The input must be in PKCS#8 v2 format, and in particular it must contain","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258886,"byte_end":258962,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ the public key in addition to the private key. `from_pkcs8()` will","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":258967,"byte_end":259037,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/ verify that the public key and the private key are consistent with each","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259042,"byte_end":259117,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ other.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259122,"byte_end":259132,"line_start":72,"line_end":72,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259137,"byte_end":259140,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If you need to parse PKCS#8 v1 files (without the public key) then use","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259145,"byte_end":259219,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `Ed25519KeyPair::from_pkcs8_maybe_unchecked()` instead.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259224,"byte_end":259283,"line_start":75,"line_end":75,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":260413,"byte_end":260439,"line_start":99,"line_end":99,"column_start":12,"column_end":38},"name":"from_pkcs8_maybe_unchecked","qualname":"<Ed25519KeyPair>::from_pkcs8_maybe_unchecked","value":"fn (pkcs8: &[u8]) -> Result<Self, error::KeyRejected>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an Ed25519 key pair by parsing an unencrypted PKCS#8 v1 or v2\n Ed25519 private key.","sig":null,"attributes":[{"value":"/ Constructs an Ed25519 key pair by parsing an unencrypted PKCS#8 v1 or v2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259627,"byte_end":259703,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ Ed25519 private key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259708,"byte_end":259732,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259737,"byte_end":259740,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ `openssl genpkey -algorithm ED25519` generates PKCS# v1 keys.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259745,"byte_end":259810,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259815,"byte_end":259818,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ It is recommended to use `Ed25519KeyPair::from_pkcs8()`, which accepts","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259823,"byte_end":259897,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ only PKCS#8 v2 files that contain the public key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259902,"byte_end":259955,"line_start":91,"line_end":91,"column_start":5,"column_end":58}},{"value":"/ `from_pkcs8_maybe_unchecked()` parses PKCS#2 files exactly like","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":259960,"byte_end":260027,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/ `from_pkcs8()`. It also accepts v1 files. PKCS#8 v1 files do not contain","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":260032,"byte_end":260108,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ the public key, so when a v1 file is parsed the public key will be","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":260113,"byte_end":260183,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ computed from the private key, and there will be no consistency check","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":260188,"byte_end":260261,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ between the public key and the private key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":260266,"byte_end":260313,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":260318,"byte_end":260321,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ PKCS#8 v2 files are parsed exactly like `Ed25519KeyPair::from_pkcs8()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":260326,"byte_end":260401,"line_start":98,"line_end":98,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":261445,"byte_end":261469,"line_start":122,"line_end":122,"column_start":12,"column_end":36},"name":"from_seed_and_public_key","qualname":"<Ed25519KeyPair>::from_seed_and_public_key","value":"fn (seed: &[u8], public_key: &[u8]) -> Result<Self, error::KeyRejected>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an Ed25519 key pair from the private key seed `seed` and its\n public key `public_key`.","sig":null,"attributes":[{"value":"/ Constructs an Ed25519 key pair from the private key seed `seed` and its","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":260907,"byte_end":260982,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ public key `public_key`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":260987,"byte_end":261015,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":261020,"byte_end":261023,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ It is recommended to use `Ed25519KeyPair::from_pkcs8()` instead.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":261028,"byte_end":261096,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":261101,"byte_end":261104,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The private and public keys will be verified to be consistent with each","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":261109,"byte_end":261184,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ other. This helps avoid misuse of the key (e.g. accidentally swapping","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":261189,"byte_end":261262,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ the private key and public key, or using the wrong private key for the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":261267,"byte_end":261341,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ public key). This also detects any corruption of the public or private","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":261346,"byte_end":261420,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":261425,"byte_end":261433,"line_start":121,"line_end":121,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262693,"byte_end":262712,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"from_seed_unchecked","qualname":"<Ed25519KeyPair>::from_seed_unchecked","value":"fn (seed: &[u8]) -> Result<Self, error::KeyRejected>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a Ed25519 key pair from the private key seed `seed`.","sig":null,"attributes":[{"value":"/ Constructs a Ed25519 key pair from the private key seed `seed`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262177,"byte_end":262244,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262249,"byte_end":262252,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ It is recommended to use `Ed25519KeyPair::from_pkcs8()` instead. When","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262257,"byte_end":262330,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ that is not practical, it is recommended to use","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262335,"byte_end":262386,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/ `Ed25519KeyPair::from_seed_and_public_key()` instead.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262391,"byte_end":262448,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262453,"byte_end":262456,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since the public key is not given, the public key will be computed from","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262461,"byte_end":262536,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ the private key. It is not possible to detect misuse or corruption of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262541,"byte_end":262614,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ the private key since the public key isn't given as input.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":262619,"byte_end":262681,"line_start":151,"line_end":151,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":263607,"byte_end":263611,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"sign","qualname":"<Ed25519KeyPair>::sign","value":"fn (&self, msg: &[u8]) -> signature::Signature","parent":null,"children":[],"decl_id":null,"docs":" Returns the signature of the message `msg`.\n","sig":null,"attributes":[{"value":"/ Returns the signature of the message `msg`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":263548,"byte_end":263595,"line_start":178,"line_end":178,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":265286,"byte_end":265295,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::ec::curve25519::ed25519::signing::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267507,"byte_end":267522,"line_start":23,"line_end":23,"column_start":12,"column_end":27},"name":"EdDSAParameters","qualname":"::ec::curve25519::ed25519::verification::EdDSAParameters","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parameters for EdDSA signing and verification.\n","sig":null,"attributes":[{"value":"/ Parameters for EdDSA signing and verification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267445,"byte_end":267495,"line_start":22,"line_end":22,"column_start":1,"column_end":51}}]},{"kind":"Static","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267858,"byte_end":267865,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"ED25519","qualname":"::ec::curve25519::ed25519::verification::ED25519","value":"EdDSAParameters","parent":null,"children":[],"decl_id":null,"docs":" Verification of [Ed25519] signatures.","sig":null,"attributes":[{"value":"/ Verification of [Ed25519] signatures.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267706,"byte_end":267747,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267748,"byte_end":267751,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Ed25519 uses SHA-512 as the digest algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267752,"byte_end":267801,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267802,"byte_end":267805,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [Ed25519]: https://ed25519.cr.yp.to/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267806,"byte_end":267846,"line_start":35,"line_end":35,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519.rs","byte_start":256087,"byte_end":256109,"line_start":24,"line_end":24,"column_start":11,"column_end":33},"name":"ED25519_PUBLIC_KEY_LEN","qualname":"::ec::curve25519::ed25519::ED25519_PUBLIC_KEY_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of an Ed25519 public key.\n","sig":null,"attributes":[{"value":"/ The length of an Ed25519 public key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519.rs","byte_start":256036,"byte_end":256076,"line_start":23,"line_end":23,"column_start":1,"column_end":41}}]},{"kind":"Static","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\x25519.rs","byte_start":271202,"byte_end":271208,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"X25519","qualname":"::ec::curve25519::x25519::X25519","value":"agreement::Algorithm","parent":null,"children":[],"decl_id":null,"docs":" X25519 (ECDH using Curve25519) as described in [RFC 7748].","sig":null,"attributes":[{"value":"/ X25519 (ECDH using Curve25519) as described in [RFC 7748].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\x25519.rs","byte_start":270804,"byte_end":270866,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\x25519.rs","byte_start":270867,"byte_end":270870,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Everything is as described in RFC 7748. Key agreement will fail if the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\x25519.rs","byte_start":270871,"byte_end":270945,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ result of the X25519 operation is zero; see the notes on the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\x25519.rs","byte_start":270946,"byte_end":271010,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/ \"all-zero value\" in [RFC 7748 section 6.1].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\x25519.rs","byte_start":271011,"byte_end":271058,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\x25519.rs","byte_start":271059,"byte_end":271062,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [RFC 7748]: https://tools.ietf.org/html/rfc7748","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\x25519.rs","byte_start":271063,"byte_end":271114,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/ [RFC 7748 section 6.1]: https://tools.ietf.org/html/rfc7748#section-6.1","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\x25519.rs","byte_start":271115,"byte_end":271190,"line_start":38,"line_end":38,"column_start":1,"column_end":76}}]},{"kind":"Static","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":299759,"byte_end":299768,"line_start":64,"line_end":64,"column_start":5,"column_end":14},"name":"ECDH_P256","qualname":"::ec::suite_b::ecdh::ECDH_P256","value":"agreement::Algorithm","parent":null,"children":[],"decl_id":null,"docs":"ECDH using the NSA Suite B\nP-256 (secp256r1)\ncurve.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298397,"byte_end":298400,"line_start":28,"line_end":28,"column_start":9,"column_end":12}},{"value":"/ Public keys are encoding in uncompressed form using the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298409,"byte_end":298468,"line_start":29,"line_end":29,"column_start":9,"column_end":68}},{"value":"/ Octet-String-to-Elliptic-Curve-Point algorithm in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298477,"byte_end":298530,"line_start":30,"line_end":30,"column_start":9,"column_end":62}},{"value":"/ [SEC 1: Elliptic Curve Cryptography, Version 2.0]. Public keys are","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298539,"byte_end":298609,"line_start":31,"line_end":31,"column_start":9,"column_end":79}},{"value":"/ validated during key agreement according to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298618,"byte_end":298665,"line_start":32,"line_end":32,"column_start":9,"column_end":56}},{"value":"/ [NIST Special Publication 800-56A, revision 2] and Appendix B.3 of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298674,"byte_end":298744,"line_start":33,"line_end":33,"column_start":9,"column_end":79}},{"value":"/ the NSA's [Suite B Implementer's Guide to NIST SP 800-56A].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298753,"byte_end":298816,"line_start":34,"line_end":34,"column_start":9,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298825,"byte_end":298828,"line_start":35,"line_end":35,"column_start":9,"column_end":12}},{"value":"/ [SEC 1: Elliptic Curve Cryptography, Version 2.0]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298837,"byte_end":298891,"line_start":36,"line_end":36,"column_start":9,"column_end":63}},{"value":"/     http://www.secg.org/sec1-v2.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298900,"byte_end":298939,"line_start":37,"line_end":37,"column_start":9,"column_end":48}},{"value":"/ [NIST Special Publication 800-56A, revision 2]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298948,"byte_end":298999,"line_start":38,"line_end":38,"column_start":9,"column_end":60}},{"value":"/     http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Ar2.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":299008,"byte_end":299090,"line_start":39,"line_end":39,"column_start":9,"column_end":91}},{"value":"/ [Suite B Implementer's Guide to NIST SP 800-56A]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":299099,"byte_end":299152,"line_start":40,"line_end":40,"column_start":9,"column_end":62}},{"value":"/     https://github.com/briansmith/ring/blob/master/doc/ecdh.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":299161,"byte_end":299228,"line_start":41,"line_end":41,"column_start":9,"column_end":76}}]},{"kind":"Static","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":299910,"byte_end":299919,"line_start":73,"line_end":73,"column_start":5,"column_end":14},"name":"ECDH_P384","qualname":"::ec::suite_b::ecdh::ECDH_P384","value":"agreement::Algorithm","parent":null,"children":[],"decl_id":null,"docs":"ECDH using the NSA Suite B\nP-384 (secp384r1)\ncurve.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298397,"byte_end":298400,"line_start":28,"line_end":28,"column_start":9,"column_end":12}},{"value":"/ Public keys are encoding in uncompressed form using the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298409,"byte_end":298468,"line_start":29,"line_end":29,"column_start":9,"column_end":68}},{"value":"/ Octet-String-to-Elliptic-Curve-Point algorithm in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298477,"byte_end":298530,"line_start":30,"line_end":30,"column_start":9,"column_end":62}},{"value":"/ [SEC 1: Elliptic Curve Cryptography, Version 2.0]. Public keys are","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298539,"byte_end":298609,"line_start":31,"line_end":31,"column_start":9,"column_end":79}},{"value":"/ validated during key agreement according to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298618,"byte_end":298665,"line_start":32,"line_end":32,"column_start":9,"column_end":56}},{"value":"/ [NIST Special Publication 800-56A, revision 2] and Appendix B.3 of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298674,"byte_end":298744,"line_start":33,"line_end":33,"column_start":9,"column_end":79}},{"value":"/ the NSA's [Suite B Implementer's Guide to NIST SP 800-56A].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298753,"byte_end":298816,"line_start":34,"line_end":34,"column_start":9,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298825,"byte_end":298828,"line_start":35,"line_end":35,"column_start":9,"column_end":12}},{"value":"/ [SEC 1: Elliptic Curve Cryptography, Version 2.0]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298837,"byte_end":298891,"line_start":36,"line_end":36,"column_start":9,"column_end":63}},{"value":"/     http://www.secg.org/sec1-v2.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298900,"byte_end":298939,"line_start":37,"line_end":37,"column_start":9,"column_end":48}},{"value":"/ [NIST Special Publication 800-56A, revision 2]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":298948,"byte_end":298999,"line_start":38,"line_end":38,"column_start":9,"column_end":60}},{"value":"/     http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Ar2.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":299008,"byte_end":299090,"line_start":39,"line_end":39,"column_start":9,"column_end":91}},{"value":"/ [Suite B Implementer's Guide to NIST SP 800-56A]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":299099,"byte_end":299152,"line_start":40,"line_end":40,"column_start":9,"column_end":62}},{"value":"/     https://github.com/briansmith/ring/blob/master/doc/ecdh.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdh.rs","byte_start":299161,"byte_end":299228,"line_start":41,"line_end":41,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":313523,"byte_end":313544,"line_start":32,"line_end":32,"column_start":12,"column_end":33},"name":"EcdsaSigningAlgorithm","qualname":"::ec::suite_b::ecdsa::signing::EcdsaSigningAlgorithm","value":"EcdsaSigningAlgorithm {  }","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705}],"decl_id":null,"docs":" An ECDSA signing algorithm.\n","sig":null,"attributes":[{"value":"/ An ECDSA signing algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":313480,"byte_end":313511,"line_start":31,"line_end":31,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314388,"byte_end":314400,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"EcdsaKeyPair","qualname":"::ec::suite_b::ecdsa::signing::EcdsaKeyPair","value":"EcdsaKeyPair {  }","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713}],"decl_id":null,"docs":" An ECDSA key pair, used for signing.\n","sig":null,"attributes":[{"value":"/ An ECDSA key pair, used for signing.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314336,"byte_end":314376,"line_start":62,"line_end":62,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315168,"byte_end":315182,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"generate_pkcs8","qualname":"<EcdsaKeyPair>::generate_pkcs8","value":"fn (alg: &'static EcdsaSigningAlgorithm, rng: &dyn rand::SecureRandom) -> Result<pkcs8::Document, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Generates a new key pair and returns the key pair serialized as a\n PKCS#8 document.","sig":null,"attributes":[{"value":"/ Generates a new key pair and returns the key pair serialized as a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314594,"byte_end":314663,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ PKCS#8 document.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314668,"byte_end":314688,"line_start":73,"line_end":73,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314693,"byte_end":314696,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The PKCS#8 document will be a v1 `OneAsymmetricKey` with the public key","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314701,"byte_end":314776,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ included in the `ECPrivateKey` structure, as described in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314781,"byte_end":314842,"line_start":76,"line_end":76,"column_start":5,"column_end":66}},{"value":"/ [RFC 5958 Section 2] and [RFC 5915]. The `ECPrivateKey` structure will","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314847,"byte_end":314921,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ not have a `parameters` field so the generated key is compatible with","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314926,"byte_end":314999,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ PKCS#11.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315004,"byte_end":315016,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315021,"byte_end":315024,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [RFC 5915]: https://tools.ietf.org/html/rfc5915","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315029,"byte_end":315080,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/ [RFC 5958 Section 2]: https://tools.ietf.org/html/rfc5958#section-2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315085,"byte_end":315156,"line_start":82,"line_end":82,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316266,"byte_end":316276,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"from_pkcs8","qualname":"<EcdsaKeyPair>::from_pkcs8","value":"fn (alg: &'static EcdsaSigningAlgorithm, pkcs8: &[u8]) -> Result<Self, error::KeyRejected>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an ECDSA key pair by parsing an unencrypted PKCS#8 v1\n id-ecPublicKey `ECPrivateKey` key.","sig":null,"attributes":[{"value":"/ Constructs an ECDSA key pair by parsing an unencrypted PKCS#8 v1","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315621,"byte_end":315689,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/ id-ecPublicKey `ECPrivateKey` key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315694,"byte_end":315732,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315737,"byte_end":315740,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The input must be in PKCS#8 v1 format. It must contain the public key in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315745,"byte_end":315821,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ the `ECPrivateKey` structure; `from_pkcs8()` will verify that the public","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315826,"byte_end":315902,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ key and the private key are consistent with each other. The algorithm","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315907,"byte_end":315980,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ identifier must identify the curve by name; it must not use an","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":315985,"byte_end":316051,"line_start":102,"line_end":102,"column_start":5,"column_end":71}},{"value":"/ \"explicit\" encoding of the curve. The `parameters` field of the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316056,"byte_end":316123,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/ `ECPrivateKey`, if present, must be the same named curve that is in the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316128,"byte_end":316203,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ algorithm identifier in the PKCS#8 header.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316208,"byte_end":316254,"line_start":105,"line_end":105,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316941,"byte_end":316972,"line_start":125,"line_end":125,"column_start":12,"column_end":43},"name":"from_private_key_and_public_key","qualname":"<EcdsaKeyPair>::from_private_key_and_public_key","value":"fn (alg: &'static EcdsaSigningAlgorithm, private_key: &[u8], public_key: &[u8]) -> Result<Self, error::KeyRejected>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an ECDSA key pair directly from the big-endian-encoded\n private key and public key bytes.","sig":null,"attributes":[{"value":"/ Constructs an ECDSA key pair directly from the big-endian-encoded","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316633,"byte_end":316702,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ private key and public key bytes.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316707,"byte_end":316744,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316749,"byte_end":316752,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This is intended for use by code that deserializes key pairs. It is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316757,"byte_end":316828,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ recommended to use `RsaPubeyPair::from_pkcs8()` (with a PKCS#8-encoded","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316833,"byte_end":316907,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ key) instead.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":316912,"byte_end":316929,"line_start":124,"line_end":124,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":317957,"byte_end":317961,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"sign","qualname":"<EcdsaKeyPair>::sign","value":"fn (&self, rng: &dyn rand::SecureRandom, message: &[u8]) -> Result<signature::Signature, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Returns the signature of the `message` using a random nonce\n generated by `rng`.\n","sig":null,"attributes":[{"value":"/ Returns the signature of the `message` using a random nonce","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":317854,"byte_end":317917,"line_start":154,"line_end":154,"column_start":5,"column_end":68}},{"value":"/ generated by `rng`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":317922,"byte_end":317945,"line_start":155,"line_end":155,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2950},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":321331,"byte_end":321340,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::ec::suite_b::ecdsa::signing::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":323805,"byte_end":323836,"line_start":328,"line_end":328,"column_start":12,"column_end":43},"name":"ECDSA_P256_SHA256_FIXED_SIGNING","qualname":"::ec::suite_b::ecdsa::signing::ECDSA_P256_SHA256_FIXED_SIGNING","value":"EcdsaSigningAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" Signing of fixed-length (PKCS#11 style) ECDSA signatures using the\n P-256 curve and SHA-256.","sig":null,"attributes":[{"value":"/ Signing of fixed-length (PKCS#11 style) ECDSA signatures using the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":323584,"byte_end":323654,"line_start":323,"line_end":323,"column_start":1,"column_end":71}},{"value":"/ P-256 curve and SHA-256.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":323655,"byte_end":323683,"line_start":324,"line_end":324,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":323684,"byte_end":323687,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_FIXED` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":323688,"byte_end":323757,"line_start":326,"line_end":326,"column_start":1,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":323758,"byte_end":323793,"line_start":327,"line_end":327,"column_start":1,"column_end":36}}]},{"kind":"Static","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324423,"byte_end":324454,"line_start":343,"line_end":343,"column_start":12,"column_end":43},"name":"ECDSA_P384_SHA384_FIXED_SIGNING","qualname":"::ec::suite_b::ecdsa::signing::ECDSA_P384_SHA384_FIXED_SIGNING","value":"EcdsaSigningAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" Signing of fixed-length (PKCS#11 style) ECDSA signatures using the\n P-384 curve and SHA-384.","sig":null,"attributes":[{"value":"/ Signing of fixed-length (PKCS#11 style) ECDSA signatures using the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324202,"byte_end":324272,"line_start":338,"line_end":338,"column_start":1,"column_end":71}},{"value":"/ P-384 curve and SHA-384.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324273,"byte_end":324301,"line_start":339,"line_end":339,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324302,"byte_end":324305,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_FIXED` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324306,"byte_end":324375,"line_start":341,"line_end":341,"column_start":1,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324376,"byte_end":324411,"line_start":342,"line_end":342,"column_start":1,"column_end":36}}]},{"kind":"Static","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":325029,"byte_end":325059,"line_start":358,"line_end":358,"column_start":12,"column_end":42},"name":"ECDSA_P256_SHA256_ASN1_SIGNING","qualname":"::ec::suite_b::ecdsa::signing::ECDSA_P256_SHA256_ASN1_SIGNING","value":"EcdsaSigningAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" Signing of ASN.1 DER-encoded ECDSA signatures using the P-256 curve and\n SHA-256.","sig":null,"attributes":[{"value":"/ Signing of ASN.1 DER-encoded ECDSA signatures using the P-256 curve and","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324820,"byte_end":324895,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/ SHA-256.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324896,"byte_end":324908,"line_start":354,"line_end":354,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324909,"byte_end":324912,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_ASN1` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324913,"byte_end":324981,"line_start":356,"line_end":356,"column_start":1,"column_end":69}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":324982,"byte_end":325017,"line_start":357,"line_end":357,"column_start":1,"column_end":36}}]},{"kind":"Static","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":325632,"byte_end":325662,"line_start":373,"line_end":373,"column_start":12,"column_end":42},"name":"ECDSA_P384_SHA384_ASN1_SIGNING","qualname":"::ec::suite_b::ecdsa::signing::ECDSA_P384_SHA384_ASN1_SIGNING","value":"EcdsaSigningAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" Signing of ASN.1 DER-encoded ECDSA signatures using the P-384 curve and\n SHA-384.","sig":null,"attributes":[{"value":"/ Signing of ASN.1 DER-encoded ECDSA signatures using the P-384 curve and","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":325423,"byte_end":325498,"line_start":368,"line_end":368,"column_start":1,"column_end":76}},{"value":"/ SHA-384.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":325499,"byte_end":325511,"line_start":369,"line_end":369,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":325512,"byte_end":325515,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_ASN1` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":325516,"byte_end":325584,"line_start":371,"line_end":371,"column_start":1,"column_end":69}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":325585,"byte_end":325620,"line_start":372,"line_end":372,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":330660,"byte_end":330686,"line_start":29,"line_end":29,"column_start":12,"column_end":38},"name":"EcdsaVerificationAlgorithm","qualname":"::ec::suite_b::ecdsa::verification::EcdsaVerificationAlgorithm","value":"EcdsaVerificationAlgorithm {  }","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1758}],"decl_id":null,"docs":" An ECDSA verification algorithm.\n","sig":null,"attributes":[{"value":"/ An ECDSA verification algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":330612,"byte_end":330648,"line_start":28,"line_end":28,"column_start":1,"column_end":37}}]},{"kind":"Static","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":337683,"byte_end":337706,"line_start":211,"line_end":211,"column_start":12,"column_end":35},"name":"ECDSA_P256_SHA256_FIXED","qualname":"::ec::suite_b::ecdsa::verification::ECDSA_P256_SHA256_FIXED","value":"EcdsaVerificationAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" Verification of fixed-length (PKCS#11 style) ECDSA signatures using the\n P-256 curve and SHA-256.","sig":null,"attributes":[{"value":"/ Verification of fixed-length (PKCS#11 style) ECDSA signatures using the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":337457,"byte_end":337532,"line_start":206,"line_end":206,"column_start":1,"column_end":76}},{"value":"/ P-256 curve and SHA-256.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":337533,"byte_end":337561,"line_start":207,"line_end":207,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":337562,"byte_end":337565,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_FIXED` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":337566,"byte_end":337635,"line_start":209,"line_end":209,"column_start":1,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":337636,"byte_end":337671,"line_start":210,"line_end":210,"column_start":1,"column_end":36}}]},{"kind":"Static","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338140,"byte_end":338163,"line_start":223,"line_end":223,"column_start":12,"column_end":35},"name":"ECDSA_P384_SHA384_FIXED","qualname":"::ec::suite_b::ecdsa::verification::ECDSA_P384_SHA384_FIXED","value":"EcdsaVerificationAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" Verification of fixed-length (PKCS#11 style) ECDSA signatures using the\n P-384 curve and SHA-384.","sig":null,"attributes":[{"value":"/ Verification of fixed-length (PKCS#11 style) ECDSA signatures using the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":337914,"byte_end":337989,"line_start":218,"line_end":218,"column_start":1,"column_end":76}},{"value":"/ P-384 curve and SHA-384.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":337990,"byte_end":338018,"line_start":219,"line_end":219,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338019,"byte_end":338022,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_FIXED` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338023,"byte_end":338092,"line_start":221,"line_end":221,"column_start":1,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338093,"byte_end":338128,"line_start":222,"line_end":222,"column_start":1,"column_end":36}}]},{"kind":"Static","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338585,"byte_end":338607,"line_start":235,"line_end":235,"column_start":12,"column_end":34},"name":"ECDSA_P256_SHA256_ASN1","qualname":"::ec::suite_b::ecdsa::verification::ECDSA_P256_SHA256_ASN1","value":"EcdsaVerificationAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" Verification of ASN.1 DER-encoded ECDSA signatures using the P-256 curve\n and SHA-256.","sig":null,"attributes":[{"value":"/ Verification of ASN.1 DER-encoded ECDSA signatures using the P-256 curve","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338371,"byte_end":338447,"line_start":230,"line_end":230,"column_start":1,"column_end":77}},{"value":"/ and SHA-256.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338448,"byte_end":338464,"line_start":231,"line_end":231,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338465,"byte_end":338468,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_ASN1` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338469,"byte_end":338537,"line_start":233,"line_end":233,"column_start":1,"column_end":69}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338538,"byte_end":338573,"line_start":234,"line_end":234,"column_start":1,"column_end":36}}]},{"kind":"Static","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339360,"byte_end":339382,"line_start":252,"line_end":252,"column_start":12,"column_end":34},"name":"ECDSA_P256_SHA384_ASN1","qualname":"::ec::suite_b::ecdsa::verification::ECDSA_P256_SHA384_ASN1","value":"EcdsaVerificationAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" *Not recommended*. Verification of ASN.1 DER-encoded ECDSA signatures using\n the P-256 curve and SHA-384.","sig":null,"attributes":[{"value":"/ *Not recommended*. Verification of ASN.1 DER-encoded ECDSA signatures using","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338813,"byte_end":338892,"line_start":242,"line_end":242,"column_start":1,"column_end":80}},{"value":"/ the P-256 curve and SHA-384.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338893,"byte_end":338925,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338926,"byte_end":338929,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ In most situations, P-256 should be used only with SHA-256 and P-384","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":338930,"byte_end":339002,"line_start":245,"line_end":245,"column_start":1,"column_end":73}},{"value":"/ should be used only with SHA-384. However, in some cases, particularly TLS","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339003,"byte_end":339081,"line_start":246,"line_end":246,"column_start":1,"column_end":79}},{"value":"/ on the web, it is necessary to support P-256 with SHA-384 for compatibility","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339082,"byte_end":339161,"line_start":247,"line_end":247,"column_start":1,"column_end":80}},{"value":"/ with widely-deployed implementations that do not follow these guidelines.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339162,"byte_end":339239,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339240,"byte_end":339243,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_ASN1` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339244,"byte_end":339312,"line_start":250,"line_end":250,"column_start":1,"column_end":69}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339313,"byte_end":339348,"line_start":251,"line_end":251,"column_start":1,"column_end":36}}]},{"kind":"Static","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340135,"byte_end":340157,"line_start":269,"line_end":269,"column_start":12,"column_end":34},"name":"ECDSA_P384_SHA256_ASN1","qualname":"::ec::suite_b::ecdsa::verification::ECDSA_P384_SHA256_ASN1","value":"EcdsaVerificationAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" *Not recommended*. Verification of ASN.1 DER-encoded ECDSA signatures using\n the P-384 curve and SHA-256.","sig":null,"attributes":[{"value":"/ *Not recommended*. Verification of ASN.1 DER-encoded ECDSA signatures using","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339588,"byte_end":339667,"line_start":259,"line_end":259,"column_start":1,"column_end":80}},{"value":"/ the P-384 curve and SHA-256.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339668,"byte_end":339700,"line_start":260,"line_end":260,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339701,"byte_end":339704,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ In most situations, P-256 should be used only with SHA-256 and P-384","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339705,"byte_end":339777,"line_start":262,"line_end":262,"column_start":1,"column_end":73}},{"value":"/ should be used only with SHA-384. However, in some cases, particularly TLS","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339778,"byte_end":339856,"line_start":263,"line_end":263,"column_start":1,"column_end":79}},{"value":"/ on the web, it is necessary to support P-256 with SHA-384 for compatibility","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339857,"byte_end":339936,"line_start":264,"line_end":264,"column_start":1,"column_end":80}},{"value":"/ with widely-deployed implementations that do not follow these guidelines.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":339937,"byte_end":340014,"line_start":265,"line_end":265,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340015,"byte_end":340018,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_ASN1` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340019,"byte_end":340087,"line_start":267,"line_end":267,"column_start":1,"column_end":69}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340088,"byte_end":340123,"line_start":268,"line_end":268,"column_start":1,"column_end":36}}]},{"kind":"Static","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340577,"byte_end":340599,"line_start":281,"line_end":281,"column_start":12,"column_end":34},"name":"ECDSA_P384_SHA384_ASN1","qualname":"::ec::suite_b::ecdsa::verification::ECDSA_P384_SHA384_ASN1","value":"EcdsaVerificationAlgorithm","parent":null,"children":[],"decl_id":null,"docs":" Verification of ASN.1 DER-encoded ECDSA signatures using the P-384 curve\n and SHA-384.","sig":null,"attributes":[{"value":"/ Verification of ASN.1 DER-encoded ECDSA signatures using the P-384 curve","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340363,"byte_end":340439,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ and SHA-384.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340440,"byte_end":340456,"line_start":277,"line_end":277,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340457,"byte_end":340460,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ See \"`ECDSA_*_ASN1` Details\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340461,"byte_end":340529,"line_start":279,"line_end":279,"column_start":1,"column_end":69}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":340530,"byte_end":340565,"line_start":280,"line_end":280,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\endian.rs","byte_start":424352,"byte_end":424361,"line_start":68,"line_end":68,"column_start":16,"column_end":25},"name":"BigEndian","qualname":"::endian::BigEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\endian.rs","byte_start":423195,"byte_end":423215,"line_start":24,"line_end":24,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3010},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\endian.rs","byte_start":424379,"byte_end":424391,"line_start":69,"line_end":69,"column_start":16,"column_end":28},"name":"LittleEndian","qualname":"::endian::LittleEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\endian.rs","byte_start":423195,"byte_end":423215,"line_start":24,"line_end":24,"column_start":9,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":3055},{"krate":0,"index":3063},{"krate":0,"index":3062},{"krate":0,"index":3060},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":3065},{"krate":0,"index":3072},{"krate":0,"index":3070},{"krate":0,"index":3068},{"krate":0,"index":2075},{"krate":0,"index":2087},{"krate":0,"index":2089}],"decl_id":null,"docs":" Error reporting.\n","sig":null,"attributes":[{"value":"! Error reporting.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425518,"byte_end":425538,"line_start":15,"line_end":15,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427930,"byte_end":427941,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"Unspecified","qualname":"::error::Unspecified","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error with absolutely no details.","sig":null,"attributes":[{"value":"/ An error with absolutely no details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425599,"byte_end":425639,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425640,"byte_end":425643,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ *ring* uses this unit type as the error type in most of its results","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425644,"byte_end":425715,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ because (a) usually the specific reasons for a failure are obvious or are","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425716,"byte_end":425793,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ not useful to know, and/or (b) providing more details about a failure might","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425794,"byte_end":425873,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ provide a dangerous side channel, and/or (c) it greatly simplifies the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425874,"byte_end":425948,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ error handling logic.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425949,"byte_end":425974,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425975,"byte_end":425978,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `Result<T, ring::error::Unspecified>` is mostly equivalent to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":425979,"byte_end":426044,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/ `Result<T, ()>`. However, `ring::error::Unspecified` implements","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426045,"byte_end":426112,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ [`std::error::Error`] and users of *ring* can implement","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426113,"byte_end":426172,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ `From<ring::error::Unspecified>` to map this to their own error types, as","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426173,"byte_end":426250,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ described in [“Error Handling” in the Rust Book]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426251,"byte_end":426308,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426309,"byte_end":426312,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426313,"byte_end":426320,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use ring::rand::{self, SecureRandom};","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426321,"byte_end":426362,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426363,"byte_end":426366,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ enum Error {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426367,"byte_end":426383,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     CryptoError,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426384,"byte_end":426404,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426405,"byte_end":426408,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #  #[cfg(feature = \"alloc\")]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426409,"byte_end":426441,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/     IOError(std::io::Error),","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426442,"byte_end":426474,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"/     // [...]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426475,"byte_end":426491,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426492,"byte_end":426497,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426498,"byte_end":426501,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl From<ring::error::Unspecified> for Error {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426502,"byte_end":426553,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/     fn from(_: ring::error::Unspecified) -> Self { Error::CryptoError }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426554,"byte_end":426629,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426630,"byte_end":426635,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426636,"byte_end":426639,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ fn eight_random_bytes() -> Result<[u8; 8], Error> {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426640,"byte_end":426695,"line_start":51,"line_end":51,"column_start":1,"column_end":56}},{"value":"/     let rng = rand::SystemRandom::new();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426696,"byte_end":426740,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     let mut bytes = [0; 8];","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426741,"byte_end":426772,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426773,"byte_end":426776,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // The `From<ring::error::Unspecified>` implementation above makes this","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426777,"byte_end":426856,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/     // equivalent to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426857,"byte_end":426881,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/     // `rng.fill(&mut bytes).map_err(|_| Error::CryptoError)?`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426882,"byte_end":426949,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/     rng.fill(&mut bytes)?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426950,"byte_end":426980,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426981,"byte_end":426984,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     Ok(bytes)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":426985,"byte_end":427002,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427003,"byte_end":427008,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427009,"byte_end":427012,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ assert!(eight_random_bytes().is_ok());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427013,"byte_end":427055,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427056,"byte_end":427063,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427064,"byte_end":427067,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Experience with using and implementing other crypto libraries like has","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427068,"byte_end":427142,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ shown that sophisticated error reporting facilities often cause significant","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427143,"byte_end":427222,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ bugs themselves, both within the crypto library and within users of the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427223,"byte_end":427298,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ crypto library. This approach attempts to minimize complexity in the hopes","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427299,"byte_end":427377,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ of avoiding such problems. In some cases, this approach may be too extreme,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427378,"byte_end":427457,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ and it may be important for an operation to provide some details about the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427458,"byte_end":427536,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ cause of a failure. Users of *ring* are encouraged to report such cases so","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427537,"byte_end":427615,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ that they can be addressed individually.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427616,"byte_end":427660,"line_start":73,"line_end":73,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427661,"byte_end":427664,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`std::error::Error`]: https://doc.rust-lang.org/std/error/trait.Error.html","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427665,"byte_end":427744,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ [“Error Handling” in the Rust Book]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427745,"byte_end":427789,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/     https://doc.rust-lang.org/book/first-edition/error-handling.html#the-from-trait","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427790,"byte_end":427877,"line_start":77,"line_end":77,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430340,"byte_end":430351,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"KeyRejected","qualname":"::error::KeyRejected","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error parsing or validating a key.","sig":null,"attributes":[{"value":"/ An error parsing or validating a key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428781,"byte_end":428822,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428823,"byte_end":428826,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The `Display` implementation and `<KeyRejected as Error>::description()`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428827,"byte_end":428903,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ will return a string that will help you better understand why a key was","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428904,"byte_end":428979,"line_start":121,"line_end":121,"column_start":1,"column_end":76}},{"value":"/ rejected change which errors are reported in which situations while","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428980,"byte_end":429051,"line_start":122,"line_end":122,"column_start":1,"column_end":72}},{"value":"/ minimizing the likelihood that any applications will be broken.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429052,"byte_end":429119,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429120,"byte_end":429123,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Here is an incomplete list of reasons a key may be unsupported:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429124,"byte_end":429191,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429192,"byte_end":429195,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ * Invalid or Inconsistent Components: A component of the key has an invalid","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429196,"byte_end":429275,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/   value, or the mathematical relationship between two (or more) components","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429276,"byte_end":429354,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/   required for a valid key does not hold.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429355,"byte_end":429400,"line_start":129,"line_end":129,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429401,"byte_end":429404,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ * The encoding of the key is invalid. Perhaps the key isn't in the correct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429405,"byte_end":429483,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/   format; e.g. it may be Base64 (\"PEM\") encoded, in which case   the Base64","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429484,"byte_end":429563,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/   encoding needs to be undone first.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429564,"byte_end":429604,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429605,"byte_end":429608,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ * The encoding includes a versioning mechanism and that mechanism indicates","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429609,"byte_end":429688,"line_start":135,"line_end":135,"column_start":1,"column_end":80}},{"value":"/   that the key is encoded in a version of the encoding that isn't supported.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429689,"byte_end":429769,"line_start":136,"line_end":136,"column_start":1,"column_end":81}},{"value":"/   This might happen for multi-prime RSA keys (keys with more than two","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429770,"byte_end":429843,"line_start":137,"line_end":137,"column_start":1,"column_end":74}},{"value":"/   private   prime factors), which aren't supported, for example.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429844,"byte_end":429912,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429913,"byte_end":429916,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ * Too small or too Large: One of the primary components of the key is too","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429917,"byte_end":429994,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/   small or two large. Too-small keys are rejected for security reasons. Some","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":429995,"byte_end":430075,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/   unnecessarily large keys are rejected for performance reasons.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430076,"byte_end":430144,"line_start":142,"line_end":142,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430145,"byte_end":430148,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/  * Wrong algorithm: The key is not valid for the algorithm in which it was","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430149,"byte_end":430227,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/    being used.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430228,"byte_end":430246,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430247,"byte_end":430250,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/  * Unexpected errors: Report this as a bug.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430251,"byte_end":430298,"line_start":147,"line_end":147,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430473,"byte_end":430485,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"description_","qualname":"<KeyRejected>::description_","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" The value returned from <Self as std::error::Error>::description()\n","sig":null,"attributes":[{"value":"/ The value returned from <Self as std::error::Error>::description()","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430391,"byte_end":430461,"line_start":152,"line_end":152,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hkdf","qualname":"::hkdf","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","parent":null,"children":[{"krate":0,"index":2092},{"krate":0,"index":3073},{"krate":0,"index":3086},{"krate":0,"index":3085},{"krate":0,"index":3083},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":3088},{"krate":0,"index":3091},{"krate":0,"index":2103},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":3093},{"krate":0,"index":3098},{"krate":0,"index":3096},{"krate":0,"index":2111},{"krate":0,"index":2116},{"krate":0,"index":3100},{"krate":0,"index":3107},{"krate":0,"index":2118},{"krate":0,"index":2122}],"decl_id":null,"docs":" HMAC-based Extract-and-Expand Key Derivation Function.","sig":null,"attributes":[{"value":"! HMAC-based Extract-and-Expand Key Derivation Function.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":432872,"byte_end":432930,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":432931,"byte_end":432934,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! HKDF is specified in [RFC 5869].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":432935,"byte_end":432971,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":432972,"byte_end":432975,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! [RFC 5869]: https://tools.ietf.org/html/rfc5869","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":432976,"byte_end":433027,"line_start":19,"line_end":19,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433135,"byte_end":433144,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Algorithm","qualname":"::hkdf::Algorithm","value":"","parent":null,"children":[],"decl_id":null,"docs":" An HKDF algorithm.\n","sig":null,"attributes":[{"value":"/ An HKDF algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433056,"byte_end":433078,"line_start":23,"line_end":23,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433245,"byte_end":433259,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"hmac_algorithm","qualname":"<Algorithm>::hmac_algorithm","value":"fn (&self) -> hmac::Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The underlying HMAC algorithm.\n","sig":null,"attributes":[{"value":"/ The underlying HMAC algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433185,"byte_end":433219,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433224,"byte_end":433233,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433360,"byte_end":433389,"line_start":36,"line_end":36,"column_start":12,"column_end":41},"name":"HKDF_SHA1_FOR_LEGACY_USE_ONLY","qualname":"::hkdf::HKDF_SHA1_FOR_LEGACY_USE_ONLY","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" HKDF using HMAC-SHA-1. Obsolete.\n","sig":null,"attributes":[{"value":"/ HKDF using HMAC-SHA-1. Obsolete.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433312,"byte_end":433348,"line_start":35,"line_end":35,"column_start":1,"column_end":37}}]},{"kind":"Static","id":{"krate":0,"index":2098},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433496,"byte_end":433507,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"HKDF_SHA256","qualname":"::hkdf::HKDF_SHA256","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" HKDF using HMAC-SHA-256.\n","sig":null,"attributes":[{"value":"/ HKDF using HMAC-SHA-256.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433456,"byte_end":433484,"line_start":39,"line_end":39,"column_start":1,"column_end":29}}]},{"kind":"Static","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433592,"byte_end":433603,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"HKDF_SHA384","qualname":"::hkdf::HKDF_SHA384","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" HKDF using HMAC-SHA-384.\n","sig":null,"attributes":[{"value":"/ HKDF using HMAC-SHA-384.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433552,"byte_end":433580,"line_start":42,"line_end":42,"column_start":1,"column_end":29}}]},{"kind":"Static","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433688,"byte_end":433699,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"HKDF_SHA512","qualname":"::hkdf::HKDF_SHA512","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" HKDF using HMAC-SHA-512.\n","sig":null,"attributes":[{"value":"/ HKDF using HMAC-SHA-512.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433648,"byte_end":433676,"line_start":45,"line_end":45,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3088},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433916,"byte_end":433920,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"Salt","qualname":"::hkdf::Salt","value":"","parent":null,"children":[],"decl_id":null,"docs":" A salt for HKDF operations.\n","sig":null,"attributes":[{"value":"/ A salt for HKDF operations.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433856,"byte_end":433887,"line_start":54,"line_end":54,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":434220,"byte_end":434223,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<Salt>::new","value":"fn (algorithm: Algorithm, value: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Salt` with the given value based on the given digest\n algorithm.","sig":null,"attributes":[{"value":"/ Constructs a new `Salt` with the given value based on the given digest","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433950,"byte_end":434024,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":434029,"byte_end":434043,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":434048,"byte_end":434051,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Constructing a `Salt` is relatively expensive so it is good to reuse a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":434056,"byte_end":434130,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ `Salt` object instead of re-constructing `Salt`s with the same value.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":434135,"byte_end":434208,"line_start":63,"line_end":63,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":434455,"byte_end":434462,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"extract","qualname":"<Salt>::extract","value":"fn (&self, secret: &[u8]) -> Prk","parent":null,"children":[],"decl_id":null,"docs":" The [HKDF-Extract] operation.","sig":null,"attributes":[{"value":"/ The [HKDF-Extract] operation.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":434330,"byte_end":434363,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":434368,"byte_end":434371,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [HKDF-Extract]: https://tools.ietf.org/html/rfc5869#section-2.2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":434376,"byte_end":434443,"line_start":70,"line_end":70,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435122,"byte_end":435131,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Salt>::algorithm","value":"fn (&self) -> Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The algorithm used to derive this salt.\n","sig":null,"attributes":[{"value":"/ The algorithm used to derive this salt.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435053,"byte_end":435096,"line_start":83,"line_end":83,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435101,"byte_end":435110,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435558,"byte_end":435565,"line_start":102,"line_end":102,"column_start":11,"column_end":18},"name":"KeyType","qualname":"::hkdf::KeyType","value":"KeyType","parent":null,"children":[{"krate":0,"index":2110}],"decl_id":null,"docs":" The length of the OKM (Output Keying Material) for a `Prk::expand()` call.\n","sig":null,"attributes":[{"value":"/ The length of the OKM (Output Keying Material) for a `Prk::expand()` call.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435469,"byte_end":435547,"line_start":101,"line_end":101,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435643,"byte_end":435646,"line_start":104,"line_end":104,"column_start":8,"column_end":11},"name":"len","qualname":"::hkdf::KeyType::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":2109},"children":[],"decl_id":null,"docs":" The length that `Prk::expand()` should expand its input to.\n","sig":null,"attributes":[{"value":"/ The length that `Prk::expand()` should expand its input to.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435572,"byte_end":435635,"line_start":103,"line_end":103,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435737,"byte_end":435740,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"Prk","qualname":"::hkdf::Prk","value":"","parent":null,"children":[],"decl_id":null,"docs":" A HKDF PRK (pseudorandom key).\n","sig":null,"attributes":[{"value":"/ A HKDF PRK (pseudorandom key).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435667,"byte_end":435701,"line_start":107,"line_end":107,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436030,"byte_end":436043,"line_start":117,"line_end":117,"column_start":12,"column_end":25},"name":"new_less_safe","qualname":"<Prk>::new_less_safe","value":"fn (algorithm: Algorithm, value: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Prk` directly with the given value.","sig":null,"attributes":[{"value":"/ Construct a new `Prk` directly with the given value.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435769,"byte_end":435825,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435830,"byte_end":435833,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Usually one can avoid using this. It is useful when the application","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435838,"byte_end":435909,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ intentionally wants to leak the PRK secret, e.g. to implement","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435914,"byte_end":435979,"line_start":115,"line_end":115,"column_start":5,"column_end":70}},{"value":"/ `SSLKEYLOGFILE` functionality.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435984,"byte_end":436018,"line_start":116,"line_end":116,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436361,"byte_end":436367,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"expand","qualname":"<Prk>::expand","value":"fn <'a, L> (&'a self, info: &'a [&'a [u8]], len: L) -> Result<Okm<'a, L>, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" The [HKDF-Expand] operation.","sig":null,"attributes":[{"value":"/ The [HKDF-Expand] operation.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436165,"byte_end":436197,"line_start":121,"line_end":121,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436202,"byte_end":436205,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [HKDF-Expand]: https://tools.ietf.org/html/rfc5869#section-2.3","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436210,"byte_end":436276,"line_start":123,"line_end":123,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436281,"byte_end":436284,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Fails if (and only if) `len` is too large.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436289,"byte_end":436335,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436340,"byte_end":436349,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3100},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437215,"byte_end":437218,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"Okm","qualname":"::hkdf::Okm","value":"Okm {  }","parent":null,"children":[{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106}],"decl_id":null,"docs":" An HKDF OKM (Output Keying Material)","sig":null,"attributes":[{"value":"/ An HKDF OKM (Output Keying Material)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437052,"byte_end":437092,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437093,"byte_end":437096,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Intentionally not `Clone` or `Copy` as an OKM is generally only safe to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437097,"byte_end":437172,"line_start":158,"line_end":158,"column_start":1,"column_end":76}},{"value":"/ use once.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437173,"byte_end":437186,"line_start":159,"line_end":159,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437424,"byte_end":437427,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"len","qualname":"<Okm>::len","value":"fn (&self) -> &L","parent":null,"children":[],"decl_id":null,"docs":" The `OkmLength` given to `Prk::expand()`.\n","sig":null,"attributes":[{"value":"/ The `OkmLength` given to `Prk::expand()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437353,"byte_end":437398,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437403,"byte_end":437412,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437847,"byte_end":437851,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"fill","qualname":"<Okm>::fill","value":"fn (self, out: &mut [u8]) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Fills `out` with the output of the HKDF-Expand operation for the given\n inputs.","sig":null,"attributes":[{"value":"/ Fills `out` with the output of the HKDF-Expand operation for the given","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437472,"byte_end":437546,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ inputs.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437551,"byte_end":437562,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437567,"byte_end":437570,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Fails if (and only if) the requested output length is larger than 255","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437575,"byte_end":437648,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ times the size of the digest algorithm's output. (This is the limit","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437653,"byte_end":437724,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/ imposed by the HKDF specification due to the way HKDF's counter is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437729,"byte_end":437799,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ constructed.)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437804,"byte_end":437821,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437826,"byte_end":437835,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hmac","qualname":"::hmac","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","parent":null,"children":[{"krate":0,"index":2124},{"krate":0,"index":3111},{"krate":0,"index":3124},{"krate":0,"index":3123},{"krate":0,"index":3121},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":3126},{"krate":0,"index":3132},{"krate":0,"index":3131},{"krate":0,"index":3129},{"krate":0,"index":2137},{"krate":0,"index":3134},{"krate":0,"index":3137},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":3139},{"krate":0,"index":3142},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2162},{"krate":0,"index":2167},{"krate":0,"index":2168}],"decl_id":null,"docs":" HMAC is specified in [RFC 2104].","sig":null,"attributes":[{"value":"! HMAC is specified in [RFC 2104].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":439860,"byte_end":439896,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":439897,"byte_end":439900,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! After a `Key` is constructed, it can be used for multiple signing or","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":439901,"byte_end":439973,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"! verification operations. Separating the construction of the key from the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":439974,"byte_end":440050,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"! rest of the HMAC operation allows the per-key precomputation to be done","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440051,"byte_end":440126,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"! only once, instead of it being done in every HMAC operation.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440127,"byte_end":440191,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440192,"byte_end":440195,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Frequently all the data to be signed in a message is available in a single","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440196,"byte_end":440274,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! contiguous piece. In that case, the module-level `sign` function can be","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440275,"byte_end":440350,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"! used. Otherwise, if the input is in multiple parts, `Context` should be","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440351,"byte_end":440426,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"! used.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440427,"byte_end":440436,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440437,"byte_end":440440,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! # Examples:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440441,"byte_end":440456,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440457,"byte_end":440460,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ## Signing a value and verifying it wasn't tampered with","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440461,"byte_end":440521,"line_start":29,"line_end":29,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440522,"byte_end":440525,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440526,"byte_end":440533,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"! use ring::{hmac, rand};","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440534,"byte_end":440561,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440562,"byte_end":440565,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! let rng = rand::SystemRandom::new();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440566,"byte_end":440606,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"! let key = hmac::Key::generate(hmac::HMAC_SHA256, &rng)?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440607,"byte_end":440667,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440668,"byte_end":440671,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! let msg = \"hello, world\";","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440672,"byte_end":440701,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440702,"byte_end":440705,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! let tag = hmac::sign(&key, msg.as_bytes());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440706,"byte_end":440753,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440754,"byte_end":440757,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! // [We give access to the message to an untrusted party, and they give it","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440758,"byte_end":440835,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"! // back to us. We need to verify they didn't tamper with it.]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440836,"byte_end":440901,"line_start":42,"line_end":42,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440902,"byte_end":440905,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! hmac::verify(&key, msg.as_bytes(), tag.as_ref())?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440906,"byte_end":440960,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440961,"byte_end":440964,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! # Ok::<(), ring::error::Unspecified>(())","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":440965,"byte_end":441009,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441010,"byte_end":441017,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441018,"byte_end":441021,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ## Using the one-shot API:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441022,"byte_end":441052,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441053,"byte_end":441056,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441057,"byte_end":441064,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"! use ring::{digest, hmac, rand};","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441065,"byte_end":441100,"line_start":52,"line_end":52,"column_start":1,"column_end":36}},{"value":"! use ring::rand::SecureRandom;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441101,"byte_end":441134,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441135,"byte_end":441138,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! let msg = \"hello, world\";","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441139,"byte_end":441168,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441169,"byte_end":441172,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! // The sender generates a secure key value and signs the message with it.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441173,"byte_end":441250,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"! // Note that in a real protocol, a key agreement protocol would be used to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441251,"byte_end":441329,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"! // derive `key_value`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441330,"byte_end":441356,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"! let rng = rand::SystemRandom::new();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441357,"byte_end":441397,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"! let key_value: [u8; digest::SHA256_OUTPUT_LEN] = rand::generate(&rng)?.expose();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441398,"byte_end":441482,"line_start":61,"line_end":61,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441483,"byte_end":441486,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! let s_key = hmac::Key::new(hmac::HMAC_SHA256, key_value.as_ref());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441487,"byte_end":441557,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"! let tag = hmac::sign(&s_key, msg.as_bytes());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441558,"byte_end":441607,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441608,"byte_end":441611,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! // The receiver (somehow!) knows the key value, and uses it to verify the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441612,"byte_end":441689,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"! // integrity of the message.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441690,"byte_end":441722,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"! let v_key = hmac::Key::new(hmac::HMAC_SHA256, key_value.as_ref());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441723,"byte_end":441793,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"! hmac::verify(&v_key, msg.as_bytes(), tag.as_ref())?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441794,"byte_end":441850,"line_start":69,"line_end":69,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441851,"byte_end":441854,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! # Ok::<(), ring::error::Unspecified>(())","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441855,"byte_end":441899,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441900,"byte_end":441907,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441908,"byte_end":441911,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! ## Using the multi-part API:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441912,"byte_end":441944,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441945,"byte_end":441952,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"! use ring::{digest, hmac, rand};","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441953,"byte_end":441988,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"! use ring::rand::SecureRandom;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":441989,"byte_end":442022,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442023,"byte_end":442026,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! let parts = [\"hello\", \", \", \"world\"];","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442027,"byte_end":442068,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442069,"byte_end":442072,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // The sender generates a secure key value and signs the message with it.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442073,"byte_end":442150,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"! // Note that in a real protocol, a key agreement protocol would be used to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442151,"byte_end":442229,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"! // derive `key_value`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442230,"byte_end":442256,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"! let rng = rand::SystemRandom::new();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442257,"byte_end":442297,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"! let mut key_value: [u8; digest::SHA384_OUTPUT_LEN] = rand::generate(&rng)?.expose();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442298,"byte_end":442386,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442387,"byte_end":442390,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! let s_key = hmac::Key::new(hmac::HMAC_SHA384, key_value.as_ref());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442391,"byte_end":442461,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"! let mut s_ctx = hmac::Context::with_key(&s_key);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442462,"byte_end":442514,"line_start":88,"line_end":88,"column_start":1,"column_end":53}},{"value":"! for part in &parts {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442515,"byte_end":442539,"line_start":89,"line_end":89,"column_start":1,"column_end":25}},{"value":"!     s_ctx.update(part.as_bytes());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442540,"byte_end":442578,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"! }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442579,"byte_end":442584,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"! let tag = s_ctx.sign();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442585,"byte_end":442612,"line_start":92,"line_end":92,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442613,"byte_end":442616,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! // The receiver (somehow!) knows the key value, and uses it to verify the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442617,"byte_end":442694,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"! // integrity of the message.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442695,"byte_end":442727,"line_start":95,"line_end":95,"column_start":1,"column_end":33}},{"value":"! let v_key = hmac::Key::new(hmac::HMAC_SHA384, key_value.as_ref());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442728,"byte_end":442798,"line_start":96,"line_end":96,"column_start":1,"column_end":71}},{"value":"! let mut msg = Vec::<u8>::new();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442799,"byte_end":442834,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"! for part in &parts {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442835,"byte_end":442859,"line_start":98,"line_end":98,"column_start":1,"column_end":25}},{"value":"!     msg.extend(part.as_bytes());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442860,"byte_end":442896,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442897,"byte_end":442902,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"! hmac::verify(&v_key, &msg.as_ref(), tag.as_ref())?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442903,"byte_end":442958,"line_start":101,"line_end":101,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442959,"byte_end":442962,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! # Ok::<(), ring::error::Unspecified>(())","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":442963,"byte_end":443007,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443008,"byte_end":443015,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443016,"byte_end":443019,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! [RFC 2104]: https://tools.ietf.org/html/rfc2104","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443020,"byte_end":443071,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"! [code for `ring::pbkdf2`]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443072,"byte_end":443102,"line_start":107,"line_end":107,"column_start":1,"column_end":31}},{"value":"!     https://github.com/briansmith/ring/blob/master/src/pbkdf2.rs","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443103,"byte_end":443171,"line_start":108,"line_end":108,"column_start":1,"column_end":69}},{"value":"! [code for `ring::hkdf`]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443172,"byte_end":443200,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"!     https://github.com/briansmith/ring/blob/master/src/hkdf.rs","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443201,"byte_end":443267,"line_start":110,"line_end":110,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443404,"byte_end":443413,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"Algorithm","qualname":"::hmac::Algorithm","value":"","parent":null,"children":[],"decl_id":null,"docs":" An HMAC algorithm.\n","sig":null,"attributes":[{"value":"/ An HMAC algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443325,"byte_end":443347,"line_start":114,"line_end":114,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443548,"byte_end":443564,"line_start":121,"line_end":121,"column_start":12,"column_end":28},"name":"digest_algorithm","qualname":"<Algorithm>::digest_algorithm","value":"fn (&self) -> &'static digest::Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The digest algorithm this HMAC algorithm is based on.\n","sig":null,"attributes":[{"value":"/ The digest algorithm this HMAC algorithm is based on.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443465,"byte_end":443522,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443527,"byte_end":443536,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443671,"byte_end":443700,"line_start":127,"line_end":127,"column_start":12,"column_end":41},"name":"HMAC_SHA1_FOR_LEGACY_USE_ONLY","qualname":"::hmac::HMAC_SHA1_FOR_LEGACY_USE_ONLY","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" HMAC using SHA-1. Obsolete.\n","sig":null,"attributes":[{"value":"/ HMAC using SHA-1. Obsolete.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443628,"byte_end":443659,"line_start":126,"line_end":126,"column_start":1,"column_end":32}}]},{"kind":"Static","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443796,"byte_end":443807,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"HMAC_SHA256","qualname":"::hmac::HMAC_SHA256","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" HMAC using SHA-256.\n","sig":null,"attributes":[{"value":"/ HMAC using SHA-256.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443761,"byte_end":443784,"line_start":129,"line_end":129,"column_start":1,"column_end":24}}]},{"kind":"Static","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443885,"byte_end":443896,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"HMAC_SHA384","qualname":"::hmac::HMAC_SHA384","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" HMAC using SHA-384.\n","sig":null,"attributes":[{"value":"/ HMAC using SHA-384.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443850,"byte_end":443873,"line_start":132,"line_end":132,"column_start":1,"column_end":24}}]},{"kind":"Static","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443974,"byte_end":443985,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"HMAC_SHA512","qualname":"::hmac::HMAC_SHA512","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" HMAC using SHA-512.\n","sig":null,"attributes":[{"value":"/ HMAC using SHA-512.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443939,"byte_end":443962,"line_start":135,"line_end":135,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444162,"byte_end":444171,"line_start":140,"line_end":140,"column_start":10,"column_end":19},"name":"Signature","qualname":"::hmac::Signature","value":"Tag","parent":null,"children":[],"decl_id":null,"docs":" A deprecated alias for `Tag`.\n","sig":null,"attributes":[{"value":"/ A deprecated alias for `Tag`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444028,"byte_end":444061,"line_start":138,"line_end":138,"column_start":1,"column_end":34}},{"value":"deprecated(note =\n             \"`Signature` was renamed to `Tag`. This alias will be removed soon.\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444062,"byte_end":444152,"line_start":139,"line_end":139,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":3126},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444322,"byte_end":444325,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"Tag","qualname":"::hmac::Tag","value":"","parent":null,"children":[],"decl_id":null,"docs":" An HMAC tag.","sig":null,"attributes":[{"value":"/ An HMAC tag.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444180,"byte_end":444196,"line_start":142,"line_end":142,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444197,"byte_end":444200,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ For a given tag `t`, use `t.as_ref()` to get the tag value as a byte slice.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444201,"byte_end":444280,"line_start":144,"line_end":144,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444513,"byte_end":444516,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"Key","qualname":"::hmac::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3136}],"decl_id":null,"docs":" A key to use for HMAC signing.\n","sig":null,"attributes":[{"value":"/ A key to use for HMAC signing.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444450,"byte_end":444484,"line_start":155,"line_end":155,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":2139},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444696,"byte_end":444706,"line_start":164,"line_end":164,"column_start":10,"column_end":20},"name":"SigningKey","qualname":"::hmac::SigningKey","value":"Key","parent":null,"children":[],"decl_id":null,"docs":" `hmac::SigningKey` was renamed to `hmac::Key`.\n","sig":null,"attributes":[{"value":"/ `hmac::SigningKey` was renamed to `hmac::Key`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444588,"byte_end":444638,"line_start":162,"line_end":162,"column_start":1,"column_end":51}},{"value":"deprecated(note = \"Renamed to `hmac::Key`.\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444639,"byte_end":444686,"line_start":163,"line_end":163,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444893,"byte_end":444908,"line_start":170,"line_end":170,"column_start":10,"column_end":25},"name":"VerificationKey","qualname":"::hmac::VerificationKey","value":"Key","parent":null,"children":[],"decl_id":null,"docs":" `hmac::VerificationKey` was merged into `hmac::Key`.\n","sig":null,"attributes":[{"value":"/ `hmac::VerificationKey` was merged into `hmac::Key`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444715,"byte_end":444771,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"deprecated(note =\n             \"The distinction between verification & signing keys was removed. Use `hmac::Key`.\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444772,"byte_end":444883,"line_start":167,"line_end":169,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":445457,"byte_end":445465,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"generate","qualname":"<Key>::generate","value":"fn (algorithm: Algorithm, rng: &dyn rand::SecureRandom) -> Result<Self, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Generate an HMAC signing key using the given digest algorithm with a\n random value generated from `rng`.","sig":null,"attributes":[{"value":"/ Generate an HMAC signing key using the given digest algorithm with a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":445176,"byte_end":445248,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ random value generated from `rng`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":445253,"byte_end":445291,"line_start":182,"line_end":182,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":445296,"byte_end":445299,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The key will be `digest_alg.output_len` bytes long, based on the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":445304,"byte_end":445372,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ recommendation in https://tools.ietf.org/html/rfc2104#section-3.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":445377,"byte_end":445445,"line_start":185,"line_end":185,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":447122,"byte_end":447125,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<Key>::new","value":"fn (algorithm: Algorithm, key_value: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an HMAC signing key using the given digest algorithm and key\n value.","sig":null,"attributes":[{"value":"/ Construct an HMAC signing key using the given digest algorithm and key","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446013,"byte_end":446087,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446092,"byte_end":446102,"line_start":204,"line_end":204,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446107,"byte_end":446110,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ `key_value` should be a value generated using a secure random number","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446115,"byte_end":446187,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ generator (e.g. the `key_value` output by","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446192,"byte_end":446237,"line_start":207,"line_end":207,"column_start":5,"column_end":50}},{"value":"/ `SealingKey::generate_serializable()`) or derived from a random key by","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446242,"byte_end":446316,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ a key derivation function (e.g. `ring::hkdf`). In particular,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446321,"byte_end":446386,"line_start":209,"line_end":209,"column_start":5,"column_end":70}},{"value":"/ `key_value` shouldn't be a password.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446391,"byte_end":446431,"line_start":210,"line_end":210,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446436,"byte_end":446439,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ As specified in RFC 2104, if `key_value` is shorter than the digest","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446444,"byte_end":446515,"line_start":212,"line_end":212,"column_start":5,"column_end":76}},{"value":"/ algorithm's block length (as returned by `digest::Algorithm::block_len`,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446520,"byte_end":446596,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ not the digest length returned by `digest::Algorithm::output_len`) then","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446601,"byte_end":446676,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ it will be padded with zeros. Similarly, if it is longer than the block","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446681,"byte_end":446756,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ length then it will be compressed using the digest algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446761,"byte_end":446826,"line_start":216,"line_end":216,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446831,"byte_end":446834,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ You should not use keys larger than the `digest_alg.block_len` because","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446839,"byte_end":446913,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ the truncation described above reduces their strength to only","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446918,"byte_end":446983,"line_start":219,"line_end":219,"column_start":5,"column_end":70}},{"value":"/ `digest_alg.output_len * 8` bits. Support for such keys is likely to be","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":446988,"byte_end":447063,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ removed in a future version of *ring*.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":447068,"byte_end":447110,"line_start":221,"line_end":221,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448535,"byte_end":448544,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Key>::algorithm","value":"fn (&self) -> Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The digest algorithm for the key.\n","sig":null,"attributes":[{"value":"/ The digest algorithm for the key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448472,"byte_end":448509,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448514,"byte_end":448523,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449042,"byte_end":449049,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"Context","qualname":"::hmac::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3141}],"decl_id":null,"docs":" A context for multi-step (Init-Update-Finish) HMAC signing.","sig":null,"attributes":[{"value":"/ A context for multi-step (Init-Update-Finish) HMAC signing.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448901,"byte_end":448964,"line_start":281,"line_end":281,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448965,"byte_end":448968,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use `sign` for single-step HMAC signing.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448969,"byte_end":449013,"line_start":283,"line_end":283,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449236,"byte_end":449250,"line_start":292,"line_end":292,"column_start":10,"column_end":24},"name":"SigningContext","qualname":"::hmac::SigningContext","value":"Context","parent":null,"children":[],"decl_id":null,"docs":" `hmac::SigningContext` was renamed to `hmac::Context`.\n","sig":null,"attributes":[{"value":"/ `hmac::SigningContext` was renamed to `hmac::Context`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449116,"byte_end":449174,"line_start":290,"line_end":290,"column_start":1,"column_end":59}},{"value":"deprecated(note = \"Renamed to `hmac::Context`.\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449175,"byte_end":449226,"line_start":291,"line_end":291,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449624,"byte_end":449632,"line_start":305,"line_end":305,"column_start":12,"column_end":20},"name":"with_key","qualname":"<Context>::with_key","value":"fn (signing_key: &Key) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new HMAC signing context using the given digest algorithm\n and key.\n","sig":null,"attributes":[{"value":"/ Constructs a new HMAC signing context using the given digest algorithm","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449521,"byte_end":449595,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ and key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449600,"byte_end":449612,"line_start":304,"line_end":304,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449949,"byte_end":449955,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"update","qualname":"<Context>::update","value":"fn (&mut self, data: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the HMAC with all the data in `data`. `update` may be called\n zero or more times until `finish` is called.\n","sig":null,"attributes":[{"value":"/ Updates the HMAC with all the data in `data`. `update` may be called","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449812,"byte_end":449884,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/ zero or more times until `finish` is called.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449889,"byte_end":449937,"line_start":313,"line_end":313,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450378,"byte_end":450382,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"sign","qualname":"<Context>::sign","value":"fn (self) -> Tag","parent":null,"children":[],"decl_id":null,"docs":" Finalizes the HMAC calculation and returns the HMAC value. `sign`\n consumes the context so it cannot be (mis-)used after `sign` has been\n called.","sig":null,"attributes":[{"value":"/ Finalizes the HMAC calculation and returns the HMAC value. `sign`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450026,"byte_end":450095,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ consumes the context so it cannot be (mis-)used after `sign` has been","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450100,"byte_end":450173,"line_start":319,"line_end":319,"column_start":5,"column_end":78}},{"value":"/ called.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450178,"byte_end":450189,"line_start":320,"line_end":320,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450194,"byte_end":450197,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ It is generally not safe to implement HMAC verification by comparing","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450202,"byte_end":450274,"line_start":322,"line_end":322,"column_start":5,"column_end":77}},{"value":"/ the return value of `sign` to a tag. Use `verify` for verification","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450279,"byte_end":450349,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450354,"byte_end":450366,"line_start":324,"line_end":324,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2167},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":451059,"byte_end":451063,"line_start":341,"line_end":341,"column_start":8,"column_end":12},"name":"sign","qualname":"::hmac::sign","value":"fn (key: &Key, data: &[u8]) -> Tag","parent":null,"children":[],"decl_id":null,"docs":" Calculates the HMAC of `data` using the key `key` in one step.","sig":null,"attributes":[{"value":"/ Calculates the HMAC of `data` using the key `key` in one step.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450749,"byte_end":450815,"line_start":335,"line_end":335,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450816,"byte_end":450819,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ Use `Context` to calculate HMACs where the input is in multiple parts.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450820,"byte_end":450894,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450895,"byte_end":450898,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ It is generally not safe to implement HMAC verification by comparing the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450899,"byte_end":450975,"line_start":339,"line_end":339,"column_start":1,"column_end":77}},{"value":"/ return value of `sign` to a tag. Use `verify` for verification instead.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":450976,"byte_end":451051,"line_start":340,"line_end":340,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":451548,"byte_end":451554,"line_start":354,"line_end":354,"column_start":8,"column_end":14},"name":"verify","qualname":"::hmac::verify","value":"fn (key: &Key, data: &[u8], tag: &[u8]) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the HMAC of `data` using the signing key `key`, and verifies\n whether the resultant value equals `tag`, in one step.","sig":null,"attributes":[{"value":"/ Calculates the HMAC of `data` using the signing key `key`, and verifies","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":451179,"byte_end":451254,"line_start":347,"line_end":347,"column_start":1,"column_end":76}},{"value":"/ whether the resultant value equals `tag`, in one step.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":451255,"byte_end":451313,"line_start":348,"line_end":348,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":451314,"byte_end":451317,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ This is logically equivalent to, but more efficient than, constructing a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":451318,"byte_end":451394,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ `Key` with the same value as `key` and then using `verify`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":451395,"byte_end":451458,"line_start":351,"line_end":351,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":451459,"byte_end":451462,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ The verification will be done in constant time to prevent timing attacks.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":451463,"byte_end":451540,"line_start":353,"line_end":353,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pbkdf2","qualname":"::pbkdf2","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2220},{"krate":0,"index":3173},{"krate":0,"index":3184},{"krate":0,"index":3183},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227}],"decl_id":null,"docs":" PBKDF2 derivation and verification.","sig":null,"attributes":[{"value":"! PBKDF2 derivation and verification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473011,"byte_end":473050,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473051,"byte_end":473054,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! Use `derive` to derive PBKDF2 outputs. Use `verify` to verify secret","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473055,"byte_end":473127,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"! against previously-derived outputs.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473128,"byte_end":473167,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473168,"byte_end":473171,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! PBKDF2 is specified in [RFC 2898 Section 5.2] with test vectors given in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473172,"byte_end":473248,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"! [RFC 6070]. See also [NIST Special Publication 800-132].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473249,"byte_end":473309,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473310,"byte_end":473313,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! [RFC 2898 Section 5.2]: https://tools.ietf.org/html/rfc2898#section-5.2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473314,"byte_end":473389,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"! [RFC 6070]: https://tools.ietf.org/html/rfc6070","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473390,"byte_end":473441,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"! [NIST Special Publication 800-132]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473442,"byte_end":473481,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"!    http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473482,"byte_end":473565,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473566,"byte_end":473569,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473570,"byte_end":473584,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473585,"byte_end":473588,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! ## Password Database Example","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473589,"byte_end":473621,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473622,"byte_end":473625,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473626,"byte_end":473633,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"! use ring::{digest, pbkdf2};","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473634,"byte_end":473665,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"! use std::{collections::HashMap, num::NonZeroU32};","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473666,"byte_end":473719,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473720,"byte_end":473723,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! static PBKDF2_ALG: pbkdf2::Algorithm = pbkdf2::PBKDF2_HMAC_SHA256;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473724,"byte_end":473794,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"! const CREDENTIAL_LEN: usize = digest::SHA256_OUTPUT_LEN;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473795,"byte_end":473855,"line_start":37,"line_end":37,"column_start":1,"column_end":61}},{"value":"! pub type Credential = [u8; CREDENTIAL_LEN];","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473856,"byte_end":473903,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473904,"byte_end":473907,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! enum Error {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473908,"byte_end":473924,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"!     WrongUsernameOrPassword","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473925,"byte_end":473956,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"! }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473957,"byte_end":473962,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473963,"byte_end":473966,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! struct PasswordDatabase {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473967,"byte_end":473996,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"!     pbkdf2_iterations: NonZeroU32,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":473997,"byte_end":474035,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"!     db_salt_component: [u8; 16],","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474036,"byte_end":474072,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474073,"byte_end":474076,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!     // Normally this would be a persistent database.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474077,"byte_end":474133,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"!     storage: HashMap<String, Credential>,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474134,"byte_end":474179,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474180,"byte_end":474185,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474186,"byte_end":474189,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! impl PasswordDatabase {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474190,"byte_end":474217,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"!     pub fn store_password(&mut self, username: &str, password: &str) {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474218,"byte_end":474292,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"!         let salt = self.salt(username);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474293,"byte_end":474336,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"!         let mut to_store: Credential = [0u8; CREDENTIAL_LEN];","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474337,"byte_end":474402,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"!         pbkdf2::derive(PBKDF2_ALG, self.pbkdf2_iterations, &salt,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474403,"byte_end":474472,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"!                        password.as_bytes(), &mut to_store);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474473,"byte_end":474536,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"!         self.storage.insert(String::from(username), to_store);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474537,"byte_end":474603,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"!     }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474604,"byte_end":474613,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474614,"byte_end":474617,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"!     pub fn verify_password(&self, username: &str, attempted_password: &str)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474618,"byte_end":474697,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"!                            -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474698,"byte_end":474751,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"!         match self.storage.get(username) {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474752,"byte_end":474798,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"!            Some(actual_password) => {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474799,"byte_end":474840,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"!                let salt = self.salt(username);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474841,"byte_end":474891,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"!                pbkdf2::verify(PBKDF2_ALG, self.pbkdf2_iterations, &salt,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474892,"byte_end":474968,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"!                               attempted_password.as_bytes(),","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":474969,"byte_end":475033,"line_start":67,"line_end":67,"column_start":1,"column_end":65}},{"value":"!                               actual_password)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475034,"byte_end":475084,"line_start":68,"line_end":68,"column_start":1,"column_end":51}},{"value":"!                     .map_err(|_| Error::WrongUsernameOrPassword)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475085,"byte_end":475153,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"!            },","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475154,"byte_end":475171,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475172,"byte_end":475175,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"!            None => Err(Error::WrongUsernameOrPassword)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475176,"byte_end":475234,"line_start":72,"line_end":72,"column_start":1,"column_end":59}},{"value":"!         }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475235,"byte_end":475248,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475249,"byte_end":475258,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475259,"byte_end":475262,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"!     // The salt should have a user-specific component so that an attacker","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475263,"byte_end":475340,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"!     // cannot crack one password for multiple users in the database. It","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475341,"byte_end":475416,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"!     // should have a database-unique component so that an attacker cannot","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475417,"byte_end":475494,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"!     // crack the same user's password across databases in the unfortunate","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475495,"byte_end":475572,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"!     // but common case that the user has used the same password for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475573,"byte_end":475644,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"!     // multiple systems.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475645,"byte_end":475673,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"!     fn salt(&self, username: &str) -> Vec<u8> {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475674,"byte_end":475725,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"!         let mut salt = Vec::with_capacity(self.db_salt_component.len() +","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475726,"byte_end":475802,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"!                                           username.as_bytes().len());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475803,"byte_end":475876,"line_start":84,"line_end":84,"column_start":1,"column_end":74}},{"value":"!         salt.extend(self.db_salt_component.as_ref());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475877,"byte_end":475934,"line_start":85,"line_end":85,"column_start":1,"column_end":58}},{"value":"!         salt.extend(username.as_bytes());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475935,"byte_end":475980,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"!         salt","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475981,"byte_end":475997,"line_start":87,"line_end":87,"column_start":1,"column_end":17}},{"value":"!     }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":475998,"byte_end":476007,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476008,"byte_end":476013,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476014,"byte_end":476017,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476018,"byte_end":476033,"line_start":91,"line_end":91,"column_start":1,"column_end":16}},{"value":"!     // Normally these parameters would be loaded from a configuration file.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476034,"byte_end":476113,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"!     let mut db = PasswordDatabase {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476114,"byte_end":476153,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"!         pbkdf2_iterations: NonZeroU32::new(100_000).unwrap(),","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476154,"byte_end":476219,"line_start":94,"line_end":94,"column_start":1,"column_end":66}},{"value":"!         db_salt_component: [","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476220,"byte_end":476252,"line_start":95,"line_end":95,"column_start":1,"column_end":33}},{"value":"!             // This value was generated from a secure PRNG.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476253,"byte_end":476316,"line_start":96,"line_end":96,"column_start":1,"column_end":64}},{"value":"!             0xd6, 0x26, 0x98, 0xda, 0xf4, 0xdc, 0x50, 0x52,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476317,"byte_end":476380,"line_start":97,"line_end":97,"column_start":1,"column_end":64}},{"value":"!             0x24, 0xf2, 0x27, 0xd1, 0xfe, 0x39, 0x01, 0x8a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476381,"byte_end":476443,"line_start":98,"line_end":98,"column_start":1,"column_end":63}},{"value":"!         ],","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476444,"byte_end":476458,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"!         storage: HashMap::new(),","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476459,"byte_end":476495,"line_start":100,"line_end":100,"column_start":1,"column_end":37}},{"value":"!     };","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476496,"byte_end":476506,"line_start":101,"line_end":101,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476507,"byte_end":476510,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"!     db.store_password(\"alice\", \"@74d7]404j|W}6u\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476511,"byte_end":476565,"line_start":103,"line_end":103,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476566,"byte_end":476569,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"!     // An attempt to log in with the wrong password fails.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476570,"byte_end":476632,"line_start":105,"line_end":105,"column_start":1,"column_end":63}},{"value":"!     assert!(db.verify_password(\"alice\", \"wrong password\").is_err());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476633,"byte_end":476705,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476706,"byte_end":476709,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"!     // Normally there should be an expoentially-increasing delay between","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476710,"byte_end":476786,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"!     // attempts to further protect against online attacks.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476787,"byte_end":476849,"line_start":109,"line_end":109,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476850,"byte_end":476853,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"!     // An attempt to log in with the right password succeeds.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476854,"byte_end":476919,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"!     assert!(db.verify_password(\"alice\", \"@74d7]404j|W}6u\").is_ok());","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476920,"byte_end":476992,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"! }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":476993,"byte_end":476998,"line_start":113,"line_end":113,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477160,"byte_end":477169,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"Algorithm","qualname":"::pbkdf2::Algorithm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A PBKDF2 algorithm.\n","sig":null,"attributes":[{"value":"/ A PBKDF2 algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477087,"byte_end":477110,"line_start":118,"line_end":118,"column_start":1,"column_end":24}}]},{"kind":"Static","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477228,"byte_end":477244,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"PBKDF2_HMAC_SHA1","qualname":"::pbkdf2::PBKDF2_HMAC_SHA1","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" PBKDF2 using HMAC-SHA1.\n","sig":null,"attributes":[{"value":"/ PBKDF2 using HMAC-SHA1.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477189,"byte_end":477216,"line_start":122,"line_end":122,"column_start":1,"column_end":28}}]},{"kind":"Static","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477343,"byte_end":477361,"line_start":126,"line_end":126,"column_start":12,"column_end":30},"name":"PBKDF2_HMAC_SHA256","qualname":"::pbkdf2::PBKDF2_HMAC_SHA256","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" PBKDF2 using HMAC-h.\n","sig":null,"attributes":[{"value":"/ PBKDF2 using HMAC-h.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477307,"byte_end":477331,"line_start":125,"line_end":125,"column_start":1,"column_end":25}}]},{"kind":"Static","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477447,"byte_end":477465,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"PBKDF2_HMAC_SHA384","qualname":"::pbkdf2::PBKDF2_HMAC_SHA384","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" PBKDF2 using HMAC-SHA384.\n","sig":null,"attributes":[{"value":"/ PBKDF2 using HMAC-SHA384.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477406,"byte_end":477435,"line_start":128,"line_end":128,"column_start":1,"column_end":30}}]},{"kind":"Static","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477551,"byte_end":477569,"line_start":132,"line_end":132,"column_start":12,"column_end":30},"name":"PBKDF2_HMAC_SHA512","qualname":"::pbkdf2::PBKDF2_HMAC_SHA512","value":"Algorithm","parent":null,"children":[],"decl_id":null,"docs":" PBKDF2 using HMAC-SHA512.\n","sig":null,"attributes":[{"value":"/ PBKDF2 using HMAC-SHA512.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477510,"byte_end":477539,"line_start":131,"line_end":131,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478457,"byte_end":478463,"line_start":155,"line_end":155,"column_start":8,"column_end":14},"name":"derive","qualname":"::pbkdf2::derive","value":"fn (algorithm: Algorithm, iterations: NonZeroU32, salt: &[u8], secret: &[u8], out: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills `out` with the key derived using PBKDF2 with the given inputs.","sig":null,"attributes":[{"value":"/ Fills `out` with the key derived using PBKDF2 with the given inputs.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477614,"byte_end":477686,"line_start":134,"line_end":134,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477687,"byte_end":477690,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Do not use `derive` as part of verifying a secret; use `verify` instead, to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477691,"byte_end":477770,"line_start":136,"line_end":136,"column_start":1,"column_end":80}},{"value":"/ minimize the effectiveness of timing attacks.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477771,"byte_end":477820,"line_start":137,"line_end":137,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477821,"byte_end":477824,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ `out.len()` must be no larger than the digest length * (2**32 - 1), per the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477825,"byte_end":477904,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"/ PBKDF2 specification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477905,"byte_end":477930,"line_start":140,"line_end":140,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477931,"byte_end":477934,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ | Parameter   | RFC 2898 Section 5.2 Term","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477935,"byte_end":477980,"line_start":142,"line_end":142,"column_start":1,"column_end":46}},{"value":"/ |-------------|-------------------------------------------","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":477981,"byte_end":478043,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ | digest_alg  | PRF (HMAC with the given digest algorithm)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478044,"byte_end":478106,"line_start":144,"line_end":144,"column_start":1,"column_end":63}},{"value":"/ | iterations  | c (iteration count)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478107,"byte_end":478146,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/ | salt        | S (salt)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478147,"byte_end":478175,"line_start":146,"line_end":146,"column_start":1,"column_end":29}},{"value":"/ | secret      | P (password)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478176,"byte_end":478208,"line_start":147,"line_end":147,"column_start":1,"column_end":33}},{"value":"/ | out         | dk (derived key)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478209,"byte_end":478245,"line_start":148,"line_end":148,"column_start":1,"column_end":37}},{"value":"/ | out.len()   | dkLen (derived key length)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478246,"byte_end":478292,"line_start":149,"line_end":149,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478293,"byte_end":478296,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478297,"byte_end":478309,"line_start":151,"line_end":151,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478310,"byte_end":478313,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ `derive` panics if `out.len()` is larger than (2**32 - 1) * the digest","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478314,"byte_end":478388,"line_start":153,"line_end":153,"column_start":1,"column_end":75}},{"value":"/ algorithm's output length, per the PBKDF2 specification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":478389,"byte_end":478449,"line_start":154,"line_end":154,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480773,"byte_end":480779,"line_start":225,"line_end":225,"column_start":8,"column_end":14},"name":"verify","qualname":"::pbkdf2::verify","value":"fn (algorithm: Algorithm, iterations: NonZeroU32, salt: &[u8], secret: &[u8], previously_derived: &[u8]) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Verifies that a previously-derived (e.g., using `derive`) PBKDF2 value\n matches the PBKDF2 value derived from the other inputs.","sig":null,"attributes":[{"value":"/ Verifies that a previously-derived (e.g., using `derive`) PBKDF2 value","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":479825,"byte_end":479899,"line_start":205,"line_end":205,"column_start":1,"column_end":75}},{"value":"/ matches the PBKDF2 value derived from the other inputs.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":479900,"byte_end":479959,"line_start":206,"line_end":206,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":479960,"byte_end":479963,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ The comparison is done in constant time to prevent timing attacks. The","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":479964,"byte_end":480038,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ comparison will fail if `previously_derived` is empty (has a length of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480039,"byte_end":480113,"line_start":209,"line_end":209,"column_start":1,"column_end":75}},{"value":"/ zero).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480114,"byte_end":480124,"line_start":210,"line_end":210,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480125,"byte_end":480128,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ | Parameter                  | RFC 2898 Section 5.2 Term","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480129,"byte_end":480189,"line_start":212,"line_end":212,"column_start":1,"column_end":61}},{"value":"/ |----------------------------|--------------------------------------------","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480190,"byte_end":480268,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ | digest_alg                 | PRF (HMAC with the given digest algorithm).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480269,"byte_end":480347,"line_start":214,"line_end":214,"column_start":1,"column_end":79}},{"value":"/ | `iterations`               | c (iteration count)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480348,"byte_end":480402,"line_start":215,"line_end":215,"column_start":1,"column_end":55}},{"value":"/ | `salt`                     | S (salt)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480403,"byte_end":480446,"line_start":216,"line_end":216,"column_start":1,"column_end":44}},{"value":"/ | `secret`                   | P (password)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480447,"byte_end":480494,"line_start":217,"line_end":217,"column_start":1,"column_end":48}},{"value":"/ | `previously_derived`       | dk (derived key)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480495,"byte_end":480546,"line_start":218,"line_end":218,"column_start":1,"column_end":52}},{"value":"/ | `previously_derived.len()` | dkLen (derived key length)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480547,"byte_end":480608,"line_start":219,"line_end":219,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480609,"byte_end":480612,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480613,"byte_end":480625,"line_start":221,"line_end":221,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480626,"byte_end":480629,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ `verify` panics if `out.len()` is larger than (2**32 - 1) * the digest","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480630,"byte_end":480704,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ algorithm's output length, per the PBKDF2 specification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pbkdf2.rs","byte_start":480705,"byte_end":480765,"line_start":224,"line_end":224,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pkcs8","qualname":"::pkcs8","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2242},{"krate":0,"index":2247},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2257},{"krate":0,"index":2264},{"krate":0,"index":2268},{"krate":0,"index":2270},{"krate":0,"index":2272}],"decl_id":null,"docs":" PKCS#8 is specified in [RFC 5958].","sig":null,"attributes":[{"value":"! PKCS#8 is specified in [RFC 5958].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":482840,"byte_end":482878,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":482879,"byte_end":482882,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! [RFC 5958]: https://tools.ietf.org/html/rfc5958.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":482883,"byte_end":482935,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":487921,"byte_end":487929,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"Document","qualname":"::pkcs8::Document","value":"Document {  }","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2267}],"decl_id":null,"docs":" A generated PKCS#8 document.\n","sig":null,"attributes":[{"value":"/ A generated PKCS#8 document.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":487877,"byte_end":487909,"line_start":164,"line_end":164,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rand","qualname":"::rand","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","parent":null,"children":[{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2277},{"krate":0,"index":2280},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":3216},{"krate":0,"index":3221},{"krate":0,"index":3219},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2312}],"decl_id":null,"docs":" Cryptographic pseudo-random number generation.","sig":null,"attributes":[{"value":"! Cryptographic pseudo-random number generation.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490104,"byte_end":490154,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490155,"byte_end":490158,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! An application should create a single `SystemRandom` and then use it for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490159,"byte_end":490235,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"! all randomness generation. Functions that generate random bytes should take","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490236,"byte_end":490315,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! a `&dyn SecureRandom` parameter instead of instantiating their own. Besides","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490316,"byte_end":490395,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"! being more efficient, this also helps document where non-deterministic","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490396,"byte_end":490470,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"! (random) outputs occur. Taking a reference to a `SecureRandom` also helps","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490471,"byte_end":490548,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"! with testing techniques like fuzzing, where it is useful to use a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490549,"byte_end":490618,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"! (non-secure) deterministic implementation of `SecureRandom` so that results","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490619,"byte_end":490698,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"! can be replayed. Following this pattern also may help with sandboxing","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490699,"byte_end":490772,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"! (seccomp filters on Linux in particular). See `SystemRandom`'s","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490773,"byte_end":490839,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"! documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490840,"byte_end":490875,"line_start":26,"line_end":26,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490944,"byte_end":490956,"line_start":31,"line_end":31,"column_start":11,"column_end":23},"name":"SecureRandom","qualname":"::rand::SecureRandom","value":"SecureRandom: sealed::SecureRandom","parent":null,"children":[{"krate":0,"index":2276}],"decl_id":null,"docs":" A secure random number generator.\n","sig":null,"attributes":[{"value":"/ A secure random number generator.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490896,"byte_end":490933,"line_start":30,"line_end":30,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491028,"byte_end":491032,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"fill","qualname":"::rand::SecureRandom::fill","value":"fn (&self, dest: &mut [u8]) -> Result<(), error::Unspecified>","parent":{"krate":0,"index":2275},"children":[],"decl_id":null,"docs":" Fills `dest` with random bytes.\n","sig":null,"attributes":[{"value":"/ Fills `dest` with random bytes.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490985,"byte_end":491020,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491489,"byte_end":491495,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"Random","qualname":"::rand::Random","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random value constructed from a `SecureRandom` that hasn't been exposed\n through any safe Rust interface.","sig":null,"attributes":[{"value":"/ A random value constructed from a `SecureRandom` that hasn't been exposed","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491291,"byte_end":491368,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ through any safe Rust interface.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491369,"byte_end":491405,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491406,"byte_end":491409,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Intentionally does not implement any traits other than `Sized`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491410,"byte_end":491477,"line_start":49,"line_end":49,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491628,"byte_end":491634,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"expose","qualname":"<Random<T>>::expose","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Expose the random value.\n","sig":null,"attributes":[{"value":"/ Expose the random value.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491574,"byte_end":491602,"line_start":53,"line_end":53,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491607,"byte_end":491616,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491736,"byte_end":491744,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"generate","qualname":"::rand::generate","value":"fn <T> (rng: &dyn SecureRandom) -> Result<Random<T>, error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Generate the new random value using `rng`.\n","sig":null,"attributes":[{"value":"/ Generate the new random value using `rng`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491672,"byte_end":491718,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491719,"byte_end":491728,"line_start":61,"line_end":61,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492023,"byte_end":492035,"line_start":76,"line_end":76,"column_start":15,"column_end":27},"name":"SecureRandom","qualname":"::rand::sealed::SecureRandom","value":"SecureRandom: core::fmt::Debug","parent":null,"children":[{"krate":0,"index":2292}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492111,"byte_end":492120,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"fill_impl","qualname":"::rand::sealed::SecureRandom::fill_impl","value":"fn (&self, dest: &mut [u8]) -> Result<(), error::Unspecified>","parent":{"krate":0,"index":2291},"children":[],"decl_id":null,"docs":" Fills `dest` with random bytes.\n","sig":null,"attributes":[{"value":"/ Fills `dest` with random bytes.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492064,"byte_end":492099,"line_start":77,"line_end":77,"column_start":9,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492201,"byte_end":492222,"line_start":81,"line_end":81,"column_start":15,"column_end":36},"name":"RandomlyConstructable","qualname":"::rand::sealed::RandomlyConstructable","value":"RandomlyConstructable: Sized","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492243,"byte_end":492247,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"zero","qualname":"::rand::sealed::RandomlyConstructable::zero","value":"fn () -> Self","parent":{"krate":0,"index":2293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492294,"byte_end":492306,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"as_mut_bytes","qualname":"::rand::sealed::RandomlyConstructable::as_mut_bytes","value":"fn (&mut self) -> &mut [u8]","parent":{"krate":0,"index":2293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492865,"byte_end":492886,"line_start":104,"line_end":104,"column_start":11,"column_end":32},"name":"RandomlyConstructable","qualname":"::rand::RandomlyConstructable","value":"RandomlyConstructable: self::sealed::RandomlyConstructable","parent":null,"children":[],"decl_id":null,"docs":" A type that can be returned by `ring::rand::generate()`.\n","sig":null,"attributes":[{"value":"/ A type that can be returned by `ring::rand::generate()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492794,"byte_end":492854,"line_start":103,"line_end":103,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3216},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495291,"byte_end":495303,"line_start":147,"line_end":147,"column_start":12,"column_end":24},"name":"SystemRandom","qualname":"::rand::SystemRandom","value":"","parent":null,"children":[],"decl_id":null,"docs":" A secure random number generator where the random values come directly\n from the operating system.","sig":null,"attributes":[{"value":"/ A secure random number generator where the random values come directly","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493012,"byte_end":493086,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"/ from the operating system.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493087,"byte_end":493117,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493118,"byte_end":493121,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ A single `SystemRandom` may be shared across multiple threads safely.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493122,"byte_end":493195,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493196,"byte_end":493199,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ `new()` is guaranteed to always succeed and to have low latency; it won't","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493200,"byte_end":493277,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ try to open or read from a file or do similar things. The first call to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493278,"byte_end":493353,"line_start":113,"line_end":113,"column_start":1,"column_end":76}},{"value":"/ `fill()` may block a substantial amount of time since any and all","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493354,"byte_end":493423,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ initialization is deferred to it. Therefore, it may be a good idea to call","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493424,"byte_end":493502,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ `fill()` once at a non-latency-sensitive time to minimize latency for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493503,"byte_end":493576,"line_start":116,"line_end":116,"column_start":1,"column_end":74}},{"value":"/ future calls.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493577,"byte_end":493594,"line_start":117,"line_end":117,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493595,"byte_end":493598,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ On Linux (including Android), `fill()` will use the [`getrandom`] syscall.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493599,"byte_end":493677,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ If the kernel is too old to support `getrandom` then by default `fill()`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493678,"byte_end":493754,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ falls back to reading from `/dev/urandom`. This decision is made the first","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493755,"byte_end":493833,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ time `fill` *succeeds*. The fallback to `/dev/urandom` can be disabled by","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493834,"byte_end":493911,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ disabling the `dev_urandom_fallback` default feature; this should be done","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493912,"byte_end":493989,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ whenever the target system is known to support `getrandom`. When","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":493990,"byte_end":494058,"line_start":124,"line_end":124,"column_start":1,"column_end":69}},{"value":"/ `/dev/urandom` is used, a file handle for `/dev/urandom` won't be opened","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494059,"byte_end":494135,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/ until `fill` is called; `SystemRandom::new()` will not open `/dev/urandom`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494136,"byte_end":494214,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ or do other potentially-high-latency things. The file handle will never be","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494215,"byte_end":494293,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/ closed, until the operating system closes it at process shutdown. All","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494294,"byte_end":494367,"line_start":128,"line_end":128,"column_start":1,"column_end":74}},{"value":"/ instances of `SystemRandom` will share a single file handle. To properly","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494368,"byte_end":494444,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/ implement seccomp filtering when the `dev_urandom_fallback` default feature","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494445,"byte_end":494524,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ is disabled, allow `getrandom` through. When the fallback is enabled, allow","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494525,"byte_end":494604,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ file opening, `getrandom`, and `read` up until the first call to `fill()`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494605,"byte_end":494682,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ succeeds; after that, allow `getrandom` and `read`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494683,"byte_end":494738,"line_start":133,"line_end":133,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494739,"byte_end":494742,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ On macOS and iOS, `fill()` is implemented using `SecRandomCopyBytes`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494743,"byte_end":494816,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494817,"byte_end":494820,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ On wasm32-unknown-unknown (non-WASI), `fill()` is implemented using","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494821,"byte_end":494892,"line_start":137,"line_end":137,"column_start":1,"column_end":72}},{"value":"/ `window.crypto.getRandomValues()`. It must be used in a context where the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494893,"byte_end":494970,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"/ global object is a `Window`; i.e. it must not be used in a Worker or a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":494971,"byte_end":495045,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ non-browser context.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495046,"byte_end":495070,"line_start":140,"line_end":140,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495071,"byte_end":495074,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ On Windows, `fill` is implemented using the platform's API for secure","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495075,"byte_end":495148,"line_start":142,"line_end":142,"column_start":1,"column_end":74}},{"value":"/ random number generation.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495149,"byte_end":495178,"line_start":143,"line_end":143,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495179,"byte_end":495182,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [`getrandom`]: http://man7.org/linux/man-pages/man2/getrandom.2.html","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495183,"byte_end":495255,"line_start":145,"line_end":145,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495404,"byte_end":495407,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"new","qualname":"<SystemRandom>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SystemRandom`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `SystemRandom`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495334,"byte_end":495370,"line_start":150,"line_end":150,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495375,"byte_end":495392,"line_start":151,"line_end":151,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506297,"byte_end":506304,"line_start":23,"line_end":23,"column_start":11,"column_end":18},"name":"Padding","qualname":"::rsa::padding::Padding","value":"Padding: 'static + Sync + crate::sealed::Sealed + core::fmt::Debug","parent":null,"children":[{"krate":0,"index":2336}],"decl_id":null,"docs":" Common features of both RSA padding encoding and RSA padding verification.\n","sig":null,"attributes":[{"value":"/ Common features of both RSA padding encoding and RSA padding verification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506208,"byte_end":506286,"line_start":22,"line_end":22,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506469,"byte_end":506479,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"digest_alg","qualname":"::rsa::padding::Padding::digest_alg","value":"fn (&self) -> &'static digest::Algorithm","parent":{"krate":0,"index":2335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506701,"byte_end":506712,"line_start":33,"line_end":33,"column_start":11,"column_end":22},"name":"RsaEncoding","qualname":"::rsa::padding::RsaEncoding","value":"RsaEncoding: Padding","parent":null,"children":[{"krate":0,"index":2338}],"decl_id":null,"docs":" An RSA signature encoding as described in [RFC 3447 Section 8].","sig":null,"attributes":[{"value":"/ An RSA signature encoding as described in [RFC 3447 Section 8].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506521,"byte_end":506588,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506589,"byte_end":506592,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [RFC 3447 Section 8]: https://tools.ietf.org/html/rfc3447#section-8","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506593,"byte_end":506664,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506665,"byte_end":506690,"line_start":32,"line_end":32,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506750,"byte_end":506756,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"encode","qualname":"::rsa::padding::RsaEncoding::encode","value":"fn (&self, m_hash: &digest::Digest, m_out: &mut [u8], mod_bits: bits::BitLength, rng: &dyn rand::SecureRandom) -> Result<(), error::Unspecified>","parent":{"krate":0,"index":2337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3223},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507602,"byte_end":507607,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"PKCS1","qualname":"::rsa::padding::PKCS1","value":"PKCS1 {  }","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3225}],"decl_id":null,"docs":" PKCS#1 1.5 padding as described in [RFC 3447 Section 8.2].","sig":null,"attributes":[{"value":"/ PKCS#1 1.5 padding as described in [RFC 3447 Section 8.2].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507324,"byte_end":507386,"line_start":57,"line_end":57,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507387,"byte_end":507390,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ See \"`RSA_PSS_*` Details\\\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507391,"byte_end":507457,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507458,"byte_end":507493,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507494,"byte_end":507497,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [RFC 3447 Section 8.2]: https://tools.ietf.org/html/rfc3447#section-8.2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507498,"byte_end":507573,"line_start":62,"line_end":62,"column_start":1,"column_end":76}}]},{"kind":"Static","id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":510388,"byte_end":510404,"line_start":153,"line_end":153,"column_start":5,"column_end":21},"name":"RSA_PKCS1_SHA256","qualname":"::rsa::padding::RSA_PKCS1_SHA256","value":"PKCS1","parent":null,"children":[],"decl_id":null,"docs":"PKCS#1 1.5 padding using SHA-256 for RSA signatures.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3230},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":510550,"byte_end":510566,"line_start":159,"line_end":159,"column_start":5,"column_end":21},"name":"RSA_PKCS1_SHA384","qualname":"::rsa::padding::RSA_PKCS1_SHA384","value":"PKCS1","parent":null,"children":[],"decl_id":null,"docs":"PKCS#1 1.5 padding using SHA-384 for RSA signatures.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3231},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":510712,"byte_end":510728,"line_start":165,"line_end":165,"column_start":5,"column_end":21},"name":"RSA_PKCS1_SHA512","qualname":"::rsa::padding::RSA_PKCS1_SHA512","value":"PKCS1","parent":null,"children":[],"decl_id":null,"docs":"PKCS#1 1.5 padding using SHA-512 for RSA signatures.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512196,"byte_end":512199,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"PSS","qualname":"::rsa::padding::PSS","value":"PSS {  }","parent":null,"children":[{"krate":0,"index":3241}],"decl_id":null,"docs":" RSA PSS padding as described in [RFC 3447 Section 8.1].","sig":null,"attributes":[{"value":"/ RSA PSS padding as described in [RFC 3447 Section 8.1].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":511921,"byte_end":511980,"line_start":212,"line_end":212,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":511981,"byte_end":511984,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ See \"`RSA_PSS_*` Details\\\" in `ring::signature`'s module-level","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":511985,"byte_end":512051,"line_start":214,"line_end":214,"column_start":1,"column_end":67}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512052,"byte_end":512087,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512088,"byte_end":512091,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ [RFC 3447 Section 8.1]: https://tools.ietf.org/html/rfc3447#section-8.1","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512092,"byte_end":512167,"line_start":217,"line_end":217,"column_start":1,"column_end":76}}]},{"kind":"Static","id":{"krate":0,"index":3244},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":521312,"byte_end":521326,"line_start":499,"line_end":499,"column_start":5,"column_end":19},"name":"RSA_PSS_SHA256","qualname":"::rsa::padding::RSA_PSS_SHA256","value":"PSS","parent":null,"children":[],"decl_id":null,"docs":"RSA PSS padding using SHA-256 for RSA signatures.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3245},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":521563,"byte_end":521577,"line_start":506,"line_end":506,"column_start":5,"column_end":19},"name":"RSA_PSS_SHA384","qualname":"::rsa::padding::RSA_PSS_SHA384","value":"PSS","parent":null,"children":[],"decl_id":null,"docs":"RSA PSS padding using SHA-384 for RSA signatures.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":521814,"byte_end":521828,"line_start":513,"line_end":513,"column_start":5,"column_end":19},"name":"RSA_PSS_SHA512","qualname":"::rsa::padding::RSA_PSS_SHA512","value":"PSS","parent":null,"children":[],"decl_id":null,"docs":"RSA PSS padding using SHA-512 for RSA signatures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3247},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa.rs","byte_start":504564,"byte_end":504577,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"RsaParameters","qualname":"::rsa::RsaParameters","value":"RsaParameters {  }","parent":null,"children":[{"krate":0,"index":3248},{"krate":0,"index":3249}],"decl_id":null,"docs":" Parameters for RSA verification.\n","sig":null,"attributes":[{"value":"/ Parameters for RSA verification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa.rs","byte_start":504499,"byte_end":504535,"line_start":43,"line_end":43,"column_start":1,"column_end":37}}]},{"kind":"Static","id":{"krate":0,"index":3262},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529747,"byte_end":529791,"line_start":124,"line_end":124,"column_start":5,"column_end":49},"name":"RSA_PKCS1_1024_8192_SHA1_FOR_LEGACY_USE_ONLY","qualname":"::rsa::verification::RSA_PKCS1_1024_8192_SHA1_FOR_LEGACY_USE_ONLY","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 1024-8192 bits,\n             PKCS#1.5 padding, and SHA-1.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Static","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":530103,"byte_end":530147,"line_start":132,"line_end":132,"column_start":5,"column_end":49},"name":"RSA_PKCS1_2048_8192_SHA1_FOR_LEGACY_USE_ONLY","qualname":"::rsa::verification::RSA_PKCS1_2048_8192_SHA1_FOR_LEGACY_USE_ONLY","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 2048-8192 bits,\n             PKCS#1.5 padding, and SHA-1.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Static","id":{"krate":0,"index":3264},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":530459,"byte_end":530505,"line_start":140,"line_end":140,"column_start":5,"column_end":51},"name":"RSA_PKCS1_1024_8192_SHA256_FOR_LEGACY_USE_ONLY","qualname":"::rsa::verification::RSA_PKCS1_1024_8192_SHA256_FOR_LEGACY_USE_ONLY","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 1024-8192 bits,\n             PKCS#1.5 padding, and SHA-256.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Static","id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":530792,"byte_end":530818,"line_start":148,"line_end":148,"column_start":5,"column_end":31},"name":"RSA_PKCS1_2048_8192_SHA256","qualname":"::rsa::verification::RSA_PKCS1_2048_8192_SHA256","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 2048-8192 bits,\n             PKCS#1.5 padding, and SHA-256.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Static","id":{"krate":0,"index":3266},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":531105,"byte_end":531131,"line_start":156,"line_end":156,"column_start":5,"column_end":31},"name":"RSA_PKCS1_2048_8192_SHA384","qualname":"::rsa::verification::RSA_PKCS1_2048_8192_SHA384","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 2048-8192 bits,\n             PKCS#1.5 padding, and SHA-384.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Static","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":531418,"byte_end":531444,"line_start":164,"line_end":164,"column_start":5,"column_end":31},"name":"RSA_PKCS1_2048_8192_SHA512","qualname":"::rsa::verification::RSA_PKCS1_2048_8192_SHA512","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 2048-8192 bits,\n             PKCS#1.5 padding, and SHA-512.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Static","id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":531731,"byte_end":531757,"line_start":172,"line_end":172,"column_start":5,"column_end":31},"name":"RSA_PKCS1_3072_8192_SHA384","qualname":"::rsa::verification::RSA_PKCS1_3072_8192_SHA384","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 3072-8192 bits,\n             PKCS#1.5 padding, and SHA-384.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Static","id":{"krate":0,"index":3269},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":532045,"byte_end":532069,"line_start":181,"line_end":181,"column_start":5,"column_end":29},"name":"RSA_PSS_2048_8192_SHA256","qualname":"::rsa::verification::RSA_PSS_2048_8192_SHA256","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 2048-8192 bits,\n             PSS padding, and SHA-256.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Static","id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":532347,"byte_end":532371,"line_start":189,"line_end":189,"column_start":5,"column_end":29},"name":"RSA_PSS_2048_8192_SHA384","qualname":"::rsa::verification::RSA_PSS_2048_8192_SHA384","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 2048-8192 bits,\n             PSS padding, and SHA-384.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Static","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":532649,"byte_end":532673,"line_start":197,"line_end":197,"column_start":5,"column_end":29},"name":"RSA_PSS_2048_8192_SHA512","qualname":"::rsa::verification::RSA_PSS_2048_8192_SHA512","value":"RsaParameters","parent":null,"children":[],"decl_id":null,"docs":"Verification of signatures using RSA keys of 2048-8192 bits,\n             PSS padding, and SHA-512.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529479,"byte_end":529482,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ Only available in `alloc` mode.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529491,"byte_end":529526,"line_start":115,"line_end":115,"column_start":9,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":533985,"byte_end":534007,"line_start":223,"line_end":223,"column_start":12,"column_end":34},"name":"RsaPublicKeyComponents","qualname":"::rsa::verification::RsaPublicKeyComponents","value":"RsaPublicKeyComponents { n, e }","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":3275}],"decl_id":null,"docs":" Low-level API for the verification of RSA signatures.","sig":null,"attributes":[{"value":"/ Low-level API for the verification of RSA signatures.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":532935,"byte_end":532992,"line_start":205,"line_end":205,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":532993,"byte_end":532996,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ When the public key is in DER-encoded PKCS#1 ASN.1 format, it is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":532997,"byte_end":533065,"line_start":207,"line_end":207,"column_start":1,"column_end":69}},{"value":"/ recommended to use `ring::signature::verify()` with","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":533066,"byte_end":533121,"line_start":208,"line_end":208,"column_start":1,"column_end":56}},{"value":"/ `ring::signature::RSA_PKCS1_*`, because `ring::signature::verify()`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":533122,"byte_end":533193,"line_start":209,"line_end":209,"column_start":1,"column_end":72}},{"value":"/ will handle the parsing in that case. Otherwise, this function can be used","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":533194,"byte_end":533272,"line_start":210,"line_end":210,"column_start":1,"column_end":79}},{"value":"/ to pass in the raw bytes for the public key components as","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":533273,"byte_end":533334,"line_start":211,"line_end":211,"column_start":1,"column_end":62}},{"value":"/ `untrusted::Input` arguments.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":533335,"byte_end":533368,"line_start":212,"line_end":212,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3274},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534132,"byte_end":534133,"line_start":225,"line_end":225,"column_start":9,"column_end":10},"name":"n","qualname":"::rsa::verification::RsaPublicKeyComponents::n","value":"B","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":" The public modulus, encoded in big-endian bytes without leading zeros.\n","sig":null,"attributes":[{"value":"/ The public modulus, encoded in big-endian bytes without leading zeros.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534049,"byte_end":534123,"line_start":224,"line_end":224,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":3275},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534227,"byte_end":534228,"line_start":228,"line_end":228,"column_start":9,"column_end":10},"name":"e","qualname":"::rsa::verification::RsaPublicKeyComponents::e","value":"B","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":" The public exponent, encoded in big-endian bytes without leading zeros.\n","sig":null,"attributes":[{"value":"/ The public exponent, encoded in big-endian bytes without leading zeros.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534143,"byte_end":534218,"line_start":227,"line_end":227,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534896,"byte_end":534902,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"verify","qualname":"<RsaPublicKeyComponents<B>>::verify","value":"fn (&self, params: &RsaParameters, message: &[u8], signature: &[u8]) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Verifies that `signature` is a valid signature of `message` using `self`\n as the public key. `params` determine what algorithm parameters\n (padding, digest algorithm, key length range, etc.) are used in the\n verification.\n","sig":null,"attributes":[{"value":"/ Verifies that `signature` is a valid signature of `message` using `self`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534638,"byte_end":534714,"line_start":249,"line_end":249,"column_start":5,"column_end":81}},{"value":"/ as the public key. `params` determine what algorithm parameters","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534719,"byte_end":534786,"line_start":250,"line_end":250,"column_start":5,"column_end":72}},{"value":"/ (padding, digest algorithm, key length range, etc.) are used in the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534791,"byte_end":534862,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ verification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534867,"byte_end":534884,"line_start":252,"line_end":252,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2455},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":538752,"byte_end":538762,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"RsaKeyPair","qualname":"::rsa::signing::RsaKeyPair","value":"RsaKeyPair {  }","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462}],"decl_id":null,"docs":" An RSA key pair, used for signing.\n","sig":null,"attributes":[{"value":"/ An RSA key pair, used for signing.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":538702,"byte_end":538740,"line_start":30,"line_end":30,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543851,"byte_end":543861,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"from_pkcs8","qualname":"<RsaKeyPair>::from_pkcs8","value":"fn (pkcs8: &[u8]) -> Result<Self, KeyRejected>","parent":null,"children":[],"decl_id":null,"docs":" Parses an unencrypted PKCS#8-encoded RSA private key.","sig":null,"attributes":[{"value":"/ Parses an unencrypted PKCS#8-encoded RSA private key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539072,"byte_end":539129,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539134,"byte_end":539137,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Only two-prime (not multi-prime) keys are supported. The public modulus","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539142,"byte_end":539217,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ (n) must be at least 2047 bits. The public modulus must be no larger","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539222,"byte_end":539294,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/ than 4096 bits. It is recommended that the public modulus be exactly","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539299,"byte_end":539371,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ 2048 or 3072 bits. The public exponent must be at least 65537.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539376,"byte_end":539442,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539447,"byte_end":539450,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This will generate a 2048-bit RSA private key of the correct form using","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539455,"byte_end":539530,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ OpenSSL's command line tool:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539535,"byte_end":539567,"line_start":52,"line_end":52,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539572,"byte_end":539575,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```sh","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539580,"byte_end":539589,"line_start":54,"line_end":54,"column_start":5,"column_end":14}},{"value":"/    openssl genpkey -algorithm RSA \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539594,"byte_end":539633,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/        -pkeyopt rsa_keygen_bits:2048 \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539638,"byte_end":539680,"line_start":56,"line_end":56,"column_start":5,"column_end":47}},{"value":"/        -pkeyopt rsa_keygen_pubexp:65537 | \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539685,"byte_end":539732,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/      openssl pkcs8 -topk8 -nocrypt -outform der > rsa-2048-private-key.pk8","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539737,"byte_end":539815,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539820,"byte_end":539827,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539832,"byte_end":539835,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This will generate a 3072-bit RSA private key of the correct form:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539840,"byte_end":539910,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539915,"byte_end":539918,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```sh","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539923,"byte_end":539932,"line_start":63,"line_end":63,"column_start":5,"column_end":14}},{"value":"/    openssl genpkey -algorithm RSA \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539937,"byte_end":539976,"line_start":64,"line_end":64,"column_start":5,"column_end":44}},{"value":"/        -pkeyopt rsa_keygen_bits:3072 \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539981,"byte_end":540023,"line_start":65,"line_end":65,"column_start":5,"column_end":47}},{"value":"/        -pkeyopt rsa_keygen_pubexp:65537 | \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540028,"byte_end":540075,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/      openssl pkcs8 -topk8 -nocrypt -outform der > rsa-3072-private-key.pk8","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540080,"byte_end":540158,"line_start":67,"line_end":67,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540163,"byte_end":540170,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540175,"byte_end":540178,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Often, keys generated for use in OpenSSL-based software are stored in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540183,"byte_end":540256,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ the Base64 “PEM” format without the PKCS#8 wrapper. Such keys can be","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540261,"byte_end":540337,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ converted to binary PKCS#8 form using the OpenSSL command line tool like","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540342,"byte_end":540418,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ this:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540423,"byte_end":540432,"line_start":73,"line_end":73,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540437,"byte_end":540440,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```sh","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540445,"byte_end":540454,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/ openssl pkcs8 -topk8 -nocrypt -outform der \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540459,"byte_end":540507,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/     -in rsa-2048-private-key.pem > rsa-2048-private-key.pk8","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540512,"byte_end":540575,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540580,"byte_end":540587,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540592,"byte_end":540595,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Base64 (“PEM”) PKCS#8-encoded keys can be converted to the binary PKCS#8","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540600,"byte_end":540680,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ form like this:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540685,"byte_end":540704,"line_start":81,"line_end":81,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540709,"byte_end":540712,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```sh","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540717,"byte_end":540726,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/ openssl pkcs8 -nocrypt -outform der \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540731,"byte_end":540772,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/     -in rsa-2048-private-key.pem > rsa-2048-private-key.pk8","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540777,"byte_end":540840,"line_start":85,"line_end":85,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540845,"byte_end":540852,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540857,"byte_end":540860,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The private key is validated according to [NIST SP-800-56B rev. 1]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540865,"byte_end":540935,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ section 6.4.1.4.3, crt_pkv (Intended Exponent-Creation Method Unknown),","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":540940,"byte_end":541015,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ with the following exceptions:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541020,"byte_end":541054,"line_start":90,"line_end":90,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541059,"byte_end":541062,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ * Section 6.4.1.2.1, Step 1: Neither a target security level nor an","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541067,"byte_end":541138,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/   expected modulus length is provided as a parameter, so checks","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541143,"byte_end":541210,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/   regarding these expectations are not done.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541215,"byte_end":541263,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ * Section 6.4.1.2.1, Step 3: Since neither the public key nor the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541268,"byte_end":541337,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/   expected modulus length is provided as a parameter, the consistency","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541342,"byte_end":541415,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/   check between these values and the private key's value of n isn't","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541420,"byte_end":541491,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/   done.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541496,"byte_end":541507,"line_start":98,"line_end":98,"column_start":5,"column_end":16}},{"value":"/ * Section 6.4.1.2.1, Step 5: No primality tests are done, both for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541512,"byte_end":541582,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/   performance reasons and to avoid any side channels that such tests","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541587,"byte_end":541659,"line_start":100,"line_end":100,"column_start":5,"column_end":77}},{"value":"/   would provide.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541664,"byte_end":541684,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ * Section 6.4.1.2.1, Step 6, and 6.4.1.4.3, Step 7:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541689,"byte_end":541744,"line_start":102,"line_end":102,"column_start":5,"column_end":60}},{"value":"/     * *ring* has a slightly looser lower bound for the values of `p`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541749,"byte_end":541821,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/     and `q` than what the NIST document specifies. This looser lower","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541826,"byte_end":541898,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/     bound matches what most other crypto libraries do. The check might","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541903,"byte_end":541977,"line_start":105,"line_end":105,"column_start":5,"column_end":79}},{"value":"/     be tightened to meet NIST's requirements in the future. Similarly,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":541982,"byte_end":542056,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/     the check that `p` and `q` are not too close together is skipped","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542061,"byte_end":542133,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/     currently, but may be added in the future.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542138,"byte_end":542188,"line_start":108,"line_end":108,"column_start":5,"column_end":55}},{"value":"/     - The validity of the mathematical relationship of `dP`, `dQ`, `e`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542193,"byte_end":542267,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/     and `n` is verified only during signing. Some size checks of `d`,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542272,"byte_end":542345,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/     `dP` and `dQ` are performed at construction, but some NIST checks","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542350,"byte_end":542423,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/     are skipped because they would be expensive and/or they would leak","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542428,"byte_end":542502,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/     information through side channels. If a preemptive check of the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542507,"byte_end":542578,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/     consistency of `dP`, `dQ`, `e` and `n` with each other is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542583,"byte_end":542648,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/     necessary, that can be done by signing any message with the key","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542653,"byte_end":542724,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/     pair.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542729,"byte_end":542742,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542747,"byte_end":542750,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     * `d` is not fully validated, neither at construction nor during","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542755,"byte_end":542827,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/     signing. This is OK as far as *ring*'s usage of the key is","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542832,"byte_end":542898,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/     concerned because *ring* never uses the value of `d` (*ring* always","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542903,"byte_end":542978,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/     uses `p`, `q`, `dP` and `dQ` via the Chinese Remainder Theorem,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":542983,"byte_end":543054,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/     instead). However, *ring*'s checks would not be sufficient for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543059,"byte_end":543129,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/     validating a key pair for use by some other system; that other","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543134,"byte_end":543204,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/     system must check the value of `d` itself if `d` is to be used.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543209,"byte_end":543280,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543285,"byte_end":543288,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ In addition to the NIST requirements, *ring* requires that `p > q` and","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543293,"byte_end":543367,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ that `e` must be no more than 33 bits.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543372,"byte_end":543414,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543419,"byte_end":543422,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ See [RFC 5958] and [RFC 3447 Appendix A.1.2] for more details of the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543427,"byte_end":543499,"line_start":129,"line_end":129,"column_start":5,"column_end":77}},{"value":"/ encoding of the key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543504,"byte_end":543528,"line_start":130,"line_end":130,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543533,"byte_end":543536,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [NIST SP-800-56B rev. 1]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543541,"byte_end":543570,"line_start":132,"line_end":132,"column_start":5,"column_end":34}},{"value":"/     http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Br1.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543575,"byte_end":543657,"line_start":133,"line_end":133,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543662,"byte_end":543665,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [RFC 3447 Appendix A.1.2]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543670,"byte_end":543700,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/     https://tools.ietf.org/html/rfc3447#appendix-A.1.2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543705,"byte_end":543763,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543768,"byte_end":543771,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [RFC 5958]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543776,"byte_end":543791,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"/     https://tools.ietf.org/html/rfc5958","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":543796,"byte_end":543839,"line_start":139,"line_end":139,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544934,"byte_end":544942,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"from_der","qualname":"<RsaKeyPair>::from_der","value":"fn (input: &[u8]) -> Result<Self, KeyRejected>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RSA private key that is not inside a PKCS#8 wrapper.","sig":null,"attributes":[{"value":"/ Parses an RSA private key that is not inside a PKCS#8 wrapper.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544242,"byte_end":544308,"line_start":150,"line_end":150,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544313,"byte_end":544316,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The private key must be encoded as a binary DER-encoded ASN.1","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544321,"byte_end":544386,"line_start":152,"line_end":152,"column_start":5,"column_end":70}},{"value":"/ `RSAPrivateKey` as described in [RFC 3447 Appendix A.1.2]). In all other","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544391,"byte_end":544467,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ respects, this is just like `from_pkcs8()`. See the documentation for","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544472,"byte_end":544545,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ `from_pkcs8()` for more details.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544550,"byte_end":544586,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544591,"byte_end":544594,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ It is recommended to use `from_pkcs8()` (with a PKCS#8-encoded key)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544599,"byte_end":544670,"line_start":157,"line_end":157,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544675,"byte_end":544687,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544692,"byte_end":544695,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [RFC 3447 Appendix A.1.2]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544700,"byte_end":544730,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/     https://tools.ietf.org/html/rfc3447#appendix-A.1.2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544735,"byte_end":544793,"line_start":161,"line_end":161,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544798,"byte_end":544801,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [NIST SP-800-56B rev. 1]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544806,"byte_end":544835,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/     http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Br1.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":544840,"byte_end":544922,"line_start":164,"line_end":164,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":553818,"byte_end":553836,"line_start":380,"line_end":380,"column_start":12,"column_end":30},"name":"public_modulus_len","qualname":"<RsaKeyPair>::public_modulus_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length in bytes of the key pair's public modulus.","sig":null,"attributes":[{"value":"/ Returns the length in bytes of the key pair's public modulus.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":553670,"byte_end":553735,"line_start":377,"line_end":377,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":553740,"byte_end":553743,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ A signature has the same length as the public modulus.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":553748,"byte_end":553806,"line_start":379,"line_end":379,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554246,"byte_end":554265,"line_start":399,"line_end":399,"column_start":12,"column_end":31},"name":"RsaSubjectPublicKey","qualname":"::rsa::signing::RsaSubjectPublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A serialized RSA public key.\n","sig":null,"attributes":[{"value":"/ A serialized RSA public key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554185,"byte_end":554217,"line_start":397,"line_end":397,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554828,"byte_end":554835,"line_start":419,"line_end":419,"column_start":12,"column_end":19},"name":"modulus","qualname":"<RsaSubjectPublicKey>::modulus","value":"fn (&self) -> io::Positive","parent":null,"children":[],"decl_id":null,"docs":" The public modulus (n).\n","sig":null,"attributes":[{"value":"/ The public modulus (n).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554789,"byte_end":554816,"line_start":418,"line_end":418,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":555120,"byte_end":555128,"line_start":427,"line_end":427,"column_start":12,"column_end":20},"name":"exponent","qualname":"<RsaSubjectPublicKey>::exponent","value":"fn (&self) -> io::Positive","parent":null,"children":[],"decl_id":null,"docs":" The public exponent (e).\n","sig":null,"attributes":[{"value":"/ The public exponent (e).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":555080,"byte_end":555108,"line_start":426,"line_end":426,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":559489,"byte_end":559493,"line_start":535,"line_end":535,"column_start":12,"column_end":16},"name":"sign","qualname":"<RsaKeyPair>::sign","value":"fn (&self, padding_alg: &'static dyn RsaEncoding, rng: &dyn rand::SecureRandom, msg: &[u8], signature: &mut [u8]) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Sign `msg`. `msg` is digested using the digest algorithm from\n `padding_alg` and the digest is then padded using the padding algorithm\n from `padding_alg`. The signature it written into `signature`;\n `signature`'s length must be exactly the length returned by\n `public_modulus_len()`. `rng` may be used to randomize the padding\n (e.g. for PSS).","sig":null,"attributes":[{"value":"/ Sign `msg`. `msg` is digested using the digest algorithm from","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558549,"byte_end":558614,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/ `padding_alg` and the digest is then padded using the padding algorithm","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558619,"byte_end":558694,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ from `padding_alg`. The signature it written into `signature`;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558699,"byte_end":558765,"line_start":521,"line_end":521,"column_start":5,"column_end":71}},{"value":"/ `signature`'s length must be exactly the length returned by","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558770,"byte_end":558833,"line_start":522,"line_end":522,"column_start":5,"column_end":68}},{"value":"/ `public_modulus_len()`. `rng` may be used to randomize the padding","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558838,"byte_end":558908,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ (e.g. for PSS).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558913,"byte_end":558932,"line_start":524,"line_end":524,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558937,"byte_end":558940,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Many other crypto libraries have signing functions that takes a","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558945,"byte_end":559012,"line_start":526,"line_end":526,"column_start":5,"column_end":72}},{"value":"/ precomputed digest as input, instead of the message to digest. This","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":559017,"byte_end":559088,"line_start":527,"line_end":527,"column_start":5,"column_end":76}},{"value":"/ function does *not* take a precomputed digest; instead, `sign`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":559093,"byte_end":559159,"line_start":528,"line_end":528,"column_start":5,"column_end":71}},{"value":"/ calculates the digest itself.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":559164,"byte_end":559197,"line_start":529,"line_end":529,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":559202,"byte_end":559205,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Lots of effort has been made to make the signing operations close to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":559210,"byte_end":559282,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ constant time to protect the private key from side channel attacks. On","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":559287,"byte_end":559361,"line_start":532,"line_end":532,"column_start":5,"column_end":79}},{"value":"/ x86-64, this is done pretty well, but not perfectly. On other","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":559366,"byte_end":559431,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/ platforms, it is done less perfectly.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":559436,"byte_end":559477,"line_start":534,"line_end":534,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signature","qualname":"::signature","value":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","parent":null,"children":[{"krate":0,"index":2519},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2548},{"krate":0,"index":3301},{"krate":0,"index":3306},{"krate":0,"index":3305},{"krate":0,"index":2571},{"krate":0,"index":2576},{"krate":0,"index":2578},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2593}],"decl_id":null,"docs":" Public key signatures: signing and verification.","sig":null,"attributes":[{"value":"! Public key signatures: signing and verification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":564621,"byte_end":564673,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":564674,"byte_end":564677,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! Use the `verify` function to verify signatures, passing a reference to the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":564678,"byte_end":564756,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! algorithm that identifies the algorithm. See the documentation for `verify`","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":564757,"byte_end":564836,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! for examples.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":564837,"byte_end":564854,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":564855,"byte_end":564858,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! For signature verification, this API treats each combination of parameters","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":564859,"byte_end":564937,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"! as a separate algorithm. For example, instead of having a single \"RSA\"","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":564938,"byte_end":565012,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"! algorithm with a verification function that takes a bunch of parameters,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565013,"byte_end":565089,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"! there are `RSA_PKCS1_2048_8192_SHA256`, `RSA_PKCS1_2048_8192_SHA384`, etc.,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565090,"byte_end":565169,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"! which encode sets of parameter choices into objects. This is designed to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565170,"byte_end":565246,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"! reduce the risks of algorithm agility and to provide consistency with ECDSA","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565247,"byte_end":565326,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"! and EdDSA.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565327,"byte_end":565341,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565342,"byte_end":565345,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! Currently this module does not support digesting the message to be signed","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565346,"byte_end":565423,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! separately from the public key operation, as it is currently being","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565424,"byte_end":565494,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"! optimized for Ed25519 and for the implementation of protocols that do not","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565495,"byte_end":565572,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"! requiring signing large messages. An interface for efficiently supporting","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565573,"byte_end":565650,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"! larger messages may be added later.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565651,"byte_end":565690,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565691,"byte_end":565694,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565695,"byte_end":565698,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Algorithm Details","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565699,"byte_end":565722,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565723,"byte_end":565726,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ## `ECDSA_*_ASN1` Details: ASN.1-encoded ECDSA Signatures","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565727,"byte_end":565788,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565789,"byte_end":565792,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! The signature is a ASN.1 DER-encoded `Ecdsa-Sig-Value` as described in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565793,"byte_end":565867,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"! [RFC 3279 Section 2.2.3]. This is the form of ECDSA signature used in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565868,"byte_end":565941,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"! X.509-related structures and in TLS's `ServerKeyExchange` messages.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":565942,"byte_end":566013,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566014,"byte_end":566017,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! The public key is encoding in uncompressed form using the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566018,"byte_end":566079,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"! Octet-String-to-Elliptic-Curve-Point algorithm in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566080,"byte_end":566133,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"! [SEC 1: Elliptic Curve Cryptography, Version 2.0].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566134,"byte_end":566188,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566189,"byte_end":566192,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! During verification, the public key is validated using the ECC Partial","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566193,"byte_end":566267,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"! Public-Key Validation Routine from Section 5.6.2.3.3 of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566268,"byte_end":566327,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"! [NIST Special Publication 800-56A, revision 2] and Appendix A.3 of the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566328,"byte_end":566402,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"! NSA's [Suite B implementer's guide to FIPS 186-3]. Note that, as explained","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566403,"byte_end":566481,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"! in the NSA guide, ECC Partial Public-Key Validation is equivalent to ECC","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566482,"byte_end":566558,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"! Full Public-Key Validation for prime-order curves like this one.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566559,"byte_end":566627,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566628,"byte_end":566631,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! ## `ECDSA_*_FIXED` Details: Fixed-length (PKCS#11-style) ECDSA Signatures","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566632,"byte_end":566709,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566710,"byte_end":566713,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! The signature is *r*||*s*, where || denotes concatenation, and where both","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566714,"byte_end":566791,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"! *r* and *s* are both big-endian-encoded values that are left-padded to the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566792,"byte_end":566870,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"! maximum length. A P-256 signature will be 64 bytes long (two 32-byte","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566871,"byte_end":566943,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"! components) and a P-384 signature will be 96 bytes long (two 48-byte","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":566944,"byte_end":567016,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"! components). This is the form of ECDSA signature used PKCS#11 and DNSSEC.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567017,"byte_end":567094,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567095,"byte_end":567098,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! The public key is encoding in uncompressed form using the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567099,"byte_end":567160,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"! Octet-String-to-Elliptic-Curve-Point algorithm in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567161,"byte_end":567214,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"! [SEC 1: Elliptic Curve Cryptography, Version 2.0].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567215,"byte_end":567269,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567270,"byte_end":567273,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! During verification, the public key is validated using the ECC Partial","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567274,"byte_end":567348,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"! Public-Key Validation Routine from Section 5.6.2.3.3 of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567349,"byte_end":567408,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"! [NIST Special Publication 800-56A, revision 2] and Appendix A.3 of the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567409,"byte_end":567483,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"! NSA's [Suite B implementer's guide to FIPS 186-3]. Note that, as explained","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567484,"byte_end":567562,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! in the NSA guide, ECC Partial Public-Key Validation is equivalent to ECC","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567563,"byte_end":567639,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"! Full Public-Key Validation for prime-order curves like this one.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567640,"byte_end":567708,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567709,"byte_end":567712,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! ## `RSA_PKCS1_*` Details: RSA PKCS#1 1.5 Signatures","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567713,"byte_end":567768,"line_start":74,"line_end":74,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567769,"byte_end":567772,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! The signature is an RSASSA-PKCS1-v1_5 signature as described in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567773,"byte_end":567840,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"! [RFC 3447 Section 8.2].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567841,"byte_end":567868,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567869,"byte_end":567872,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! The public key is encoded as an ASN.1 `RSAPublicKey` as described in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567873,"byte_end":567945,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"! [RFC 3447 Appendix-A.1.1]. The public key modulus length, rounded *up* to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":567946,"byte_end":568023,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"! the nearest (larger) multiple of 8 bits, must be in the range given in the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568024,"byte_end":568102,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"! name of the algorithm. The public exponent must be an odd integer of 2-33","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568103,"byte_end":568180,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"! bits, inclusive.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568181,"byte_end":568201,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568202,"byte_end":568205,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568206,"byte_end":568209,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! ## `RSA_PSS_*` Details: RSA PSS Signatures","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568210,"byte_end":568256,"line_start":86,"line_end":86,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568257,"byte_end":568260,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! The signature is an RSASSA-PSS signature as described in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568261,"byte_end":568321,"line_start":88,"line_end":88,"column_start":1,"column_end":61}},{"value":"! [RFC 3447 Section 8.1].","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568322,"byte_end":568349,"line_start":89,"line_end":89,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568350,"byte_end":568353,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! The public key is encoded as an ASN.1 `RSAPublicKey` as described in","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568354,"byte_end":568426,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"! [RFC 3447 Appendix-A.1.1]. The public key modulus length, rounded *up* to","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568427,"byte_end":568504,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"! the nearest (larger) multiple of 8 bits, must be in the range given in the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568505,"byte_end":568583,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"! name of the algorithm. The public exponent must be an odd integer of 2-33","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568584,"byte_end":568661,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"! bits, inclusive.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568662,"byte_end":568682,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568683,"byte_end":568686,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! During verification, signatures will only be accepted if the MGF1 digest","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568687,"byte_end":568763,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"! algorithm is the same as the message digest algorithm and if the salt","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568764,"byte_end":568837,"line_start":98,"line_end":98,"column_start":1,"column_end":74}},{"value":"! length is the same length as the message digest. This matches the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568838,"byte_end":568907,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"! requirements in TLS 1.3 and other recent specifications.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568908,"byte_end":568968,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568969,"byte_end":568972,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! During signing, the message digest algorithm will be used as the MGF1","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":568973,"byte_end":569046,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"! digest algorithm. The salt will be the same length as the message digest.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569047,"byte_end":569124,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"! This matches the requirements in TLS 1.3 and other recent specifications.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569125,"byte_end":569202,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"! Additionally, the entire salt is randomly generated separately for each","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569203,"byte_end":569278,"line_start":105,"line_end":105,"column_start":1,"column_end":76}},{"value":"! signature using the secure random number generator passed to `sign()`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569279,"byte_end":569353,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569354,"byte_end":569357,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569358,"byte_end":569361,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! [SEC 1: Elliptic Curve Cryptography, Version 2.0]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569362,"byte_end":569416,"line_start":109,"line_end":109,"column_start":1,"column_end":55}},{"value":"!     http://www.secg.org/sec1-v2.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569417,"byte_end":569456,"line_start":110,"line_end":110,"column_start":1,"column_end":40}},{"value":"! [NIST Special Publication 800-56A, revision 2]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569457,"byte_end":569508,"line_start":111,"line_end":111,"column_start":1,"column_end":52}},{"value":"!     http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Ar2.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569509,"byte_end":569591,"line_start":112,"line_end":112,"column_start":1,"column_end":83}},{"value":"! [Suite B implementer's guide to FIPS 186-3]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569592,"byte_end":569640,"line_start":113,"line_end":113,"column_start":1,"column_end":49}},{"value":"!     https://github.com/briansmith/ring/blob/master/doc/ecdsa.pdf","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569641,"byte_end":569709,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"! [RFC 3279 Section 2.2.3]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569710,"byte_end":569739,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!     https://tools.ietf.org/html/rfc3279#section-2.2.3","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569740,"byte_end":569797,"line_start":116,"line_end":116,"column_start":1,"column_end":58}},{"value":"! [RFC 3447 Section 8.2]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569798,"byte_end":569825,"line_start":117,"line_end":117,"column_start":1,"column_end":28}},{"value":"!     https://tools.ietf.org/html/rfc3447#section-7.2","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569826,"byte_end":569881,"line_start":118,"line_end":118,"column_start":1,"column_end":56}},{"value":"! [RFC 3447 Section 8.1]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569882,"byte_end":569909,"line_start":119,"line_end":119,"column_start":1,"column_end":28}},{"value":"!     https://tools.ietf.org/html/rfc3447#section-8.1","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569910,"byte_end":569965,"line_start":120,"line_end":120,"column_start":1,"column_end":56}},{"value":"! [RFC 3447 Appendix-A.1.1]:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569966,"byte_end":569996,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"!     https://tools.ietf.org/html/rfc3447#appendix-A.1.1","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":569997,"byte_end":570055,"line_start":122,"line_end":122,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570056,"byte_end":570059,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570060,"byte_end":570063,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570064,"byte_end":570078,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570079,"byte_end":570082,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ## Signing and verifying with Ed25519","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570083,"byte_end":570124,"line_start":127,"line_end":127,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570125,"byte_end":570128,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570129,"byte_end":570136,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"! use ring::{","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570137,"byte_end":570152,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"!     rand,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570153,"byte_end":570166,"line_start":131,"line_end":131,"column_start":1,"column_end":14}},{"value":"!     signature::{self, KeyPair},","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570167,"byte_end":570202,"line_start":132,"line_end":132,"column_start":1,"column_end":36}},{"value":"! };","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570203,"byte_end":570209,"line_start":133,"line_end":133,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570210,"byte_end":570213,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! # fn sign_and_verify_ed25519() -> Result<(), ring::error::Unspecified> {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570214,"byte_end":570290,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"! // Generate a key pair in PKCS#8 (v2) format.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570291,"byte_end":570340,"line_start":136,"line_end":136,"column_start":1,"column_end":50}},{"value":"! let rng = rand::SystemRandom::new();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570341,"byte_end":570381,"line_start":137,"line_end":137,"column_start":1,"column_end":41}},{"value":"! let pkcs8_bytes = signature::Ed25519KeyPair::generate_pkcs8(&rng)?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570382,"byte_end":570453,"line_start":138,"line_end":138,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570454,"byte_end":570457,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! // Normally the application would store the PKCS#8 file persistently. Later","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570458,"byte_end":570537,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"! // it would read the PKCS#8 file from persistent storage to use it.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570538,"byte_end":570609,"line_start":141,"line_end":141,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570610,"byte_end":570613,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! let key_pair = signature::Ed25519KeyPair::from_pkcs8(pkcs8_bytes.as_ref())?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570614,"byte_end":570694,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570695,"byte_end":570698,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! // Sign the message \"hello, world\".","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570699,"byte_end":570738,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"! const MESSAGE: &[u8] = b\"hello, world\";","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570739,"byte_end":570782,"line_start":146,"line_end":146,"column_start":1,"column_end":44}},{"value":"! let sig = key_pair.sign(MESSAGE);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570783,"byte_end":570820,"line_start":147,"line_end":147,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570821,"byte_end":570824,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! // Normally an application would extract the bytes of the signature and","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570825,"byte_end":570900,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"! // send them in a protocol message to the peer(s). Here we just get the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570901,"byte_end":570976,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"! // public key key directly from the key pair.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":570977,"byte_end":571026,"line_start":151,"line_end":151,"column_start":1,"column_end":50}},{"value":"! let peer_public_key_bytes = key_pair.public_key().as_ref();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571027,"byte_end":571090,"line_start":152,"line_end":152,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571091,"byte_end":571094,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! // Verify the signature of the message using the public key. Normally the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571095,"byte_end":571172,"line_start":154,"line_end":154,"column_start":1,"column_end":78}},{"value":"! // verifier of the message would parse the inputs to this code out of the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571173,"byte_end":571250,"line_start":155,"line_end":155,"column_start":1,"column_end":78}},{"value":"! // protocol message(s) sent by the signer.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571251,"byte_end":571297,"line_start":156,"line_end":156,"column_start":1,"column_end":47}},{"value":"! let peer_public_key =","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571298,"byte_end":571323,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"!     signature::UnparsedPublicKey::new(&signature::ED25519, peer_public_key_bytes);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571324,"byte_end":571410,"line_start":158,"line_end":158,"column_start":1,"column_end":87}},{"value":"! peer_public_key.verify(MESSAGE, sig.as_ref())?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571411,"byte_end":571462,"line_start":159,"line_end":159,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571463,"byte_end":571466,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! # Ok(())","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571467,"byte_end":571479,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571480,"byte_end":571487,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571488,"byte_end":571491,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! # fn main() { sign_and_verify_ed25519().unwrap() }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571492,"byte_end":571546,"line_start":164,"line_end":164,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571547,"byte_end":571554,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571555,"byte_end":571558,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! ## Signing and verifying with RSA (PKCS#1 1.5 padding)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571559,"byte_end":571617,"line_start":167,"line_end":167,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571618,"byte_end":571621,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! By default OpenSSL writes RSA public keys in SubjectPublicKeyInfo format,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571622,"byte_end":571699,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"! not RSAPublicKey format, and Base64-encodes them (“PEM” format).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571700,"byte_end":571772,"line_start":170,"line_end":170,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571773,"byte_end":571776,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! To convert the PEM SubjectPublicKeyInfo format (“BEGIN PUBLIC KEY”) to the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571777,"byte_end":571859,"line_start":172,"line_end":172,"column_start":1,"column_end":79}},{"value":"! binary RSAPublicKey format needed by `verify()`, use:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571860,"byte_end":571917,"line_start":173,"line_end":173,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571918,"byte_end":571921,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! ```sh","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571922,"byte_end":571931,"line_start":175,"line_end":175,"column_start":1,"column_end":10}},{"value":"! openssl rsa -pubin \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571932,"byte_end":571956,"line_start":176,"line_end":176,"column_start":1,"column_end":25}},{"value":"!             -in public_key.pem \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571957,"byte_end":571993,"line_start":177,"line_end":177,"column_start":1,"column_end":37}},{"value":"!             -inform PEM \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":571994,"byte_end":572023,"line_start":178,"line_end":178,"column_start":1,"column_end":30}},{"value":"!             -RSAPublicKey_out \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572024,"byte_end":572059,"line_start":179,"line_end":179,"column_start":1,"column_end":36}},{"value":"!             -outform DER \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572060,"byte_end":572090,"line_start":180,"line_end":180,"column_start":1,"column_end":31}},{"value":"!             -out public_key.der","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572091,"byte_end":572126,"line_start":181,"line_end":181,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572127,"byte_end":572134,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572135,"byte_end":572138,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! To extract the RSAPublicKey-formatted public key from an ASN.1 (binary)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572139,"byte_end":572214,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"! DER-encoded RSAPrivateKey format private key file, use:","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572215,"byte_end":572274,"line_start":185,"line_end":185,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572275,"byte_end":572278,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! ```sh","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572279,"byte_end":572288,"line_start":187,"line_end":187,"column_start":1,"column_end":10}},{"value":"! openssl rsa -in private_key.der \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572289,"byte_end":572326,"line_start":188,"line_end":188,"column_start":1,"column_end":38}},{"value":"!             -inform DER \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572327,"byte_end":572356,"line_start":189,"line_end":189,"column_start":1,"column_end":30}},{"value":"!             -RSAPublicKey_out \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572357,"byte_end":572392,"line_start":190,"line_end":190,"column_start":1,"column_end":36}},{"value":"!             -outform DER \\","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572393,"byte_end":572423,"line_start":191,"line_end":191,"column_start":1,"column_end":31}},{"value":"!             -out public_key.der","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572424,"byte_end":572459,"line_start":192,"line_end":192,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572460,"byte_end":572467,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572468,"byte_end":572471,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572472,"byte_end":572479,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"! use ring::{rand, signature};","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572480,"byte_end":572512,"line_start":196,"line_end":196,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572513,"byte_end":572516,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"! # #[cfg(feature = \"std\")]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572517,"byte_end":572546,"line_start":198,"line_end":198,"column_start":1,"column_end":30}},{"value":"! fn sign_and_verify_rsa(private_key_path: &std::path::Path,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572547,"byte_end":572609,"line_start":199,"line_end":199,"column_start":1,"column_end":63}},{"value":"!                        public_key_path: &std::path::Path)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572610,"byte_end":572671,"line_start":200,"line_end":200,"column_start":1,"column_end":62}},{"value":"!                        -> Result<(), MyError> {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572672,"byte_end":572723,"line_start":201,"line_end":201,"column_start":1,"column_end":52}},{"value":"! // Create an `RsaKeyPair` from the DER-encoded bytes. This example uses","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572724,"byte_end":572799,"line_start":202,"line_end":202,"column_start":1,"column_end":76}},{"value":"! // a 2048-bit key, but larger keys are also supported.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572800,"byte_end":572858,"line_start":203,"line_end":203,"column_start":1,"column_end":59}},{"value":"! let private_key_der = read_file(private_key_path)?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572859,"byte_end":572914,"line_start":204,"line_end":204,"column_start":1,"column_end":56}},{"value":"! let key_pair = signature::RsaKeyPair::from_der(&private_key_der)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572915,"byte_end":572983,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"!     .map_err(|_| MyError::BadPrivateKey)?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":572984,"byte_end":573030,"line_start":206,"line_end":206,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573031,"byte_end":573034,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! // Sign the message \"hello, world\", using PKCS#1 v1.5 padding and the","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573035,"byte_end":573108,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"! // SHA256 digest algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573109,"byte_end":573140,"line_start":209,"line_end":209,"column_start":1,"column_end":32}},{"value":"! const MESSAGE: &'static [u8] = b\"hello, world\";","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573141,"byte_end":573192,"line_start":210,"line_end":210,"column_start":1,"column_end":52}},{"value":"! let rng = rand::SystemRandom::new();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573193,"byte_end":573233,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"! let mut signature = vec![0; key_pair.public_modulus_len()];","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573234,"byte_end":573297,"line_start":212,"line_end":212,"column_start":1,"column_end":64}},{"value":"! key_pair.sign(&signature::RSA_PKCS1_SHA256, &rng, MESSAGE, &mut signature)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573298,"byte_end":573376,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"!     .map_err(|_| MyError::OOM)?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573377,"byte_end":573413,"line_start":214,"line_end":214,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573414,"byte_end":573417,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"! // Verify the signature.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573418,"byte_end":573446,"line_start":216,"line_end":216,"column_start":1,"column_end":29}},{"value":"! let public_key =","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573447,"byte_end":573467,"line_start":217,"line_end":217,"column_start":1,"column_end":21}},{"value":"!     signature::UnparsedPublicKey::new(&signature::RSA_PKCS1_2048_8192_SHA256,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573468,"byte_end":573549,"line_start":218,"line_end":218,"column_start":1,"column_end":82}},{"value":"!                                       read_file(public_key_path)?);","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573550,"byte_end":573621,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"! public_key.verify(MESSAGE, &signature)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573622,"byte_end":573664,"line_start":220,"line_end":220,"column_start":1,"column_end":43}},{"value":"!     .map_err(|_| MyError::BadSignature)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573665,"byte_end":573708,"line_start":221,"line_end":221,"column_start":1,"column_end":44}},{"value":"! }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573709,"byte_end":573714,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573715,"byte_end":573718,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug)]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573719,"byte_end":573739,"line_start":224,"line_end":224,"column_start":1,"column_end":21}},{"value":"! enum MyError {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573740,"byte_end":573758,"line_start":225,"line_end":225,"column_start":1,"column_end":19}},{"value":"! #  #[cfg(feature = \"std\")]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573759,"byte_end":573789,"line_start":226,"line_end":226,"column_start":1,"column_end":31}},{"value":"!    IO(std::io::Error),","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573790,"byte_end":573816,"line_start":227,"line_end":227,"column_start":1,"column_end":27}},{"value":"!    BadPrivateKey,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573817,"byte_end":573838,"line_start":228,"line_end":228,"column_start":1,"column_end":22}},{"value":"!    OOM,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573839,"byte_end":573850,"line_start":229,"line_end":229,"column_start":1,"column_end":12}},{"value":"!    BadSignature,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573851,"byte_end":573871,"line_start":230,"line_end":230,"column_start":1,"column_end":21}},{"value":"! }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573872,"byte_end":573877,"line_start":231,"line_end":231,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573878,"byte_end":573881,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"! # #[cfg(feature = \"std\")]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573882,"byte_end":573911,"line_start":233,"line_end":233,"column_start":1,"column_end":30}},{"value":"! fn read_file(path: &std::path::Path) -> Result<Vec<u8>, MyError> {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573912,"byte_end":573982,"line_start":234,"line_end":234,"column_start":1,"column_end":71}},{"value":"!     use std::io::Read;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":573983,"byte_end":574009,"line_start":235,"line_end":235,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574010,"byte_end":574013,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"!     let mut file = std::fs::File::open(path).map_err(|e| MyError::IO(e))?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574014,"byte_end":574092,"line_start":237,"line_end":237,"column_start":1,"column_end":79}},{"value":"!     let mut contents: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574093,"byte_end":574140,"line_start":238,"line_end":238,"column_start":1,"column_end":48}},{"value":"!     file.read_to_end(&mut contents).map_err(|e| MyError::IO(e))?;","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574141,"byte_end":574210,"line_start":239,"line_end":239,"column_start":1,"column_end":70}},{"value":"!     Ok(contents)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574211,"byte_end":574231,"line_start":240,"line_end":240,"column_start":1,"column_end":21}},{"value":"! }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574232,"byte_end":574237,"line_start":241,"line_end":241,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574238,"byte_end":574243,"line_start":242,"line_end":242,"column_start":1,"column_end":6}},{"value":"! # #[cfg(not(feature = \"std\"))]","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574244,"byte_end":574278,"line_start":243,"line_end":243,"column_start":1,"column_end":35}},{"value":"! # fn sign_and_verify_rsa(_private_key_path: &std::path::Path,","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574279,"byte_end":574344,"line_start":244,"line_end":244,"column_start":1,"column_end":66}},{"value":"! #                        _public_key_path: &std::path::Path)","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574345,"byte_end":574409,"line_start":245,"line_end":245,"column_start":1,"column_end":65}},{"value":"! #                        -> Result<(), ()> {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574410,"byte_end":574458,"line_start":246,"line_end":246,"column_start":1,"column_end":49}},{"value":"! #     Ok(())","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574459,"byte_end":574475,"line_start":247,"line_end":247,"column_start":1,"column_end":17}},{"value":"! # }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574476,"byte_end":574483,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"! #","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574484,"byte_end":574489,"line_start":249,"line_end":249,"column_start":1,"column_end":6}},{"value":"! # fn main() {","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574490,"byte_end":574507,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"! #     let private_key_path =","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574508,"byte_end":574540,"line_start":251,"line_end":251,"column_start":1,"column_end":33}},{"value":"! #         std::path::Path::new(\"src/rsa/signature_rsa_example_private_key.der\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574541,"byte_end":574625,"line_start":252,"line_end":252,"column_start":1,"column_end":85}},{"value":"! #     let public_key_path =","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574626,"byte_end":574657,"line_start":253,"line_end":253,"column_start":1,"column_end":32}},{"value":"! #         std::path::Path::new(\"src/rsa/signature_rsa_example_public_key.der\");","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574658,"byte_end":574741,"line_start":254,"line_end":254,"column_start":1,"column_end":84}},{"value":"! #     sign_and_verify_rsa(&private_key_path, &public_key_path).unwrap()","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574742,"byte_end":574817,"line_start":255,"line_end":255,"column_start":1,"column_end":76}},{"value":"! # }","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574818,"byte_end":574825,"line_start":256,"line_end":256,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":574826,"byte_end":574833,"line_start":257,"line_end":257,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3301},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576620,"byte_end":576629,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"Signature","qualname":"::signature::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":3302},{"krate":0,"index":3304}],"decl_id":null,"docs":" A public key signature returned from a signing operation.\n","sig":null,"attributes":[{"value":"/ A public key signature returned from a signing operation.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576524,"byte_end":576585,"line_start":311,"line_end":311,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577165,"byte_end":577172,"line_start":340,"line_end":340,"column_start":11,"column_end":18},"name":"KeyPair","qualname":"::signature::KeyPair","value":"KeyPair: core::fmt::Debug + Send + Sized + Sync","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2580}],"decl_id":null,"docs":" Key pairs for signing messages (private key and public key).\n","sig":null,"attributes":[{"value":"/ Key pairs for signing messages (private key and public key).","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577090,"byte_end":577154,"line_start":339,"line_end":339,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577260,"byte_end":577269,"line_start":342,"line_end":342,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::signature::KeyPair::PublicKey","value":"type PublicKey: AsRef<[u8]> + core::fmt::Debug + Clone + Send + Sized + Sync;","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" The type of the public key.\n","sig":null,"attributes":[{"value":"/ The type of the public key.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577219,"byte_end":577250,"line_start":341,"line_end":341,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577382,"byte_end":577392,"line_start":345,"line_end":345,"column_start":8,"column_end":18},"name":"public_key","qualname":"::signature::KeyPair::public_key","value":"fn (&self) -> &Self::PublicKey","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" The public key for the key pair.\n","sig":null,"attributes":[{"value":"/ The public key for the key pair.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577338,"byte_end":577374,"line_start":344,"line_end":344,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577915,"byte_end":577936,"line_start":356,"line_end":356,"column_start":11,"column_end":32},"name":"VerificationAlgorithm","qualname":"::signature::VerificationAlgorithm","value":"VerificationAlgorithm: core::fmt::Debug + Sync + sealed::Sealed","parent":null,"children":[{"krate":0,"index":2583}],"decl_id":null,"docs":" A signature verification algorithm.\n","sig":null,"attributes":[{"value":"/ A signature verification algorithm.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577865,"byte_end":577904,"line_start":355,"line_end":355,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578088,"byte_end":578094,"line_start":359,"line_end":359,"column_start":8,"column_end":14},"name":"verify","qualname":"::signature::VerificationAlgorithm::verify","value":"fn (&self, public_key: untrusted::Input, msg: untrusted::Input, signature: untrusted::Input) -> Result<(), error::Unspecified>","parent":{"krate":0,"index":2582},"children":[],"decl_id":null,"docs":" Verify the signature `signature` of message `msg` with the public key\n `public_key`.\n","sig":null,"attributes":[{"value":"/ Verify the signature `signature` of message `msg` with the public key","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577985,"byte_end":578058,"line_start":357,"line_end":357,"column_start":5,"column_end":78}},{"value":"/ `public_key`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578063,"byte_end":578080,"line_start":358,"line_end":358,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578348,"byte_end":578365,"line_start":368,"line_end":368,"column_start":12,"column_end":29},"name":"UnparsedPublicKey","qualname":"::signature::UnparsedPublicKey","value":"UnparsedPublicKey {  }","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2587}],"decl_id":null,"docs":" An unparsed, possibly malformed, public key for signature verification.\n","sig":null,"attributes":[{"value":"/ An unparsed, possibly malformed, public key for signature verification.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578261,"byte_end":578336,"line_start":367,"line_end":367,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578928,"byte_end":578931,"line_start":392,"line_end":392,"column_start":12,"column_end":15},"name":"new","qualname":"<UnparsedPublicKey<B>>::new","value":"fn (algorithm: &'static dyn VerificationAlgorithm, bytes: B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `UnparsedPublicKey`.","sig":null,"attributes":[{"value":"/ Construct a new `UnparsedPublicKey`.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578785,"byte_end":578825,"line_start":388,"line_end":388,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578830,"byte_end":578833,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ No validation of `bytes` is done until `verify()` is called.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578838,"byte_end":578902,"line_start":390,"line_end":390,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578907,"byte_end":578916,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":579242,"byte_end":579248,"line_start":400,"line_end":400,"column_start":12,"column_end":18},"name":"verify","qualname":"<UnparsedPublicKey<B>>::verify","value":"fn (&self, message: &[u8], signature: &[u8]) -> Result<(), error::Unspecified>","parent":null,"children":[],"decl_id":null,"docs":" Parses the public key and verifies `signature` is a valid signature of\n `message` using it.","sig":null,"attributes":[{"value":"/ Parses the public key and verifies `signature` is a valid signature of","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":579044,"byte_end":579118,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `message` using it.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":579123,"byte_end":579146,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":579151,"byte_end":579154,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ See the [crate::signature] module-level documentation for examples.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":579159,"byte_end":579230,"line_start":399,"line_end":399,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":3285,"byte_end":3291,"line_start":126,"line_end":126,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Traits that are designed to only be implemented internally in *ring*.\n","sig":null,"attributes":[{"value":"/ Traits that are designed to only be implemented internally in *ring*.","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":3002,"byte_end":3075,"line_start":114,"line_end":114,"column_start":5,"column_end":78}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\debug.rs","byte_start":5763,"byte_end":5769,"line_start":67,"line_end":67,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12933,"byte_end":12941,"line_start":162,"line_end":162,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24101,"byte_end":24116,"line_start":483,"line_end":483,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24606,"byte_end":24622,"line_start":498,"line_end":498,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25563,"byte_end":25587,"line_start":521,"line_end":521,"column_start":41,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":26033,"byte_end":26057,"line_start":533,"line_end":533,"column_start":19,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":32323,"byte_end":32333,"line_start":68,"line_end":68,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":32468,"byte_end":32478,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":32717,"byte_end":32727,"line_start":85,"line_end":85,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":32875,"byte_end":32885,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":37937,"byte_end":37944,"line_start":225,"line_end":225,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":38155,"byte_end":38162,"line_start":233,"line_end":233,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":41746,"byte_end":41760,"line_start":359,"line_end":359,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":42687,"byte_end":42691,"line_start":388,"line_end":388,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":42859,"byte_end":42863,"line_start":397,"line_end":397,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":42990,"byte_end":42994,"line_start":404,"line_end":404,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":43778,"byte_end":43782,"line_start":423,"line_end":423,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":43922,"byte_end":43926,"line_start":430,"line_end":430,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":48856,"byte_end":48859,"line_start":624,"line_end":624,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":50952,"byte_end":50955,"line_start":671,"line_end":671,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":51180,"byte_end":51194,"line_start":682,"line_end":682,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":56040,"byte_end":56055,"line_start":798,"line_end":798,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":56852,"byte_end":56867,"line_start":821,"line_end":821,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":66935,"byte_end":66946,"line_start":1152,"line_end":1152,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":68854,"byte_end":68856,"line_start":1213,"line_end":1213,"column_start":20,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78591,"byte_end":78593,"line_start":37,"line_end":37,"column_start":19,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78615,"byte_end":78616,"line_start":38,"line_end":38,"column_start":19,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78638,"byte_end":78647,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78669,"byte_end":78677,"line_start":40,"line_end":40,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78816,"byte_end":78818,"line_start":47,"line_end":47,"column_start":28,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78871,"byte_end":78872,"line_start":50,"line_end":50,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78933,"byte_end":78942,"line_start":53,"line_end":53,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bssl.rs","byte_start":80979,"byte_end":80985,"line_start":25,"line_end":25,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\polyfill\\convert.rs","byte_start":84345,"byte_end":84346,"line_start":30,"line_end":30,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87284,"byte_end":87294,"line_start":73,"line_end":73,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87576,"byte_end":87586,"line_start":87,"line_end":87,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87816,"byte_end":87826,"line_start":95,"line_end":95,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93395,"byte_end":93405,"line_start":248,"line_end":248,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93687,"byte_end":93697,"line_start":262,"line_end":262,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93927,"byte_end":93937,"line_start":270,"line_end":270,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":429},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96827,"byte_end":96830,"line_start":362,"line_end":362,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96984,"byte_end":96987,"line_start":370,"line_end":370,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97089,"byte_end":97092,"line_start":379,"line_end":379,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97402,"byte_end":97412,"line_start":393,"line_end":393,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97745,"byte_end":97755,"line_start":407,"line_end":407,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":98361,"byte_end":98371,"line_start":430,"line_end":430,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99052,"byte_end":99063,"line_start":455,"line_end":455,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":490},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101906,"byte_end":101917,"line_start":553,"line_end":553,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103114,"byte_end":103123,"line_start":596,"line_end":596,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103681,"byte_end":103690,"line_start":627,"line_end":627,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103783,"byte_end":103792,"line_start":633,"line_end":633,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103892,"byte_end":103895,"line_start":640,"line_end":640,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes.rs","byte_start":105714,"byte_end":105717,"line_start":30,"line_end":30,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":547},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":559},{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes.rs","byte_start":114783,"byte_end":114789,"line_start":329,"line_end":329,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\block.rs","byte_start":126436,"byte_end":126441,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\block.rs","byte_start":127612,"byte_end":127617,"line_start":72,"line_end":72,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\block.rs","byte_start":127954,"byte_end":127959,"line_start":86,"line_end":86,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\block.rs","byte_start":128106,"byte_end":128111,"line_start":93,"line_end":93,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha.rs","byte_start":130383,"byte_end":130386,"line_start":25,"line_end":25,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143934,"byte_end":143944,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145443,"byte_end":145453,"line_start":91,"line_end":91,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":147614,"byte_end":147617,"line_start":151,"line_end":151,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\gcm.rs","byte_start":149614,"byte_end":149617,"line_start":21,"line_end":21,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\gcm.rs","byte_start":151318,"byte_end":151325,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":812},{"krate":0,"index":817},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158823,"byte_end":158828,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159539,"byte_end":159544,"line_start":58,"line_end":58,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":160003,"byte_end":160010,"line_start":80,"line_end":80,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":161428,"byte_end":161430,"line_start":135,"line_end":135,"column_start":47,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":161557,"byte_end":161559,"line_start":144,"line_end":144,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":161895,"byte_end":161904,"line_start":164,"line_end":164,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":162077,"byte_end":162089,"line_start":173,"line_end":173,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\poly1305.rs","byte_start":163282,"byte_end":163285,"line_start":27,"line_end":27,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\poly1305.rs","byte_start":163615,"byte_end":163622,"line_start":46,"line_end":46,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\poly1305.rs","byte_start":166697,"byte_end":166702,"line_start":147,"line_end":147,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":169986,"byte_end":170005,"line_start":37,"line_end":37,"column_start":50,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170319,"byte_end":170338,"line_start":47,"line_end":47,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171690,"byte_end":171699,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":172093,"byte_end":172102,"line_start":121,"line_end":121,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":172195,"byte_end":172204,"line_start":127,"line_end":127,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178637,"byte_end":178646,"line_start":85,"line_end":85,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178669,"byte_end":178678,"line_start":86,"line_end":86,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":179176,"byte_end":179195,"line_start":106,"line_end":106,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":180793,"byte_end":180802,"line_start":160,"line_end":160,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":180900,"byte_end":180909,"line_start":166,"line_end":166,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181174,"byte_end":181183,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181515,"byte_end":181532,"line_start":189,"line_end":189,"column_start":24,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181586,"byte_end":181603,"line_start":191,"line_end":191,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181824,"byte_end":181841,"line_start":203,"line_end":203,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182165,"byte_end":182182,"line_start":215,"line_end":215,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":186768,"byte_end":186777,"line_start":22,"line_end":22,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":203693,"byte_end":203710,"line_start":26,"line_end":26,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":203773,"byte_end":203790,"line_start":32,"line_end":32,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":203875,"byte_end":203892,"line_start":38,"line_end":38,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":204141,"byte_end":204147,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":204379,"byte_end":204385,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":204552,"byte_end":204558,"line_start":68,"line_end":68,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208067,"byte_end":208075,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208816,"byte_end":208824,"line_start":44,"line_end":44,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\cpu.rs","byte_start":215147,"byte_end":215154,"line_start":185,"line_end":185,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\cpu.rs","byte_start":216744,"byte_end":216751,"line_start":246,"line_end":246,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245974,"byte_end":245982,"line_start":180,"line_end":180,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":246328,"byte_end":246336,"line_start":196,"line_end":196,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":248339,"byte_end":248347,"line_start":272,"line_end":272,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":248705,"byte_end":248713,"line_start":288,"line_end":288,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":220063,"byte_end":220075,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":223094,"byte_end":223101,"line_start":141,"line_end":141,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226200,"byte_end":226206,"line_start":235,"line_end":235,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226403,"byte_end":226409,"line_start":243,"line_end":243,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226577,"byte_end":226583,"line_start":250,"line_end":250,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227785,"byte_end":227794,"line_start":293,"line_end":293,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227887,"byte_end":227896,"line_start":299,"line_end":299,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":257778,"byte_end":257792,"line_start":41,"line_end":41,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":265121,"byte_end":265135,"line_start":221,"line_end":221,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":265349,"byte_end":265358,"line_start":232,"line_end":232,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267551,"byte_end":267566,"line_start":25,"line_end":25,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267948,"byte_end":267963,"line_start":38,"line_end":38,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":269344,"byte_end":269359,"line_start":76,"line_end":76,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":276636,"byte_end":276637,"line_start":36,"line_end":36,"column_start":19,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":276707,"byte_end":276711,"line_start":40,"line_end":40,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":276854,"byte_end":276858,"line_start":49,"line_end":49,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":277534,"byte_end":277542,"line_start":75,"line_end":75,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":278354,"byte_end":278359,"line_start":110,"line_end":110,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\scalar.rs","byte_start":280655,"byte_end":280661,"line_start":23,"line_end":23,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\scalar.rs","byte_start":281964,"byte_end":281976,"line_start":60,"line_end":60,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\scalar.rs","byte_start":282264,"byte_end":282270,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\keys.rs","byte_start":282621,"byte_end":282628,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\keys.rs","byte_start":283095,"byte_end":283099,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\keys.rs","byte_start":284683,"byte_end":284692,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314146,"byte_end":314167,"line_start":52,"line_end":52,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314260,"byte_end":314281,"line_start":58,"line_end":58,"column_start":13,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314310,"byte_end":314331,"line_start":60,"line_end":60,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314575,"byte_end":314587,"line_start":71,"line_end":71,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":321168,"byte_end":321180,"line_start":246,"line_end":246,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":321428,"byte_end":321437,"line_start":259,"line_end":259,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":331311,"byte_end":331337,"line_start":53,"line_end":53,"column_start":43,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":331971,"byte_end":331997,"line_start":74,"line_end":74,"column_start":6,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":336302,"byte_end":336328,"line_start":171,"line_end":171,"column_start":25,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":344490,"byte_end":344495,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":345382,"byte_end":345391,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":348264,"byte_end":348277,"line_start":179,"line_end":179,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":349109,"byte_end":349121,"line_start":211,"line_end":211,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":350448,"byte_end":350457,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":351600,"byte_end":351615,"line_start":281,"line_end":281,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops\\elem.rs","byte_start":383634,"byte_end":383638,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427949,"byte_end":427960,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428142,"byte_end":428153,"line_start":88,"line_end":88,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428544,"byte_end":428555,"line_start":106,"line_end":106,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428681,"byte_end":428692,"line_start":112,"line_end":112,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430373,"byte_end":430384,"line_start":151,"line_end":151,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":431864,"byte_end":431875,"line_start":213,"line_end":213,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":432026,"byte_end":432037,"line_start":219,"line_end":219,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433169,"byte_end":433178,"line_start":27,"line_end":27,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433761,"byte_end":433770,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433939,"byte_end":433943,"line_start":58,"line_end":58,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435235,"byte_end":435239,"line_start":90,"line_end":90,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435759,"byte_end":435762,"line_start":111,"line_end":111,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436823,"byte_end":436826,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437336,"byte_end":437339,"line_start":168,"line_end":168,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443449,"byte_end":443458,"line_start":118,"line_end":118,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444365,"byte_end":444368,"line_start":148,"line_end":148,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444943,"byte_end":444946,"line_start":172,"line_end":172,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":445166,"byte_end":445169,"line_start":180,"line_end":180,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448639,"byte_end":448648,"line_start":269,"line_end":269,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448772,"byte_end":448775,"line_start":275,"line_end":275,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449289,"byte_end":449296,"line_start":294,"line_end":294,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449507,"byte_end":449514,"line_start":302,"line_end":302,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":483853,"byte_end":483861,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":488017,"byte_end":488025,"line_start":170,"line_end":170,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491120,"byte_end":491121,"line_start":36,"line_end":36,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491558,"byte_end":491564,"line_start":52,"line_end":52,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492961,"byte_end":492962,"line_start":105,"line_end":105,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495315,"byte_end":495327,"line_start":149,"line_end":149,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495476,"byte_end":495488,"line_start":157,"line_end":157,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495654,"byte_end":495666,"line_start":164,"line_end":164,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507726,"byte_end":507731,"line_start":69,"line_end":69,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507753,"byte_end":507758,"line_start":71,"line_end":71,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507898,"byte_end":507903,"line_start":78,"line_end":78,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":508202,"byte_end":508207,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512280,"byte_end":512283,"line_start":223,"line_end":223,"column_start":32,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512474,"byte_end":512477,"line_start":229,"line_end":229,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512591,"byte_end":512594,"line_start":235,"line_end":235,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":515097,"byte_end":515100,"line_start":307,"line_end":307,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":518329,"byte_end":518339,"line_start":410,"line_end":410,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa.rs","byte_start":505242,"byte_end":505243,"line_start":67,"line_end":67,"column_start":39,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":526274,"byte_end":526277,"line_start":34,"line_end":34,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":528783,"byte_end":528796,"line_start":88,"line_end":88,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529304,"byte_end":529317,"line_start":108,"line_end":108,"column_start":25,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534259,"byte_end":534281,"line_start":231,"line_end":231,"column_start":24,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534354,"byte_end":534376,"line_start":233,"line_end":233,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534561,"byte_end":534583,"line_start":245,"line_end":245,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539055,"byte_end":539065,"line_start":43,"line_end":43,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554048,"byte_end":554058,"line_start":389,"line_end":389,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554300,"byte_end":554319,"line_start":401,"line_end":401,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554451,"byte_end":554470,"line_start":409,"line_end":409,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2489},{"krate":0,"index":2491},{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":555502,"byte_end":555514,"line_start":440,"line_end":440,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2499}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557630,"byte_end":557631,"line_start":490,"line_end":490,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557677,"byte_end":557678,"line_start":491,"line_end":491,"column_start":43,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557731,"byte_end":557732,"line_start":492,"line_end":492,"column_start":50,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557813,"byte_end":557815,"line_start":496,"line_end":496,"column_start":43,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557868,"byte_end":557870,"line_start":497,"line_end":497,"column_start":50,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558135,"byte_end":558137,"line_start":504,"line_end":504,"column_start":51,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558197,"byte_end":558198,"line_start":508,"line_end":508,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558244,"byte_end":558245,"line_start":509,"line_end":509,"column_start":43,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558291,"byte_end":558292,"line_start":510,"line_end":510,"column_start":43,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558417,"byte_end":558418,"line_start":513,"line_end":513,"column_start":51,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558466,"byte_end":558467,"line_start":515,"line_end":515,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558521,"byte_end":558522,"line_start":516,"line_end":516,"column_start":51,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558532,"byte_end":558542,"line_start":518,"line_end":518,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576682,"byte_end":576691,"line_start":318,"line_end":318,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577005,"byte_end":577014,"line_start":333,"line_end":333,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578475,"byte_end":578492,"line_start":373,"line_end":373,"column_start":24,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578546,"byte_end":578563,"line_start":375,"line_end":375,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578758,"byte_end":578775,"line_start":387,"line_end":387,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2595},{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2596,"byte_end":2600,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2693,"byte_end":2697,"line_start":86,"line_end":86,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":363}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":104581,"byte_end":104606,"line_start":672,"line_end":672,"column_start":9,"column_end":34},"ref_id":{"krate":0,"index":733}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":104650,"byte_end":104654,"line_start":676,"line_end":676,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":948}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2707,"byte_end":2716,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1017}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2756,"byte_end":2769,"line_start":92,"line_end":92,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":1091}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2780,"byte_end":2782,"line_start":94,"line_end":94,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1098}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io.rs","byte_start":192285,"byte_end":192288,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1099}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2802,"byte_end":2808,"line_start":97,"line_end":97,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1209}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2838,"byte_end":2843,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2065}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2853,"byte_end":2857,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2091}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2867,"byte_end":2871,"line_start":102,"line_end":102,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2123}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2891,"byte_end":2897,"line_start":104,"line_end":104,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2213}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2907,"byte_end":2912,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2229}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2922,"byte_end":2926,"line_start":106,"line_end":106,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2273}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\lib.rs","byte_start":2973,"byte_end":2982,"line_start":111,"line_end":111,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2518}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\debug.rs","byte_start":5763,"byte_end":5769,"line_start":67,"line_end":67,"column_start":27,"column_end":33},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":10},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":12933,"byte_end":12941,"line_start":162,"line_end":162,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24101,"byte_end":24116,"line_start":483,"line_end":483,"column_start":41,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2603},"to":{"krate":0,"index":2291}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":24606,"byte_end":24622,"line_start":498,"line_end":498,"column_start":41,"column_end":57},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2607},"to":{"krate":0,"index":2291}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":25563,"byte_end":25587,"line_start":521,"line_end":521,"column_start":41,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2613},"to":{"krate":0,"index":2291}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\test.rs","byte_start":26033,"byte_end":26057,"line_start":533,"line_end":533,"column_start":19,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2613},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":32323,"byte_end":32333,"line_start":68,"line_end":68,"column_start":19,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":99},"to":{"krate":1,"index":2023}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":32468,"byte_end":32478,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":99},"to":{"krate":1,"index":2034}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":32717,"byte_end":32727,"line_start":85,"line_end":85,"column_start":19,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":99},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":32875,"byte_end":32885,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":35031,"byte_end":35045,"line_start":160,"line_end":160,"column_start":45,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":122},"to":{"krate":0,"index":124}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":35270,"byte_end":35284,"line_start":165,"line_end":165,"column_start":44,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":122},"to":{"krate":0,"index":126}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":37937,"byte_end":37944,"line_start":225,"line_end":225,"column_start":45,"column_end":52},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":131},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":38155,"byte_end":38162,"line_start":233,"line_end":233,"column_start":9,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":41746,"byte_end":41760,"line_start":359,"line_end":359,"column_start":9,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":42687,"byte_end":42691,"line_start":388,"line_end":388,"column_start":22,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":42859,"byte_end":42863,"line_start":397,"line_end":397,"column_start":12,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":42990,"byte_end":42994,"line_start":404,"line_end":404,"column_start":31,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":43778,"byte_end":43782,"line_start":423,"line_end":423,"column_start":9,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":43922,"byte_end":43926,"line_start":430,"line_end":430,"column_start":9,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":48856,"byte_end":48859,"line_start":624,"line_end":624,"column_start":9,"column_end":12},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":50952,"byte_end":50955,"line_start":671,"line_end":671,"column_start":34,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":229},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":51180,"byte_end":51194,"line_start":682,"line_end":682,"column_start":6,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":56040,"byte_end":56055,"line_start":798,"line_end":798,"column_start":9,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":56852,"byte_end":56867,"line_start":821,"line_end":821,"column_start":16,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":66935,"byte_end":66946,"line_start":1152,"line_end":1152,"column_start":6,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\bigint.rs","byte_start":68854,"byte_end":68856,"line_start":1213,"line_end":1213,"column_start":20,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2628},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78591,"byte_end":78593,"line_start":37,"line_end":37,"column_start":19,"column_end":21},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2642},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78615,"byte_end":78616,"line_start":38,"line_end":38,"column_start":19,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2638},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78638,"byte_end":78647,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2634},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78669,"byte_end":78677,"line_start":40,"line_end":40,"column_start":19,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2646},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78816,"byte_end":78818,"line_start":47,"line_end":47,"column_start":28,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2642},"to":{"krate":0,"index":318}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78871,"byte_end":78872,"line_start":50,"line_end":50,"column_start":28,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2638},"to":{"krate":0,"index":318}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\arithmetic\\montgomery.rs","byte_start":78933,"byte_end":78942,"line_start":53,"line_end":53,"column_start":28,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2634},"to":{"krate":0,"index":318}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bssl.rs","byte_start":80979,"byte_end":80985,"line_start":25,"line_end":25,"column_start":37,"column_end":43},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":29217},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\polyfill\\convert.rs","byte_start":84209,"byte_end":84214,"line_start":19,"line_end":19,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":349}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\polyfill\\convert.rs","byte_start":84345,"byte_end":84346,"line_start":30,"line_end":30,"column_start":25,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":357},"to":{"krate":0,"index":352}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":86726,"byte_end":86731,"line_start":55,"line_end":55,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":1,"index":5923},"to":{"krate":0,"index":384}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87284,"byte_end":87294,"line_start":73,"line_end":73,"column_start":40,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":388},"to":{"krate":0,"index":384}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87576,"byte_end":87586,"line_start":87,"line_end":87,"column_start":45,"column_end":55},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":388},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":87816,"byte_end":87826,"line_start":95,"line_end":95,"column_start":24,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93395,"byte_end":93405,"line_start":248,"line_end":248,"column_start":40,"column_end":50},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":412},"to":{"krate":0,"index":384}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93687,"byte_end":93697,"line_start":262,"line_end":262,"column_start":45,"column_end":55},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":412},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":93927,"byte_end":93937,"line_start":270,"line_end":270,"column_start":24,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96827,"byte_end":96830,"line_start":362,"line_end":362,"column_start":22,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":96984,"byte_end":96987,"line_start":370,"line_end":370,"column_start":25,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97089,"byte_end":97092,"line_start":379,"line_end":379,"column_start":6,"column_end":9},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97402,"byte_end":97412,"line_start":393,"line_end":393,"column_start":27,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":450},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":97745,"byte_end":97755,"line_start":407,"line_end":407,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":98361,"byte_end":98371,"line_start":430,"line_end":430,"column_start":50,"column_end":60},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":450},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":99052,"byte_end":99063,"line_start":455,"line_end":455,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":101906,"byte_end":101917,"line_start":553,"line_end":553,"column_start":27,"column_end":38},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103114,"byte_end":103123,"line_start":596,"line_end":596,"column_start":6,"column_end":15},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103681,"byte_end":103690,"line_start":627,"line_end":627,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":495},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103783,"byte_end":103792,"line_start":633,"line_end":633,"column_start":13,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":495},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead.rs","byte_start":103892,"byte_end":103895,"line_start":640,"line_end":640,"column_start":22,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":510},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes.rs","byte_start":105714,"byte_end":105717,"line_start":30,"line_end":30,"column_start":6,"column_end":9},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\aes.rs","byte_start":114783,"byte_end":114789,"line_start":329,"line_end":329,"column_start":33,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":1,"index":29217},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\block.rs","byte_start":126436,"byte_end":126441,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\block.rs","byte_start":127612,"byte_end":127617,"line_start":72,"line_end":72,"column_start":36,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2696},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\block.rs","byte_start":127954,"byte_end":127959,"line_start":86,"line_end":86,"column_start":33,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2696},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\block.rs","byte_start":128106,"byte_end":128111,"line_start":93,"line_end":93,"column_start":33,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2696},"to":{"krate":1,"index":1770}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha.rs","byte_start":130383,"byte_end":130386,"line_start":25,"line_end":25,"column_start":6,"column_end":9},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":143934,"byte_end":143944,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":145443,"byte_end":145453,"line_start":91,"line_end":91,"column_start":6,"column_end":16},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\chacha20_poly1305_openssh.rs","byte_start":147614,"byte_end":147617,"line_start":151,"line_end":151,"column_start":6,"column_end":9},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\gcm.rs","byte_start":149614,"byte_end":149617,"line_start":21,"line_end":21,"column_start":6,"column_end":9},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\gcm.rs","byte_start":151318,"byte_end":151325,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":158823,"byte_end":158828,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":159539,"byte_end":159544,"line_start":58,"line_end":58,"column_start":33,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":839},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":160003,"byte_end":160010,"line_start":80,"line_end":80,"column_start":24,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":161428,"byte_end":161430,"line_start":135,"line_end":135,"column_start":47,"column_end":49},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":866},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":161557,"byte_end":161559,"line_start":144,"line_end":144,"column_start":6,"column_end":8},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":161760,"byte_end":161768,"line_start":156,"line_end":156,"column_start":22,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":2056},"to":{"krate":0,"index":875}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":161895,"byte_end":161904,"line_start":164,"line_end":164,"column_start":23,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2999},"to":{"krate":0,"index":875}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\nonce.rs","byte_start":162077,"byte_end":162089,"line_start":173,"line_end":173,"column_start":23,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3010},"to":{"krate":0,"index":875}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\poly1305.rs","byte_start":163282,"byte_end":163285,"line_start":27,"line_end":27,"column_start":36,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":897},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\poly1305.rs","byte_start":163615,"byte_end":163622,"line_start":46,"line_end":46,"column_start":6,"column_end":13},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\poly1305.rs","byte_start":166697,"byte_end":166702,"line_start":147,"line_end":147,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":169986,"byte_end":170005,"line_start":37,"line_end":37,"column_start":50,"column_end":69},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":960},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":170319,"byte_end":170338,"line_start":47,"line_end":47,"column_start":6,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":171690,"byte_end":171699,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":172093,"byte_end":172102,"line_start":121,"line_end":121,"column_start":20,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\aead\\quic.rs","byte_start":172195,"byte_end":172204,"line_start":127,"line_end":127,"column_start":13,"column_end":22},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178637,"byte_end":178646,"line_start":85,"line_end":85,"column_start":13,"column_end":22},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1030},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":178669,"byte_end":178678,"line_start":86,"line_end":86,"column_start":20,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1030},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":179176,"byte_end":179195,"line_start":106,"line_end":106,"column_start":6,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":180793,"byte_end":180802,"line_start":160,"line_end":160,"column_start":22,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2735},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":180900,"byte_end":180909,"line_start":166,"line_end":166,"column_start":27,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2735},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181174,"byte_end":181183,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181515,"byte_end":181532,"line_start":189,"line_end":189,"column_start":24,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1050},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181586,"byte_end":181603,"line_start":191,"line_end":191,"column_start":26,"column_end":43},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1050},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":181824,"byte_end":181841,"line_start":203,"line_end":203,"column_start":48,"column_end":65},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1050},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\agreement.rs","byte_start":182165,"byte_end":182182,"line_start":215,"line_end":215,"column_start":22,"column_end":39},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\bits.rs","byte_start":186768,"byte_end":186777,"line_start":22,"line_end":22,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":203693,"byte_end":203710,"line_start":26,"line_end":26,"column_start":22,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1140},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":203773,"byte_end":203790,"line_start":32,"line_end":32,"column_start":6,"column_end":23},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":203875,"byte_end":203892,"line_start":38,"line_end":38,"column_start":22,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1140},"to":{"krate":0,"index":1137}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":204141,"byte_end":204147,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":204379,"byte_end":204385,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1149},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\writer.rs","byte_start":204552,"byte_end":204558,"line_start":68,"line_end":68,"column_start":22,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1149},"to":{"krate":0,"index":1137}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208067,"byte_end":208075,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\io\\positive.rs","byte_start":208816,"byte_end":208824,"line_start":44,"line_end":44,"column_start":6,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\cpu.rs","byte_start":215147,"byte_end":215154,"line_start":185,"line_end":185,"column_start":10,"column_end":17},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\cpu.rs","byte_start":216744,"byte_end":216751,"line_start":246,"line_end":246,"column_start":10,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245299,"byte_end":245304,"line_start":150,"line_end":150,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":1272}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245311,"byte_end":245315,"line_start":151,"line_end":151,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1862},"to":{"krate":0,"index":1272}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245322,"byte_end":245325,"line_start":152,"line_end":152,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1915},"to":{"krate":0,"index":1272}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245347,"byte_end":245356,"line_start":153,"line_end":153,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":1948},"to":{"krate":0,"index":1272}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245363,"byte_end":245369,"line_start":154,"line_end":154,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":1973},"to":{"krate":0,"index":1272}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245391,"byte_end":245396,"line_start":155,"line_end":155,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":1978},"to":{"krate":0,"index":1272}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245418,"byte_end":245421,"line_start":156,"line_end":156,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1969},"to":{"krate":0,"index":1272}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245624,"byte_end":245628,"line_start":168,"line_end":168,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":1272},"to":{"krate":0,"index":1277}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245631,"byte_end":245637,"line_start":168,"line_end":168,"column_start":20,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":1983},"to":{"krate":0,"index":1277}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245655,"byte_end":245658,"line_start":168,"line_end":168,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":1,"index":1994},"to":{"krate":0,"index":1277}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":245974,"byte_end":245982,"line_start":180,"line_end":180,"column_start":15,"column_end":23},"kind":{"Impl":{"id":104}},"from":{"krate":1,"index":11020},"to":{"krate":0,"index":1272}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":246328,"byte_end":246336,"line_start":196,"line_end":196,"column_start":15,"column_end":23},"kind":{"Impl":{"id":105}},"from":{"krate":1,"index":11020},"to":{"krate":0,"index":1277}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":248339,"byte_end":248347,"line_start":272,"line_end":272,"column_start":15,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":1,"index":11020},"to":{"krate":0,"index":1272}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest\\sha2.rs","byte_start":248705,"byte_end":248713,"line_start":288,"line_end":288,"column_start":15,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":1,"index":11020},"to":{"krate":0,"index":1277}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":220063,"byte_end":220075,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":223094,"byte_end":223101,"line_start":141,"line_end":141,"column_start":6,"column_end":13},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226200,"byte_end":226206,"line_start":235,"line_end":235,"column_start":6,"column_end":12},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226403,"byte_end":226409,"line_start":243,"line_end":243,"column_start":22,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2837},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":226577,"byte_end":226583,"line_start":250,"line_end":250,"column_start":27,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2837},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227785,"byte_end":227794,"line_start":293,"line_end":293,"column_start":20,"column_end":29},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1331},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\digest.rs","byte_start":227887,"byte_end":227896,"line_start":299,"line_end":299,"column_start":13,"column_end":22},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1331},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":257778,"byte_end":257792,"line_start":41,"line_end":41,"column_start":6,"column_end":20},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":265121,"byte_end":265135,"line_start":221,"line_end":221,"column_start":29,"column_end":43},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":2578}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\signing.rs","byte_start":265349,"byte_end":265358,"line_start":232,"line_end":232,"column_start":22,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2899},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267551,"byte_end":267566,"line_start":25,"line_end":25,"column_start":27,"column_end":42},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1446},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":267948,"byte_end":267963,"line_start":38,"line_end":38,"column_start":43,"column_end":58},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1446},"to":{"krate":0,"index":2582}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ed25519\\verification.rs","byte_start":269344,"byte_end":269359,"line_start":76,"line_end":76,"column_start":25,"column_end":40},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1446},"to":{"krate":0,"index":2598}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":276636,"byte_end":276637,"line_start":36,"line_end":36,"column_start":19,"column_end":20},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1517},"to":{"krate":0,"index":1516}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":276707,"byte_end":276711,"line_start":40,"line_end":40,"column_start":19,"column_end":23},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":276854,"byte_end":276858,"line_start":49,"line_end":49,"column_start":6,"column_end":10},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":277534,"byte_end":277542,"line_start":75,"line_end":75,"column_start":6,"column_end":14},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\ops.rs","byte_start":278354,"byte_end":278359,"line_start":110,"line_end":110,"column_start":6,"column_end":11},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\scalar.rs","byte_start":280655,"byte_end":280661,"line_start":23,"line_end":23,"column_start":6,"column_end":12},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\scalar.rs","byte_start":281964,"byte_end":281976,"line_start":60,"line_end":60,"column_start":6,"column_end":18},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\curve25519\\scalar.rs","byte_start":282264,"byte_end":282270,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1562},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\keys.rs","byte_start":282621,"byte_end":282628,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\keys.rs","byte_start":283095,"byte_end":283099,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\keys.rs","byte_start":284683,"byte_end":284692,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2909},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314146,"byte_end":314167,"line_start":52,"line_end":52,"column_start":20,"column_end":41},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1698},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314260,"byte_end":314281,"line_start":58,"line_end":58,"column_start":13,"column_end":34},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1698},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314310,"byte_end":314331,"line_start":60,"line_end":60,"column_start":25,"column_end":46},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":2598}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":314575,"byte_end":314587,"line_start":71,"line_end":71,"column_start":6,"column_end":18},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":321168,"byte_end":321180,"line_start":246,"line_end":246,"column_start":29,"column_end":41},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1710},"to":{"krate":0,"index":2578}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\signing.rs","byte_start":321428,"byte_end":321437,"line_start":259,"line_end":259,"column_start":22,"column_end":31},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2950},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":331311,"byte_end":331337,"line_start":53,"line_end":53,"column_start":43,"column_end":69},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1753},"to":{"krate":0,"index":2582}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":331971,"byte_end":331997,"line_start":74,"line_end":74,"column_start":6,"column_end":32},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ecdsa\\verification.rs","byte_start":336302,"byte_end":336328,"line_start":171,"line_end":171,"column_start":25,"column_end":51},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1753},"to":{"krate":0,"index":2598}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":344490,"byte_end":344495,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":345382,"byte_end":345391,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":348264,"byte_end":348277,"line_start":179,"line_end":179,"column_start":6,"column_end":19},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":349109,"byte_end":349121,"line_start":211,"line_end":211,"column_start":6,"column_end":18},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":350448,"byte_end":350457,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops.rs","byte_start":351600,"byte_end":351615,"line_start":281,"line_end":281,"column_start":6,"column_end":21},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\ec\\suite_b\\ops\\elem.rs","byte_start":383634,"byte_end":383638,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\endian.rs","byte_start":422809,"byte_end":422813,"line_start":4,"line_end":4,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1862},"to":{"krate":0,"index":2056}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\endian.rs","byte_start":422816,"byte_end":422820,"line_start":4,"line_end":4,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":2056}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\endian.rs","byte_start":422826,"byte_end":422831,"line_start":4,"line_end":4,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":2056}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\endian.rs","byte_start":422842,"byte_end":422848,"line_start":4,"line_end":4,"column_start":57,"column_end":63},"kind":"SuperTrait","from":{"krate":0,"index":2598},"to":{"krate":0,"index":2056}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":427949,"byte_end":427960,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428142,"byte_end":428153,"line_start":88,"line_end":88,"column_start":29,"column_end":40},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3055},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428544,"byte_end":428555,"line_start":106,"line_end":106,"column_start":38,"column_end":49},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3055},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":428681,"byte_end":428692,"line_start":112,"line_end":112,"column_start":47,"column_end":58},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3055},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":430373,"byte_end":430384,"line_start":151,"line_end":151,"column_start":6,"column_end":17},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":431864,"byte_end":431875,"line_start":213,"line_end":213,"column_start":29,"column_end":40},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3065},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\error.rs","byte_start":432026,"byte_end":432037,"line_start":219,"line_end":219,"column_start":28,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3055},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433169,"byte_end":433178,"line_start":27,"line_end":27,"column_start":6,"column_end":15},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433761,"byte_end":433770,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3073},"to":{"krate":0,"index":2109}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":433939,"byte_end":433943,"line_start":58,"line_end":58,"column_start":6,"column_end":10},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435235,"byte_end":435239,"line_start":90,"line_end":90,"column_start":35,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3088},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":435759,"byte_end":435762,"line_start":111,"line_end":111,"column_start":6,"column_end":9},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":436823,"byte_end":436826,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3093},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hkdf.rs","byte_start":437336,"byte_end":437339,"line_start":168,"line_end":168,"column_start":18,"column_end":21},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":443449,"byte_end":443458,"line_start":118,"line_end":118,"column_start":6,"column_end":15},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444365,"byte_end":444368,"line_start":148,"line_end":148,"column_start":22,"column_end":25},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3126},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":444943,"byte_end":444946,"line_start":172,"line_end":172,"column_start":27,"column_end":30},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3134},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":445166,"byte_end":445169,"line_start":180,"line_end":180,"column_start":6,"column_end":9},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448639,"byte_end":448648,"line_start":269,"line_end":269,"column_start":24,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3111},"to":{"krate":0,"index":2109}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":448772,"byte_end":448775,"line_start":275,"line_end":275,"column_start":41,"column_end":44},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3134},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449289,"byte_end":449296,"line_start":294,"line_end":294,"column_start":27,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3139},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\hmac.rs","byte_start":449507,"byte_end":449514,"line_start":302,"line_end":302,"column_start":6,"column_end":13},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":483853,"byte_end":483861,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\pkcs8.rs","byte_start":488017,"byte_end":488025,"line_start":170,"line_end":170,"column_start":22,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2264},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":490966,"byte_end":490978,"line_start":31,"line_end":31,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":2291},"to":{"krate":0,"index":2275}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491120,"byte_end":491121,"line_start":36,"line_end":36,"column_start":26,"column_end":27},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2278},"to":{"krate":0,"index":2275}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":491558,"byte_end":491564,"line_start":52,"line_end":52,"column_start":32,"column_end":38},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492048,"byte_end":492053,"line_start":76,"line_end":76,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":5923},"to":{"krate":0,"index":2291}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492224,"byte_end":492229,"line_start":81,"line_end":81,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":2293}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492902,"byte_end":492923,"line_start":104,"line_end":104,"column_start":48,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":2293},"to":{"krate":0,"index":2297}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":492961,"byte_end":492962,"line_start":105,"line_end":105,"column_start":35,"column_end":36},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2299},"to":{"krate":0,"index":2297}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495315,"byte_end":495327,"line_start":149,"line_end":149,"column_start":6,"column_end":18},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495476,"byte_end":495488,"line_start":157,"line_end":157,"column_start":31,"column_end":43},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3216},"to":{"krate":0,"index":2291}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rand.rs","byte_start":495654,"byte_end":495666,"line_start":164,"line_end":164,"column_start":32,"column_end":44},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3216},"to":{"krate":0,"index":2598}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506316,"byte_end":506320,"line_start":23,"line_end":23,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1864},"to":{"krate":0,"index":2335}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506338,"byte_end":506344,"line_start":23,"line_end":23,"column_start":52,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":2598},"to":{"krate":0,"index":2335}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506358,"byte_end":506363,"line_start":23,"line_end":23,"column_start":72,"column_end":77},"kind":"SuperTrait","from":{"krate":1,"index":5923},"to":{"krate":0,"index":2335}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":506714,"byte_end":506721,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":2335},"to":{"krate":0,"index":2337}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507137,"byte_end":507144,"line_start":48,"line_end":48,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2335},"to":{"krate":0,"index":2339}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507726,"byte_end":507731,"line_start":69,"line_end":69,"column_start":32,"column_end":37},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3223},"to":{"krate":0,"index":2598}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507753,"byte_end":507758,"line_start":71,"line_end":71,"column_start":18,"column_end":23},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3223},"to":{"krate":0,"index":2335}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":507898,"byte_end":507903,"line_start":78,"line_end":78,"column_start":22,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3223},"to":{"krate":0,"index":2337}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":508202,"byte_end":508207,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3223},"to":{"krate":0,"index":2339}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512280,"byte_end":512283,"line_start":223,"line_end":223,"column_start":32,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3240},"to":{"krate":0,"index":2598}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512474,"byte_end":512477,"line_start":229,"line_end":229,"column_start":18,"column_end":21},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3240},"to":{"krate":0,"index":2335}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":512591,"byte_end":512594,"line_start":235,"line_end":235,"column_start":22,"column_end":25},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3240},"to":{"krate":0,"index":2337}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":515097,"byte_end":515100,"line_start":307,"line_end":307,"column_start":23,"column_end":26},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3240},"to":{"krate":0,"index":2339}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\padding.rs","byte_start":518329,"byte_end":518339,"line_start":410,"line_end":410,"column_start":6,"column_end":16},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa.rs","byte_start":505242,"byte_end":505243,"line_start":67,"line_end":67,"column_start":39,"column_end":40},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3252},"to":{"krate":0,"index":128}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":526274,"byte_end":526277,"line_start":34,"line_end":34,"column_start":6,"column_end":9},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":528783,"byte_end":528796,"line_start":88,"line_end":88,"column_start":43,"column_end":56},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3247},"to":{"krate":0,"index":2582}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":529304,"byte_end":529317,"line_start":108,"line_end":108,"column_start":25,"column_end":38},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3247},"to":{"krate":0,"index":2598}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534259,"byte_end":534281,"line_start":231,"line_end":231,"column_start":24,"column_end":46},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3272},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534354,"byte_end":534376,"line_start":233,"line_end":233,"column_start":26,"column_end":48},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3272},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\verification.rs","byte_start":534561,"byte_end":534583,"line_start":245,"line_end":245,"column_start":9,"column_end":31},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":539055,"byte_end":539065,"line_start":43,"line_end":43,"column_start":6,"column_end":16},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554048,"byte_end":554058,"line_start":389,"line_end":389,"column_start":29,"column_end":39},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2455},"to":{"krate":0,"index":2578}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554300,"byte_end":554319,"line_start":401,"line_end":401,"column_start":22,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3282},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":554451,"byte_end":554470,"line_start":409,"line_end":409,"column_start":6,"column_end":25},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":555502,"byte_end":555514,"line_start":440,"line_end":440,"column_start":24,"column_end":36},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557630,"byte_end":557631,"line_start":490,"line_end":490,"column_start":23,"column_end":24},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3289},"to":{"krate":0,"index":94}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557677,"byte_end":557678,"line_start":491,"line_end":491,"column_start":43,"column_end":44},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3289},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557731,"byte_end":557732,"line_start":492,"line_end":492,"column_start":50,"column_end":51},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3289},"to":{"krate":0,"index":126}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557813,"byte_end":557815,"line_start":496,"line_end":496,"column_start":43,"column_end":45},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3293},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":557868,"byte_end":557870,"line_start":497,"line_end":497,"column_start":50,"column_end":52},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3293},"to":{"krate":0,"index":126}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558135,"byte_end":558137,"line_start":504,"line_end":504,"column_start":51,"column_end":53},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3293},"to":{"krate":0,"index":124}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558197,"byte_end":558198,"line_start":508,"line_end":508,"column_start":23,"column_end":24},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":94}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558244,"byte_end":558245,"line_start":509,"line_end":509,"column_start":43,"column_end":44},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558291,"byte_end":558292,"line_start":510,"line_end":510,"column_start":43,"column_end":44},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558417,"byte_end":558418,"line_start":513,"line_end":513,"column_start":51,"column_end":52},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":124}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558466,"byte_end":558467,"line_start":515,"line_end":515,"column_start":44,"column_end":45},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558521,"byte_end":558522,"line_start":516,"line_end":516,"column_start":51,"column_end":52},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":126}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\rsa\\signing.rs","byte_start":558532,"byte_end":558542,"line_start":518,"line_end":518,"column_start":6,"column_end":16},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":576682,"byte_end":576691,"line_start":318,"line_end":318,"column_start":6,"column_end":15},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577005,"byte_end":577014,"line_start":333,"line_end":333,"column_start":22,"column_end":31},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3301},"to":{"krate":1,"index":1767}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577185,"byte_end":577190,"line_start":340,"line_end":340,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":5923},"to":{"krate":0,"index":2578}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577193,"byte_end":577197,"line_start":340,"line_end":340,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":1852},"to":{"krate":0,"index":2578}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577200,"byte_end":577205,"line_start":340,"line_end":340,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":2578}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577208,"byte_end":577212,"line_start":340,"line_end":340,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":1864},"to":{"krate":0,"index":2578}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577949,"byte_end":577954,"line_start":356,"line_end":356,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":5923},"to":{"krate":0,"index":2582}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577957,"byte_end":577961,"line_start":356,"line_end":356,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":1,"index":1864},"to":{"krate":0,"index":2582}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":577972,"byte_end":577978,"line_start":356,"line_end":356,"column_start":68,"column_end":74},"kind":"SuperTrait","from":{"krate":0,"index":2598},"to":{"krate":0,"index":2582}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578475,"byte_end":578492,"line_start":373,"line_end":373,"column_start":24,"column_end":41},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2584},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578546,"byte_end":578563,"line_start":375,"line_end":375,"column_start":26,"column_end":43},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2584},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\Schwartza\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ring-0.16.12\\src\\signature.rs","byte_start":578758,"byte_end":578775,"line_start":387,"line_end":387,"column_start":22,"column_end":39},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2584},"to":{"krate":4294967295,"index":4294967295}}]}